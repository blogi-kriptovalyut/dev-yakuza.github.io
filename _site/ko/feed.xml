<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dev-yakuza.github.io/ko/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dev-yakuza.github.io/ko/" rel="alternate" type="text/html" /><updated>2018-09-11T22:26:55+09:00</updated><id>https://dev-yakuza.github.io/</id><title type="html">프로그래밍으로 예술을 꿈꾼다</title><subtitle>우리는 프로그래밍으로 예술을 꿈꾸는 프로그래밍 예술가들이다. 무에서 유를 창조하는 예술가들 처럼 우리도 프로그래밍이라는 툴로 무에서 유를 창조하는 예술가가 되기를 바란다.</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ko"><title type="html">폴더 구조</title><link href="https://dev-yakuza.github.io/ko/jekyll/directory_structure/" rel="alternate" type="text/html" title="폴더 구조" /><published>2018-09-10T00:00:00+09:00</published><updated>2018-09-10T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/jekyll/index-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/jekyll/directory_structure/">&lt;h2 id=&quot;jekyll-폴더-구조&quot;&gt;jekyll 폴더 구조&lt;/h2&gt;
&lt;p&gt;여기서 설명하는 폴더 구조는 jekyll의 기본적인 폴더 구조 이외에도, 우리가 사용하는 테마(&lt;a href=&quot;http://jekyllthemes.org/themes/clean-blog/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Clean Blog theme&lt;/a&gt;)의 폴더 구조도 같이 설명하고 있습니다. 우리가 사용하는 테마가 궁굼하신 분은 이전 블로그인 &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/theme/&quot; target=&quot;_blank&quot;&gt;테마 설정&lt;/a&gt;을 확인하세요.&lt;/p&gt;

&lt;h2 id=&quot;기본-폴더-구조&quot;&gt;기본 폴더 구조&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;jekyll 홈페이지에 친절하게도 기본 폴더 구조에 대한 설명이 자세히 나와있습니다.&lt;/li&gt;
  &lt;li&gt;jekyll 홈페이지: &lt;a href=&quot;https://jekyllrb.com/docs/structure/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://jekyllrb.com/docs/structure/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;여기에서는 기본 폴더 구조와 우리가 사용하는 폴더 구조를 설명합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기본-폴더-구조-1&quot;&gt;기본 폴더 구조&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- _config.yml
|-- _data
|   |-- members.yml
|-- _drafts
|   |-- begin-with-the-crazy-ideas.md
|   |-- on-simplicity-in-technology.md
|-- _includes
|   |-- footer.html
|   |-- header.html
|-- _layouts
|   |-- default.html
|   |-- post.html
|-- _posts
|   |-- 2007-10-29-why-every-programmer-should-play-nethack.md
|   |-- 2009-04-26-barcamp-boston-4-roundup.md
|-- _sass
|   |-- _base.scss
|   |-- _layout.scss
|-- _site
|-- .jekyll-metadata
|-- index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;파일/폴더&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;_config.xml&lt;/td&gt;
      &lt;td&gt;jekyll 블로그를 구성하기 위한 기본적인 설정이 저장되어있습니다.&lt;br /&gt;자세한 내용은 &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/configure/&quot; target=&quot;_blank&quot;&gt;jekyll 설정&lt;/a&gt;을 참고하세요.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_data&lt;/td&gt;
      &lt;td&gt;데이터 파일을 저장하는 곳입니다.&lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;.yml&lt;/code&gt;,  &lt;code class=&quot;highlighter-rouge&quot;&gt;.yaml&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.json&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.csv&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;.tsv&lt;/code&gt; 파일을 저장하면 됩니다.&lt;br /&gt;우리는 이 폴더를 사용하지 않습니다.&lt;br /&gt;우리도 블로그 하단에 표시되는 블로그 리스트를 json 타입으로 저장하고 비동기로 로딩하지만, 관리상에 이유로 json을 이곳에 보관하지 않습니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_drafts&lt;/td&gt;
      &lt;td&gt;아직 공개하지 않은 블로그 포스트를 보관하는 폴더입니다.&lt;br /&gt;우리는 사실 블로그 작성과 github에 공개하는 블로그를 따로 관리하기 때문에 이 폴더는 사용하지 않고 있습니다.&lt;br /&gt;우리가 github을 어떻게 활용하고 있는지는 &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/integrate_github/&quot; target=&quot;_blank&quot;&gt;github 연동&lt;/a&gt;에서 소개하겠습니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_includes&lt;/td&gt;
      &lt;td&gt;jekyll도 pug처럼 공통된 컴포넌트를 만들고 삽입하는 기능이 있습니다.(&lt;code class=&quot;highlighter-rouge&quot;&gt;{ % include 파일명 % }&lt;/code&gt;) 이 기능을 사용할 때 포함될 파일을 저장하는 곳입니다.(ex&amp;gt; footer.html / header.html)&lt;br /&gt;우리는 페이지 단위의 공통 요소를 &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt;폴더에 저장하고 블로그 포스트 단위에 공통 요소는 &lt;code class=&quot;highlighter-rouge&quot;&gt;{ % include_relative 폴더/파일명 % }&lt;/code&gt;을 이용하여 블로그 폴더 하단에 폴더를 만들어서 관리하고 있습니다.(ex&amp;gt; code.md / link.md)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_layouts&lt;/td&gt;
      &lt;td&gt;템플릿을 저장하는 폴더입니다. (ex&amp;gt; default.html / folder.html)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_posts&lt;/td&gt;
      &lt;td&gt;블로그 포스트를 저장하는 곳입니다. 파일명을 &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.md&lt;/code&gt;로 저장하여 관리합니다.&lt;br /&gt; 우리는 다국어 기능을 사용하기 때문에 하단에 폴더를 만들어 관리합니다.&lt;br /&gt; 다국어에 관해서는 &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/plugin_multi_language/&quot; target=&quot;_blank&quot;&gt;다국어 플러그인&lt;/a&gt;를 참고하세요.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_sass&lt;/td&gt;
      &lt;td&gt;디자인을 위한 sass 파일을 저장하는 곳입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_site&lt;/td&gt;
      &lt;td&gt;jekyll에 의해 빌드된 파일들이 저장되는 곳입니다.&lt;br /&gt;우리는 이 폴더를 github에 업로드하여 블로그를 작성하고 있습니다.(참고: &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/integrate_github/&quot; target=&quot;_blank&quot;&gt;github 연동&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;.jekyll-metadata&lt;/td&gt;
      &lt;td&gt;jekyll이 변경된 내용만을 빌드하기 위해 관리하는 파일입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;에 추가하는 것을 추천합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;index.html&lt;/td&gt;
      &lt;td&gt;Top 페이지로 변환될 파일입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;이외에&lt;br /&gt;파일/폴더&lt;/td&gt;
      &lt;td&gt;위에서 언급하지 않은 파일, 폴더들은 빌드시 &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;폴더 하단으로 복사됩니다. 빌드시 복사를 원치 않는 파일/폴더는 &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;파일에 &lt;code class=&quot;highlighter-rouge&quot;&gt;exclude:&lt;/code&gt; 항목에 기록해야합니다.(참고: &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/configure/&quot; target=&quot;_blank&quot;&gt;jekyll 설정&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;위에서 언급한 &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;.md&lt;/code&gt; 파일은 서로 대체 가능합니다. 즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt;로 &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.md&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.html&lt;/code&gt;로 작성해도 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;우리가-사용하는-폴더-구조&quot;&gt;우리가 사용하는 폴더 구조&lt;/h2&gt;
&lt;p&gt;우리는 플러그인을 사용하여 다국어 지원, 페이지 구분 등을 사용하고 있습니다. 그로 인해 폴더 구조가 기본 폴더 구조와 조금 다릅니다. 다르다기보다는 관리를 위한 구조를 가지고 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- _config.yml
|-- _includes
|   |-- footer.html
|   |-- header.html
|-- _layouts
|   |-- default.html
|   |-- post.html
|-- _posts
|   |-- jekyll
|   |   |-- 2018-09-10-directory-structure
|   |   |   |-- common
|   |   |   |-- 2018-09-10-index-en.md
|   |   |   |-- 2018-09-10-index-ja.md
|   |   |   |-- 2018-09-10-index-ko.md
|-- _sass
|   |-- _base.scss
|   |-- _layout.scss
|-- _site
|-- categories
|   |-- jekyll
|   |   |-- json
|   |   |   |-- index-en.md
|   |   |   |-- index-ja.md
|   |   |   |-- index-ko.md
|   |   |-- index-en.md
|   |   |-- index-ja.md
|   |   |-- index-ko.md
|-- contact
|   |-- index-en.md
|   |-- index-ja.md
|   |-- index-ko.md
|-- home
|   |-- index-en.md
|   |-- index-ja.md
|   |-- index-ko.md
|-- 404.md
|-- sitemap.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;파일/폴더&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;_config.yml&lt;/td&gt;
      &lt;td&gt;기본 폴더 구조와 동일&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_includes&lt;/td&gt;
      &lt;td&gt;페이지 단위의 공통 요소를 &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt;폴더에 저장한다. (ex&amp;gt; footer.html, head.html, navbar.html 등)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_layouts&lt;/td&gt;
      &lt;td&gt;우리가 사용하는 테마의 기본 템플릿이 저장되어 있다.&lt;br /&gt;우리가 사용하는 테마가 궁금하다면 이전 블로그(&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/theme/&quot; target=&quot;_blank&quot;&gt;테마 설정&lt;/a&gt;)를 확인하기 바란다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_posts&lt;/td&gt;
      &lt;td&gt;포스트 폴더는 하위에 카테고리별 폴더를 가지고 있다.&lt;br /&gt;카테고리별 폴더는 포스트별 폴더를 가지고 있다.&lt;br /&gt;포스트별 폴더는 다국어를 지원하기 위한 파일과 다국어 파일안에서 공통으로 사용되는 부분을 보관하는 폴더로 구성되어 있다. 소스코드, 위에서 표시하고 있는 폴더 구조등 다국어와 상관없이 공통으로 활용되는 부분들이 &lt;code class=&quot;highlighter-rouge&quot;&gt;common&lt;/code&gt; 폴더 안에 보관되어 있다.(참고: &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/plugin_multi_language/&quot; target=&quot;_blank&quot;&gt;다국어 플러그인&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_sass&lt;/td&gt;
      &lt;td&gt;기본 폴더 구조와 동일&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_site&lt;/td&gt;
      &lt;td&gt;기본 폴더 구조와 동일&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;categories&lt;/td&gt;
      &lt;td&gt;블로그를 카테고리별로 관리하기 위해 별도의 페이지를 제작했다. 처음에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt;폴더에서 관리하였으나 카테고리로 제작한 페이지도 포스트로 인식하는 문제가 있어, 현재는 별도의 폴더로 관리하고 있다.&lt;br /&gt;또한 카테고리 폴더 하위에 &lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt;폴더를 만들고 지금 보고 있는 페이지 하단에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;posts&lt;/code&gt;리스트를 표시하기 위한 json 데이터를 만드는 페이지를 저장하고 있다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;contact&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://dev-yakuza.github.io/contact/&quot; target=&quot;_blank&quot;&gt;문의하기&lt;/a&gt;페이지의 다국어 지원을 관리하기 위한 폴더이다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;home&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://dev-yakuza.github.io&quot; target=&quot;_blank&quot;&gt;Top&lt;/a&gt;페이지의 다국어 지원을 관리하기 위한 폴더이다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;404.md&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;404 페이지&lt;/code&gt;는 다국어 지원이 안되서 하나에 파일로 관리하고 있다.&lt;br /&gt;jekyll은 404 에러가 발생하면 404 페이지를 호출하는데 이 페이지는 하나만 지원이 가능다.(우리가 설정하는 방법을 모르는 것일 수도 있다.)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sitemap.xml&lt;/td&gt;
      &lt;td&gt;Search Engine을 위해 사이트 맵을 생성하는 파일이다. 자세한 내용은 &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/seo/&quot; target=&quot;_blank&quot;&gt;SEO 지원&lt;/a&gt;에서 설명하도록 하겠다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;정리&quot;&gt;정리&lt;/h2&gt;
&lt;p&gt;이곳에서는 간단하게 현재 사용하는 폴더 구조에 대해 설명하였습니다. 이런 폴더 구조를 가지게 된 이유는 테마, 플러그인, SEO 지원 등 다양한 이유가 있습니다. 그런 이유들을 확인하고 싶으시면 해당 블로그를 확인하시길 바랍니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/theme/&quot; target=&quot;_blank&quot;&gt;테마 설정&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/configure/&quot; target=&quot;_blank&quot;&gt;jekyll 설정&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/plugin_multi_language/&quot; target=&quot;_blank&quot;&gt;다국어 플러그인&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/seo/&quot; target=&quot;_blank&quot;&gt;SEO 지원&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/integrate_github/&quot; target=&quot;_blank&quot;&gt;github 연동&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;참고-사이트&quot;&gt;참고 사이트&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;jekyll 홈페이지: &lt;a href=&quot;https://jekyllrb.com/docs/structure/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://jekyllrb.com/docs/structure/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">jekyll 폴더 구조 여기서 설명하는 폴더 구조는 jekyll의 기본적인 폴더 구조 이외에도, 우리가 사용하는 테마(Clean Blog theme)의 폴더 구조도 같이 설명하고 있습니다. 우리가 사용하는 테마가 궁굼하신 분은 이전 블로그인 테마 설정을 확인하세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/jekyll/directory_structure.png" /></entry><entry xml:lang="ko"><title type="html">테마 설정</title><link href="https://dev-yakuza.github.io/ko/jekyll/theme/" rel="alternate" type="text/html" title="테마 설정" /><published>2018-09-08T00:00:00+09:00</published><updated>2018-09-08T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/jekyll/index-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/jekyll/theme/">&lt;h2 id=&quot;jekyll-테마&quot;&gt;jekyll 테마&lt;/h2&gt;
&lt;p&gt;jekyll의 테마를 설정하기 전에 jekyll의 설치 및 기본 프로젝트가 생성되있어야 한다. 아직 jekyll이 설치가 안되어있거나 프로젝트가 생성되지 않았다면, 이전 블로그인 &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/installation/&quot;&gt;jekyll 설치&lt;/a&gt;를 확인하자.&lt;/p&gt;

&lt;p&gt;jekyll은 wordpress처럼 기본적으로 테마 설정이 가능하다. 여기에서는 우리가 사용한 테마를 설정하는 방법을 통해 jekyll의 테마 설정을 설명하도록 하겠다.&lt;/p&gt;

&lt;h2 id=&quot;테마-검색&quot;&gt;테마 검색&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;우선 마음에 드는 테마를 찾자.&lt;/li&gt;
  &lt;li&gt;무료 테마 사이트: &lt;a href=&quot;http://jekyllthemes.org/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://jekyllthemes.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;우리가 사용한 테마: &lt;a href=&quot;http://jekyllthemes.org/themes/clean-blog/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Clean Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;테마-설치&quot;&gt;테마 설치&lt;/h2&gt;
&lt;p&gt;테마를 설치하는 방법은 크게 두가지가 있다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Gem을 통한 설치&lt;/li&gt;
  &lt;li&gt;파일 다운로드&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;gem을-통한-설치&quot;&gt;Gem을 통한 설치&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; 파일 수정
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-theme-clean-blog&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; 파일 수정
    &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jekyll-theme-clean-blog&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;테마 설치
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;확인
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;jekyll을 실행해보면 새롭게 적용된 테마를 확인할 수 있다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;파일-다운로드&quot;&gt;파일 다운로드&lt;/h3&gt;
&lt;p&gt;Gem 파일을 이용해 테마를 설치할 수 있다. 하지만 우리는 좀 더 자유롭게 테마를 수정하고 싶기 때문에, 테마 파일을 다운로드하여 적용하는 방식을 사용하기로 결정했다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;테마의 github 페이지 이동:
&lt;a href=&quot;https://github.com/BlackrockDigital/startbootstrap-clean-blog-jekyll&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;startbootstrap-clean-blog-jekyll 테마&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Clone or download&lt;/code&gt; 버튼을 통해 다운로드&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;압축을 해제하고 파일 내용을 자신의 프로젝트로 복사한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;확인&lt;/p&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;jekyll을 실행해보면 새롭게 적용된 테마를 확인할 수 있다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;테마-사용법&quot;&gt;테마 사용법&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Gem을 통한 설치
    &lt;ul&gt;
      &lt;li&gt;Gem을 통해 테마를 설치했다면 테마 사이트(&lt;a href=&quot;https://github.com/BlackrockDigital/startbootstrap-clean-blog-jekyll#installation--setup&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Clean Blog&lt;/a&gt;)를 참고하여 사용하길 바란다.&lt;/li&gt;
      &lt;li&gt;대부분의 테마 파일은 설치 방법과 사용 방법을 소개하고 있으므로 빠르게 시작하고 싶은 사람은 Gem을 통한 설치를 추천한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;파일 다운로드
    &lt;ul&gt;
      &lt;li&gt;우리는 테마를 좀 더 자유롭게 사용하기 위해 파일 다운로드 방식으로 프로젝트를 구성했다.&lt;/li&gt;
      &lt;li&gt;다음 블로그인 &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/folder_structure/&quot;&gt;폴더 구조&lt;/a&gt;를 통해 테마의 활용을 설명하도록 하겠다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;참고-사이트&quot;&gt;참고 사이트&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;무료 테마 사이트: &lt;a href=&quot;http://jekyllthemes.org/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://jekyllthemes.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Clean Blog: &lt;a href=&quot;https://github.com/BlackrockDigital/startbootstrap-clean-blog-jekyll&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://github.com/BlackrockDigital/startbootstrap-clean-blog-jekyll&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;jekyll 홈페이지: &lt;a href=&quot;https://jekyllrb.com/docs/structure/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://jekyllrb.com/docs/structure/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">jekyll 테마 jekyll의 테마를 설정하기 전에 jekyll의 설치 및 기본 프로젝트가 생성되있어야 한다. 아직 jekyll이 설치가 안되어있거나 프로젝트가 생성되지 않았다면, 이전 블로그인 jekyll 설치를 확인하자.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/jekyll/theme.jpg" /></entry><entry><title type="html">Install/common/check_jekyll</title><link href="https://dev-yakuza.github.io/ko/2018/09/" rel="alternate" type="text/html" title="Install/common/check_jekyll" /><published>2018-09-08T00:00:00+09:00</published><updated>2018-09-08T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/2018/install/common/check_jekyll</id><content type="html" xml:base="https://dev-yakuza.github.io/2018/09/">&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">jekyll -v</summary></entry><entry xml:lang="ko"><title type="html">jekyll 설치</title><link href="https://dev-yakuza.github.io/ko/jekyll/installation/" rel="alternate" type="text/html" title="jekyll 설치" /><published>2018-09-08T00:00:00+09:00</published><updated>2018-09-08T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/jekyll/index-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/jekyll/installation/">&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;
&lt;p&gt;jekyll은 Mac, Windows, Ubuntu에 설치할 수 있다. 우리는 주로 Mac과 Windows를 사용하기 때문에 여기에는 Mac과 Windows에 설치하는 방법만 소개하겠다.&lt;/p&gt;

&lt;p&gt;Mac과 windows는 Ruby를 설치하는 방법만 다를 뿐, 다른 부분은 동일하다. 자세한 내용은 &lt;a href=&quot;https://jekyllrb.com/docs/installation/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;jekyll 홈페이지&lt;/a&gt;에서 확인하길 바란다.&lt;/p&gt;

&lt;h2 id=&quot;사용-버전&quot;&gt;사용 버전&lt;/h2&gt;
&lt;p&gt;현재 블로그를 작성하는 시점에 사용하는 버전은 아래와 같다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ruby: &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby 2.5.1p57&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;jekyll: &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll 3.7.3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ruby-설치&quot;&gt;Ruby 설치&lt;/h2&gt;
&lt;p&gt;jekyll을 하나의 Ruby Gem이므로, Ruby를 설치해야한다.&lt;/p&gt;

&lt;h3 id=&quot;mac에-ruby-설치&quot;&gt;Mac에 Ruby 설치&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install ruby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;windows에-ruby-설치&quot;&gt;Windows에 Ruby 설치&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Ruby installer를 사용하자.&lt;/li&gt;
  &lt;li&gt;다운로드 사이트: &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;RubyInstaller for Windows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ruby + Devkit의 2.4이상의 버전을 다운받아 설치하자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ruby-설치-확인&quot;&gt;Ruby 설치 확인&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jekyll-ruby-gem-설치&quot;&gt;jekyll Ruby Gem 설치&lt;/h2&gt;
&lt;p&gt;Ruby를 설치했다면, Ruby를 사용하여 jekyll Gem을 설치하자.&lt;/p&gt;

&lt;h3 id=&quot;jekyll-ruby-gem-설치-1&quot;&gt;jekyll Ruby Gem 설치&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install bundler jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;jekyll-ruby-gem-설치-확인&quot;&gt;jekyll Ruby Gem 설치 확인&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jekyll-gem을-이용한-기본-프로젝트-생성&quot;&gt;jekyll Gem을 이용한 기본 프로젝트 생성&lt;/h2&gt;
&lt;h3 id=&quot;프로젝트-생성&quot;&gt;프로젝트 생성&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new [프로젝트명]&lt;/code&gt; 명령어를 이용하여 jekyll 프로젝트 생성&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new dev-yakuza.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;프로젝트-폴더-확인&quot;&gt;프로젝트 폴더 확인&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// cd dev-yakuza.github.io

|-- _posts
|   |-- 2018-09-08-welcome-to-jekyll.markdown
|-- .gitignore
|-- 404.html
|-- about.md
|-- index.md
|-- Gemfile
|-- Gemfile.lock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;jekyll-시작하기&quot;&gt;jekyll 시작하기&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;브라우저에서 &lt;a href=&quot;http://127.0.0.1:4000&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://127.0.0.1:4000&lt;/a&gt; 접속하여 확인하자&lt;/p&gt;

&lt;h2 id=&quot;참고-사이트&quot;&gt;참고 사이트&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;jekyll 홈페이지: &lt;a href=&quot;https://jekyllrb.com/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://jekyllrb.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">설치 jekyll은 Mac, Windows, Ubuntu에 설치할 수 있다. 우리는 주로 Mac과 Windows를 사용하기 때문에 여기에는 Mac과 Windows에 설치하는 방법만 소개하겠다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/jekyll/install.jpg" /></entry></feed>