<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dev-yakuza.github.io/ko/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/ko/" rel="alternate" type="text/html"/><updated>2018-11-07T15:39:07+09:00</updated><id>https://dev-yakuza.github.io/</id><title type="html">Dreams the art through programming</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry><title type="html">React Native Admob/common/installation</title><link href="https://dev-yakuza.github.io/ko/2018/11/" rel="alternate" type="text/html" title="React Native Admob/common/installation"/><published>2018-11-04T00:00:00+09:00</published><updated>2018-11-04T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/2018/react-native-admob/common/installation</id><content type="html" xml:base="https://dev-yakuza.github.io/2018/11/">&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-tts &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">npm install --save react-native-tts</summary></entry><entry xml:lang="ko"><title type="html">구글 애드몹</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-admob/" rel="alternate" type="text/html" title="구글 애드몹"/><published>2018-11-04T00:00:00+09:00</published><updated>2018-11-04T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-admob-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-admob/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;구글은 광고 플랫폼으로 애드센스(Adsense: &lt;a href=&quot;https://www.google.com/adsense/start/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/adsense/start/&lt;/a&gt;)와 애드몹(Admob: &lt;a href=&quot;https://www.google.com/admob/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/admob/&lt;/a&gt;)을 가지고 있습니다. 여기에서는 어플리케이션에 구글 애드몹(google admob)을 이용하여 광고를 노출시키는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;p&gt;구글의 애드센스(google adsense)와 애드몹(google admob)의 차이점은 애드센스는 웹사이트용 플랫폼이고 애드몹은 스마트폰 어플리케이션용이라는 점입니다. 우리는 블로그용 광고로 이미 애드센스(google adsense)를 사용하고 있으며 웹사이트에 애드센스(Adsense)를 사용하는 방법에 대해서는 &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/google-service/&quot;&gt;google service&lt;/a&gt;에서 확인하시기 바랍니다.&lt;/p&gt; &lt;h2 id=&quot;라이브러리-설치&quot;&gt;라이브러리 설치&lt;/h2&gt; &lt;p&gt;구글 애드몹(google admob)을 RN(react native)에서 사용하기 위해 &lt;a href=&quot;https://github.com/sbugert/react-native-admob&quot; rel=&quot;nofollow noreferrer&quot;&gt;react-native-admob&lt;/a&gt; 라이브러리를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install react-native-admob@next &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설치가 완료되면 아래에 명령어로 react-native-admob 라이브러리와 RN(react native) 프로젝트를 연결합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-admob &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ios-sdk-설치&quot;&gt;iOS SDK 설치&lt;/h3&gt; &lt;p&gt;구글 애드몹(Google admob)을 iOS에서 사용하기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt;을 설치해야합니다. 아래에 링크를 클릭하여 설치 방법을 확인합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Mobile Ads SDK: &lt;a href=&quot;https://developers.google.com/admob/ios/quick-start#import_the_mobile_ads_sdk&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developers.google.com/admob/ios/quick-start&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;여기서는 파일 다운로드 방식으로 설명하겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;다운로드 링크: &lt;a href=&quot;https://developers.google.com/admob/ios/download&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developers.google.com/admob/ios/download&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;위에 링크를 눌러 다운로드 사이트로 이동하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt;를 다운로드합니다. 다운로드가 완료되면 압축을 풀어줍니다.&lt;/p&gt; &lt;p&gt;RN(react native) 프로젝트 폴더에서 ios 폴더로 이동하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;프로젝트명.xcodeproj&lt;/code&gt;파일을 실행합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/add_sdk.png&quot; alt=&quot;add Google Mobile Ads SDK to ios &quot; /&gt;&lt;/p&gt; &lt;p&gt;xcode가 실행되면 왼쪽위에 프로젝트명을 우클릭하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Files to [프로젝트명]&lt;/code&gt;을 선택합니다. 위에서 다운로드하고 압축을 푼 &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt; 폴더로 이동하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;GoogleMobileAds.framework&lt;/code&gt;파일을 선택합니다. 하단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Copy items if needed&lt;/code&gt;를 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; 버튼을 눌러 &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt; 라이브러리를 추가합니다.&lt;/p&gt; &lt;h2 id=&quot;구글-애드몹-가입&quot;&gt;구글 애드몹 가입&lt;/h2&gt; &lt;p&gt;구글 애드몹(Google admob) 사이트로 이동하여 회원가입을 합니다. 일반적인 회원가입/로그인 절차임으로 설명을 생략합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;구글 애드몹(Google admob) 사이트: &lt;a href=&quot;https://www.google.com/admob/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/admob/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;구글-애드몹-설정&quot;&gt;구글 애드몹 설정&lt;/h2&gt; &lt;p&gt;구글 애드몹(Google admob) 사용법에 대해서 알아봅니다. 구글 애드몹(Google admob)을 사용하기 위해 구글 애드몹(Google admob) 사이트에 회원가입을 하고 로그인을 하면 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/signin_google_admob.png&quot; alt=&quot;signin google admob&quot; /&gt;&lt;/p&gt; &lt;p&gt;하단에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GET STARTED&lt;/code&gt; 버튼을 눌러 구글 애드몹(Google admob)에 사용을 시작합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/configure_admob.png&quot; alt=&quot;configure admob&quot; /&gt;&lt;/p&gt; &lt;p&gt;이미 앱이 마켓에 등록되어있는지 여부를 선택합니다. 우리는 아직 앱을 등록하지 않은 상태이므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;NO&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/configure_app_name.png&quot; alt=&quot;configure app name on admob&quot; /&gt;&lt;/p&gt; &lt;p&gt;구글 애드몹(Google admob)을 사용하기 위해 앱 이름을 작성하고 사용할 플랫폼을 선택합니다. 우리는 우선 &lt;code class=&quot;highlighter-rouge&quot;&gt;iOS&lt;/code&gt;를 선택하여 진행하겠습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/completed_configure.png&quot; alt=&quot;completed to configure&quot; /&gt;&lt;/p&gt; &lt;p&gt;구글 애드몹(Google admob) 등록이 완료되었습니다. 친절하게 하단에 다음 단계에 대한 설명이 잘 나와있습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;react-native-admob을 설정할때 필요한 &lt;code class=&quot;highlighter-rouge&quot;&gt;App ID&lt;/code&gt;를 복사해둡니다.&lt;/li&gt; &lt;li&gt;광고 타입(ad unit)을 구글 애드몹(Google admob)에서 설정합니다.&lt;/li&gt; &lt;li&gt;앱을 앱스토어에 등록하면 구글 애드몹(Google admob)에서 연결해줘야합니다.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;하단에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;NEXT: CREATE AD UNIT&lt;/code&gt;을 눌러 광고 타입 설정화면으로 이동합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/select_ad_uni.png&quot; alt=&quot;select advertisement type&quot; /&gt;&lt;/p&gt; &lt;p&gt;우리는 일단 배너 광고 사용해 보겠습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Banner&lt;/code&gt;의 하단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;버튼을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/set_banner_name.png&quot; alt=&quot;input banner name&quot; /&gt;&lt;/p&gt; &lt;p&gt;해당 배너의 이름을 설정합니다. 구글 애드몹(Google admob) 서비스에서 해당 배너를 쉽게 찾기 위한 이름이므로 자신이 쉽게 인식할 수 있는 이름을 설정합니다. 입력을 완료했으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE AD UNIT&lt;/code&gt; 버튼을 눌러 설정을 끝냅니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/finished_configuration.png&quot; alt=&quot;finished configuration&quot; /&gt;&lt;/p&gt; &lt;p&gt;구글 애드몹(Google admob)의 배너 설정을 완료했습니다. 다시 나온 app ID와 배너의 ad unit ID를 잘 복사해 둡니다.&lt;/p&gt; &lt;h2 id=&quot;react-native-admob&quot;&gt;react-native-admob&lt;/h2&gt; &lt;p&gt;구글 애드몹(Google admob)에서 설정한 배너를 RN(react-native)에서 사용하기 위해 react-native-admob의 사용법을 알아봅시다.&lt;/p&gt; &lt;h3 id=&quot;ios-설정&quot;&gt;iOS 설정&lt;/h3&gt; &lt;p&gt;구글 애드몹(Google admob)을 iOS에서 사용하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/프로젝트명/AppDelegate.m&lt;/code&gt;를 수정해야합니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#import &amp;lt;React/RCTRootView.h&amp;gt; @import GoogleMobileAds; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에서 다운로드하여 xcode에 추가한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt; 라이브러리를 임포트합니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;self.window.rootViewController = rootViewController; [GADMobileAds configureWithApplicationID:@&quot;ca-app-pub-7987914246691031~8295071692&quot;]; [self.window makeKeyAndVisible]; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;구글 애드몹(Google admob)을 생성할 때 복사한 app ID를 넣은 &lt;code class=&quot;highlighter-rouge&quot;&gt;[GADMobileAds configureWithApplicationID:@&quot;구글 애드몹 앱 ID&quot;];&lt;/code&gt; 코드를 위와 같은 위치에 넣습니다.&lt;/p&gt; &lt;p&gt;이로써 iOS에서 구글 애드몹(Google admob)을 사용할 준비가 되었습니다.&lt;/p&gt; &lt;h3 id=&quot;react-native-admob-사용&quot;&gt;react-native-admob 사용&lt;/h3&gt; &lt;p&gt;구글 애드몹(Google admob)에 설정한 배너를 사용하기위해 배너를 표시하고자하는 파일에 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-admob&lt;/code&gt; 라이브러리에 &lt;code class=&quot;highlighter-rouge&quot;&gt;AdMobBanner&lt;/code&gt;를 임포트합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdMobBanner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-admob'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;구글 애드몹(Google admob) 배너를 표시하고 싶은 위치에 아래에 코드를 붙여 넣습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdMobBanner&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fullBanner&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adUnitID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;자신의 ad unit ID&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testDevices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdMobBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;simulatorId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdFailedToLoad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;adSize: 광고의 사이즈를 결정합니다. 사이즈에 관해서는 공식 사이트를 참고하시기 바랍니다.(&lt;a href=&quot;https://github.com/sbugert/react-native-admob#admobbanner&quot; rel=&quot;nofollow noreferrer&quot;&gt;react-native-admob banner size&lt;/a&gt;)&lt;/li&gt; &lt;li&gt;adUnitID: 구글 애드몹(Google admob)에서 생성한 배너 유닛의 아이디(ad unit ID)를 복사해서 넣습니다.&lt;/li&gt; &lt;li&gt;testDevices: 테스트용 단말기의 아이디를 넣습니다. 여기서는 시뮬레이터의 아이디를 설정했습니다.&lt;/li&gt; &lt;li&gt;onAdFailedToLoad: 광고의 로딩이 실패한 경우에 처리 부분입니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;설정이 완료되었습니다. 프로젝트를 실행하여 광고가 잘 표시되는지 확인합니다.&lt;/p&gt; &lt;h2 id=&quot;안드로이드android&quot;&gt;안드로이드(Android)&lt;/h2&gt; &lt;p&gt;안드로이드(Android) 부분은 실제로 개발하여 추가되면 블로그에 추가할 예정입니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 구글은 광고 플랫폼으로 애드센스(Adsense: https://www.google.com/adsense/start/)와 애드몹(Admob: https://www.google.com/admob/)을 가지고 있습니다. 여기에서는 어플리케이션에 구글 애드몹(google admob)을 이용하여 광고를 노출시키는 방법에 대해서 알아보겠습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-admob.jpg"/></entry><entry xml:lang="ko"><title type="html">버전(변경이력) 생성</title><link href="https://dev-yakuza.github.io/ko/git/create-stage/" rel="alternate" type="text/html" title="버전(변경이력) 생성"/><published>2018-10-31T00:00:00+09:00</published><updated>2018-10-31T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/git/create-stage-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/git/create-stage/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;이전 블로그(&lt;a href=&quot;https://dev-yakuza.github.io/git/create-stage/&quot; target=&quot;_blank&quot;&gt;저장소(Repository) 생성&lt;/a&gt;)에서 git의 저장소(Repository)를 생성하는 방법에 대해서 살펴보았습니다. 이번에는 생성된 git 저장소(Repository)에 버전 관리를 위해 버전(변경 이력)을 생성하는 방법에 대해서 알아봅시다.&lt;/p&gt; &lt;h2 id=&quot;파일-추가&quot;&gt;파일 추가&lt;/h2&gt; &lt;p&gt;git 저장소(Repository)가 존재하는 폴더(&lt;code class=&quot;highlighter-rouge&quot;&gt;temp_test_git&lt;/code&gt;)에 버전 관리를 하고 싶은 파일을 복사하거나 새롭게 만듭니다.&lt;/p&gt; &lt;p&gt;우리는 테스트를 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;temp_test_git&lt;/code&gt; 폴더에 &lt;code class=&quot;highlighter-rouge&quot;&gt;test text&lt;/code&gt;라고 기록한 &lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt; 파일을 생성하였습니다.&lt;/p&gt; &lt;h2 id=&quot;git-status&quot;&gt;git status&lt;/h2&gt; &lt;p&gt;git 저장소(Repository)의 현재 상태를 확인하기 위해 아래에 &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; 명령어를 실행시킵니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; 명령어를 실행하면 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-status.png&quot; alt=&quot;git status&quot; /&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;On branch master: 현재 해당하는 브랜치(branch)는 마스터(master)입니다. git 브랜치(branch)에 관해서는 이후에 다른 블로그 포스트에서 설명합니다.&lt;/li&gt; &lt;li&gt;No commits yet: 아직 커밋(commit)을 하지 않은 상태입니다. 커밋(commit)은 버전(변경 이력)을 의미합니다. 아직 버전(변경 이력)을 만들지 않은 상태를 의미합니다.&lt;/li&gt; &lt;li&gt;Untracked files: git가 버전(변경 이력) 관리를 하고 있지 않는 파일 리스트입니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;우리는 아직 git에게 &lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt; 파일을 버전(변경 이력)으로 관리하라고 알려주지 않았습니다. 그렇기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Untracked files&lt;/code&gt;에 우리가 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt; 파일이 존재하는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;git-add&quot;&gt;git add&lt;/h2&gt; &lt;p&gt;우리는 새로 만든 파일(&lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt;)을 git에게 버전(변경 이력) 관리 대상임을 알려줘야 합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; 명령어로 git에게 &lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt; 파일은 버전(변경 이력) 관리 대상임을 알려 줍니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# add single file&lt;/span&gt; git add test.txt &lt;span class=&quot;c&quot;&gt;# add multiple files&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# git add test.txt test2.txt test3.txt&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# add all files&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# git add .&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; 명령어로 git이 새롭게 추가된 파일을 잘 인식하는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; 명령어를 실행하면 아까와는 다른 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-status-after-add.png&quot; alt=&quot;git status after executing git add command&quot; /&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Changes to be committed: git이 다음에 버전(변경 이력) 관리를 하기 위한 파일 리스트입니다. 우리는 파일을 새롭게 추가했기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;new file&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;text.txt&lt;/code&gt;가 추가된 것을 볼 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이렇게 &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt;를 통해 파일을 추가하는 과정이 있는 이유는 이번 버전(변경 이력)에 추가하고 싶지 않은 파일들이 실제 프로그램을 작성할 때 존재하기 때문입니다. 예를 들어 빌드된 결과물, DB정보, ID/PW가 저장된 설정 파일이나 임시로 로그를 표시하기 위해 작성한 코드(console.log / print)가 포함되어 있어 버전(변경 이력)과 무관한 내용을 구별하기 위해 사용합니다.&lt;/p&gt; &lt;h2 id=&quot;git-commit&quot;&gt;git commit&lt;/h2&gt; &lt;p&gt;우리는 git에게 버전(변경 이력)에 추가하고 싶은 파일을 &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; 명령어로 알려줬습니다. 하지만 실제 버전(변경 이력) 관리는 이뤄지지 않았습니다. 단지 git에게 새로운 파일이 있음을 알려준 것입니다. 이제 실제 버전(변경 이력) 관리를 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;을 이용하여 버전(변경 이력)을 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;명령어를 실행하면 버전(변경 이력)을 생성할 수 있는 화면이 실행됩니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-commit.png&quot; alt=&quot;git commit&quot; /&gt;&lt;/p&gt; &lt;p&gt;이 화면은 &lt;code class=&quot;highlighter-rouge&quot;&gt;vim&lt;/code&gt;이라는 문서 편집 툴이 실행된 화면입니다. 문서를 편집하기 위해 키보드에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;(insert)를 입력하고 이 변경 이력에 내용이 무엇인지 작성합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-commit-with-message.png&quot; alt=&quot;git commit with message&quot; /&gt;&lt;/p&gt; &lt;p&gt;작성이 완료되면 키보드의 &lt;code class=&quot;highlighter-rouge&quot;&gt;esc&lt;/code&gt; 버튼을 누르고 &lt;code class=&quot;highlighter-rouge&quot;&gt;:wq&lt;/code&gt;(write-quit)을 입력하여 변경 이력을 작성합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-complete-commit.png&quot; alt=&quot;git completed commit&quot; /&gt;&lt;/p&gt; &lt;p&gt;변경 이력 작성이 완료되면 위와 같은 메세지를 볼 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;git-log&quot;&gt;git log&lt;/h2&gt; &lt;p&gt;버전(변경 이력)이 잘 생성되었는지 확인하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;명령어를 실행시킵니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;를 실행하면 현재 작성한 버전(변경 이력)을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-log.png&quot; alt=&quot;git log&quot; /&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Author: 버전(변경 이력) 작성자 및 작성자 이메일(git config로 등록한 사용자명과 이메일)&lt;/li&gt; &lt;li&gt;Date: 버전(변경 이력)의 생성일자&lt;/li&gt; &lt;li&gt;Date 하단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;을 사용하여 작성한 메세지를 확인할 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;파일-수정인-경우&quot;&gt;파일 수정인 경우&lt;/h2&gt; &lt;p&gt;파일을 수정한 경우도 위와 동일한 방식을 취합니다. 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; 명령어로 현재 상태를 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아직 아무 변경도 하지 않았기 때문에 변경 사항이 없다고 git이 알려줍니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-status-no-change.png&quot; alt=&quot;git status no change&quot; /&gt;&lt;/p&gt; &lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt; 파일의 내용을 &lt;code class=&quot;highlighter-rouge&quot;&gt;test text&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;test string&lt;/code&gt;으로 수정한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt;를 실행 시킵니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이번에는 수정 사항이 있기 때문에 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-status-with-modification.png&quot; alt=&quot;git status with modification&quot; /&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;modified: 수정된 파일을 나타냅니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt;를 통해 git에게 변경된 이력이 있음 알려줍니다. 다른 말로 버전(변경 이력)에 기록할 파일을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add test.txt &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt;로 상태를 확인합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-status-after-commit.png&quot; alt=&quot;git status after commit&quot; /&gt;&lt;/p&gt; &lt;p&gt;아까와는 다르게 글자도 녹색으로 변경 되었으며 &lt;code class=&quot;highlighter-rouge&quot;&gt;no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)&lt;/code&gt; 메세지도 없는 것을 확인 할 수 있습니다. git이 버전(변경 이력)에 &lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt; 파일을 잘 추가하였음을 알 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;을 이용하여 버전(변경 이력)을 생성합니다. 버전 메세지(변경 이력 메세지)에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;edit 'text' to 'string'&lt;/code&gt;을 입력했습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;를 사용하여 버전(변경 이력)이 잘 생성되었는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-log-with-new-version.png&quot; alt=&quot;git log with new version&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같이 버전(변경 이력)이 잘 생성 된 것을 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;요약&quot;&gt;요약&lt;/h2&gt; &lt;p&gt;버전(변경 이력)을 생성하는 방법에 대해서 알아봤습니다. 전체적으로 요약하면 아래와 같습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;파일 추가 또는 수정&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt;로 추가 또는 변경된 파일 확인&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt;로 버전(변경 이력)에 추가하고 싶은 파일 등록&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt;로 버전(변경 이력)에 추가한 파일이 등록되었는지 확인&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;으로 버전(변경 이력)에 메세지를 추가하여 생성&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;로 생성된 버전(변경 이력) 확인&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;위와 같은 방법으로 새로운 버전(변경 이력)을 생성하면 됩니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 이전 블로그(저장소(Repository) 생성)에서 git의 저장소(Repository)를 생성하는 방법에 대해서 살펴보았습니다. 이번에는 생성된 git 저장소(Repository)에 버전 관리를 위해 버전(변경 이력)을 생성하는 방법에 대해서 알아봅시다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/git/create-stage.jpg"/></entry><entry xml:lang="ko"><title type="html">저장소(Repository) 생성</title><link href="https://dev-yakuza.github.io/ko/git/create-repository/" rel="alternate" type="text/html" title="저장소(Repository) 생성"/><published>2018-10-29T00:00:00+09:00</published><updated>2018-10-29T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/git/create-repository-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/git/create-repository/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;git을 설치했으니 이제 git을 사용해서 소스 코드의 버전을 관리해야겠죠? 여기에서는 git에서 소스 코드를 관리하기 위한 저장소(Repository)를 생성 방법에 대해서 알아봅니다. git의 저장소(Repository)는 소스 코드 버전에 대한 이력을 저장하기 위한 별도의 저장 장소를 의미합니다.&lt;/p&gt; &lt;h2 id=&quot;프로젝트-폴더-생성&quot;&gt;프로젝트 폴더 생성&lt;/h2&gt; &lt;p&gt;Mac은 &lt;code class=&quot;highlighter-rouge&quot;&gt;terminal&lt;/code&gt;, Windows는 &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt;를 사용하여 진행합니다. git을 활용하기 위한 폴더를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir temp_test_git &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;git-저장소repository-생성&quot;&gt;git 저장소(Repository) 생성&lt;/h2&gt; &lt;p&gt;git을 사용하기 위해 생성한 프로젝트 폴더에 git의 저장소(Repository)를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;temp_test_git git &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 명령어로 git에서 사용 가능한 명령어 리스트를 확인합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-repository/clone_init.png&quot; alt=&quot;git clone init&quot; /&gt;&lt;/p&gt; &lt;p&gt;git 명령어를 확인하면 위와 같이 git의 저장소(Repository)를 &lt;code class=&quot;highlighter-rouge&quot;&gt;clone&lt;/code&gt;을 할지 &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; 할지 선택하는 명령어를 확인할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;init: 새로운 git 저장소(Repository)를 생성합니다.&lt;/li&gt; &lt;li&gt;clone: 기존에 git의 저장소(Repository)를 복사하여 생성합니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;git-init&quot;&gt;git init&lt;/h3&gt; &lt;p&gt;새로운 프로젝트로 시작하는 경우는, &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; 명령어를 사용하여 git의 저장소(Repository)를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git init &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;git-clone&quot;&gt;git clone&lt;/h3&gt; &lt;p&gt;기존에 존재하는 프로젝트(opensource 또는 기존에 git으로 버전 관리를 하고 있는 프로젝트)가 있는 경우 외부 저장소(Remote Repository)에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;clone&lt;/code&gt; 명령어를 사용하여 저장소(Repository)를 가져옵니다.&lt;/p&gt; &lt;p&gt;우리의 블로그 git 저장소(Repository)를 clone하는 것을 예로 들어 설명하겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;git 저장소(Repository): &lt;a href=&quot;https://github.com/dev-yakuza/dev-yakuza.github.io&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/dev-yakuza/dev-yakuza.github.io&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;위에 링크를 눌러 github에서 저장하고 있는 우리의 git 저장소(Repository)로 이동합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-repository/clone.png&quot; alt=&quot;git clone blog&quot; /&gt;&lt;/p&gt; &lt;p&gt;오른쪽에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Clone or donwload&lt;/code&gt; 버튼을 누르면 git 저장소(Repository)의 URL을 복사할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git clone https://github.com/dev-yakuza/dev-yakuza.github.io.git &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 명령어를 실행하면 우리 블로그의 git 저장소(Repository)가 local PC에 복사됩니다. 참고로 우리 블로그는 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;을 이용하여 무료로 서비스하고 있습니다. 관심있으신 분은 &lt;a href=&quot;https://dev-yakuza.github.io/jekyll/&quot; target=&quot;_blank&quot;&gt;jekyll blog&lt;/a&gt;를 참고하세요.&lt;/p&gt; &lt;h2 id=&quot;git-저장소repository-생성-확인&quot;&gt;git 저장소(Repository) 생성 확인&lt;/h2&gt; &lt;p&gt;git 저장소(Repository)가 잘 생성됐는지 확인하기 위해 아래에 명령어를 입력합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Mac&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-al&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Windows&lt;/span&gt; dir /ah &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;표시되는 리스트에 &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt;폴더가 보이면 git 저장소(Repository) 생성에 성공한 것입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; 폴더는 git을 사용하여 소스 코드 버전을 관리하면 그에 해당 되는 정보들이 저장되는 장소입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; 폴더를 삭제하면 git 저장소(Repository)에 저장한 내용이 전부 삭제되므로 삭제하지 않도록 주의해 주세요.&lt;/p&gt; &lt;h2 id=&quot;사용자-설정&quot;&gt;사용자 설정&lt;/h2&gt; &lt;p&gt;이제 새롭게 생성된 git 저장소(Repository)에 버전 관리시 사용할 유저를 등록합니다. 이 유저는 실제 버전 관리시 누가 파일을 수정하였는지를 알 수 있게 도와줍니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# git config --global user.name [user name]&lt;/span&gt; git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name dev.yakuza &lt;span class=&quot;c&quot;&gt;# git config --global user.email [user email]&lt;/span&gt; git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email dev.yakuza@gmail.com &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 git을 설치했으니 이제 git을 사용해서 소스 코드의 버전을 관리해야겠죠? 여기에서는 git에서 소스 코드를 관리하기 위한 저장소(Repository)를 생성 방법에 대해서 알아봅니다. git의 저장소(Repository)는 소스 코드 버전에 대한 이력을 저장하기 위한 별도의 저장 장소를 의미합니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/git/create-repository.jpg"/></entry><entry xml:lang="ko"><title type="html">git 설치</title><link href="https://dev-yakuza.github.io/ko/git/installation/" rel="alternate" type="text/html" title="git 설치"/><published>2018-10-25T00:00:00+09:00</published><updated>2018-10-25T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/git/installation-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/git/installation/">&lt;h2 id=&quot;소스-코드-버전-관리&quot;&gt;소스 코드 버전 관리&lt;/h2&gt; &lt;p&gt;git은 소스 코드의 버전을 관리합니다. 버전을 관리한다는 의미는 소스 코드에 변경 이력을 저장하고 관리한다는 의미입니다. 소스 코드 변경이 잘못되어 변경 전 소스로 돌아가고 싶지만 어디를 어떻게 바꿔는지 기억이 나질 않아 고생하신 적이 있으신가요? git과 같은 소스 코드 버전 관리툴은 이런 상황을 위해 만들어 졌습니다. 하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl + z&lt;/code&gt;같은 기능처럼 특정 키를 누르면 소스 코드가 변경전으로 돌아가는 그런 마법같은 툴은 아닙니다.&lt;/p&gt; &lt;p&gt;소스 코드 버전 관리툴은 개발자가 소스 코드를 변경한 후에 소스 코드 버전 관리툴을 이용해서 변경 이력과 소스를 다른 곳(Repository)에 저장합니다. 그리고 소스 코드를 변경 전으로 되돌리고 싶으면 변경 이력을 저장한 다른 곳(Repository)에서 변경 전 소스를 불러옵니다. 이런 식으로 버전을 관리합니다.&lt;/p&gt; &lt;p&gt;git은 소스코드 버전 관리툴중 하나로써 많은 기능들이 있습니다. 저도 많은 기능중 일부를 사용하고 있으며, 사실 다른 기능들이 뭐가 있는지 잘 몰라 이 블로그를 시작했습니다. 지금부터 git을 공부하며 배운 내용을 정리하겠습니다. 여러분들에게 도움이 됐으면 좋겠네요.&lt;/p&gt; &lt;h2 id=&quot;git-설치&quot;&gt;git 설치&lt;/h2&gt; &lt;p&gt;git을 사용하기 위해서는 먼저 git을 PC에 설치해야합니다. OS에 맞는 설치법을 따라해서 git을 설치해 주세요.&lt;/p&gt; &lt;h2 id=&quot;git을-mac에-설치&quot;&gt;git을 Mac에 설치&lt;/h2&gt; &lt;p&gt;git을 Mac에 설치하기 위해 아래에 링크를 클릭해 설치 파일을 다운로드합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;다운로드 링크: &lt;a href=&quot;https://git-scm.com/download/mac&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://git-scm.com/download/mac&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;자동으로 다운로드가 시작되지 않으시면 &lt;code class=&quot;highlighter-rouge&quot;&gt;click here to download manually&lt;/code&gt; 링크를 눌러 다운로드를 해 주세요.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/installation/download_mac.png&quot; alt=&quot;git download for mac&quot; /&gt;&lt;/p&gt; &lt;p&gt;파일 다운로드가 완료되면 파일을 클릭하여 설치합니다. 설치 방법은 웹에서 다운로드한 일반적인 Mac 소프트웨어 설치와 동일합니다. 보안 경고가 나오면 Mac 설정에서 확인후에 설치합니다.&lt;/p&gt; &lt;p&gt;설치가 완료되면 &lt;code class=&quot;highlighter-rouge&quot;&gt;termial&lt;/code&gt;을 실행하고 아래에 코드로 설치가 되었는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;git을-windows에-설치&quot;&gt;git을 Windows에 설치&lt;/h2&gt; &lt;p&gt;git을 Windows에 설치하기 위해 아래에 링크를 클릭해 설치 파일을 다운로드합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;다운로드 링크: &lt;a href=&quot;https://gitforwindows.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://gitforwindows.org/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/installation/download_windows.png&quot; alt=&quot;git download for windows&quot; /&gt;&lt;/p&gt; &lt;p&gt;다운로드가 완료되면 일반 프로그램 설치와 동일한 방법으로 설치합니다.&lt;/p&gt; &lt;p&gt;설치가 완료되면 &lt;code class=&quot;highlighter-rouge&quot;&gt;명령 프롬프트(cmd)&lt;/code&gt;을 실행하고 아래에 코드로 설치가 되었는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;명령 프롬프트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;윈도우키 + r&lt;/code&gt;을 누르고 &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt;를 입력하고 엔터를 눌러 실행시킵니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;설치가 완료되었습니다. 이제 git을 사용하여 소스 버전 관리에 대해서 알아봅시다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">소스 코드 버전 관리 git은 소스 코드의 버전을 관리합니다. 버전을 관리한다는 의미는 소스 코드에 변경 이력을 저장하고 관리한다는 의미입니다. 소스 코드 변경이 잘못되어 변경 전 소스로 돌아가고 싶지만 어디를 어떻게 바꿔는지 기억이 나질 않아 고생하신 적이 있으신가요? git과 같은 소스 코드 버전 관리툴은 이런 상황을 위해 만들어 졌습니다. 하지만 ctrl + z같은 기능처럼 특정 키를 누르면 소스 코드가 변경전으로 돌아가는 그런 마법같은 툴은 아닙니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/git/installation.jpg"/></entry><entry xml:lang="ko"><title type="html">github page</title><link href="https://dev-yakuza.github.io/ko/jekyll/github-page/" rel="alternate" type="text/html" title="github page"/><published>2018-10-22T00:00:00+09:00</published><updated>2018-10-22T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/jekyll/github-page-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/jekyll/github-page/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;지금까지 만든 jekyll 프로젝트를 github page에 업로드하여 블로그 서비스를 시작해봅시다. 기본적인 소스는 &lt;a href=&quot;https://bitbucket.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;bitbucket&lt;/a&gt;에서 관리할 예정이고 jekyll에서 build된 static 페이지만 &lt;a href=&quot;https://github.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;github&lt;/a&gt;에 업로드하여 서비스할 예정입니다.&lt;/p&gt; &lt;p&gt;jekyll을 사용하여 프로젝트를 진행하는 방법에 대해 잘 모르시는 분들은 이전 블로그를 확인해 주세요.&lt;/p&gt; &lt;h3 id=&quot;jekyll-프로젝트-생성&quot;&gt;jekyll 프로젝트 생성&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/installation/&quot; target=&quot;_blank&quot;&gt;jekyll 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/theme/&quot; target=&quot;_blank&quot;&gt;테마 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/directory_structure/&quot; target=&quot;_blank&quot;&gt;폴더 구조&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/configuration/&quot; target=&quot;_blank&quot;&gt;jekyll 설정&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;jekyll-프로젝트-옵션&quot;&gt;jekyll 프로젝트 옵션&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/multi-languages-plugin/&quot; target=&quot;_blank&quot;&gt;다국어 플러그인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/seo/&quot; target=&quot;_blank&quot;&gt;SEO 지원&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/pagination-plugin/&quot; target=&quot;_blank&quot;&gt;pagination 플러그인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/disqus/&quot; target=&quot;_blank&quot;&gt;Disqus 댓글&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/send-email/&quot; target=&quot;_blank&quot;&gt;이메일 발송 기능&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/google-service/&quot; target=&quot;_blank&quot;&gt;google 서비스&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;bitbucket&quot;&gt;bitbucket&lt;/h2&gt; &lt;p&gt;bitbucket도 github과 같이 repository를 관리하는 툴입니다. 많은 기능들이 있지만 여기서는 github page에 업로드할 소스를 관리하는 용도로 설명하겠습니다. 자신에 소스를 공개해도 상관없는 분들은 이 부분을 넘어가셔도 됩니다.&lt;/p&gt; &lt;p&gt;아래에 링크를 통해 bitbucket으로 이동합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;bitbucket: &lt;a href=&quot;https://bitbucket.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://bitbucket.org/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;회원-가입-및-로그인&quot;&gt;회원 가입 및 로그인&lt;/h3&gt; &lt;p&gt;회원가입과 로그인 부분의 설명은 생략하겠습니다. 보통 서비스 가입과 같은 절차임으로 회원 가입과 로그인을 해주세요.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/bitbucket-login.png&quot; alt=&quot;bitbucket login&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;repository-생성&quot;&gt;Repository 생성&lt;/h3&gt; &lt;p&gt;로그인후 아래의 화면과 같은 메뉴가 보이면 &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;`버튼을 눌러주세요.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/bitbucket-menu.png&quot; alt=&quot;bitbucket menu&quot; class=&quot;narrow-image&quot; /&gt;&lt;/p&gt; &lt;p&gt;아래와 같은 메뉴가 보이면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Repository&lt;/code&gt;를 눌러 새로운 repository를 생성합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/bitbucket-menu-repository.png&quot; alt=&quot;bitbucket menu repository&quot; class=&quot;narrow-image&quot; /&gt;&lt;/p&gt; &lt;p&gt;repository 정보를 입력합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/bitbucket-menu-repository-information.png&quot; alt=&quot;bitbucket menu repository information&quot; /&gt;&lt;/p&gt; &lt;p&gt;repository 생성을 완료했습니다.&lt;/p&gt; &lt;h3 id=&quot;pc에-repository-연동&quot;&gt;PC에 Repository 연동&lt;/h3&gt; &lt;p&gt;개발에 사용하는 PC에 생성된 repository를 연동하여 소스 코드를 관리해 봅시다. git 설치나 사용법에 관해서는 git 블로그를 참고하세요.(&lt;a href=&quot;https://dev-yakuza.github.io/git/&quot; target=&quot;_blank&quot;&gt;git&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/bitbucket-git-clone.png&quot; alt=&quot;bitbucket git clone&quot; /&gt;&lt;/p&gt; &lt;p&gt;repository가 생성이 되면 위와 같은 화면을 볼 수 있습니다. 친절하게도 PC와 연동하는 방법에 대해 잘 나와있습니다. 한번 따라해 봅시다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// git clone &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;your bitbucket git url] git clone https://JeongHean_Kim@bitbucket.org/JeongHean_Kim/dev-yakuza.git &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 명령어로 PC에 repository를 clone합니다. 생성된 폴더에 jekyll 프로젝트를 복사합니다.(또는 jekyll 프로젝트를 생성합니다.)&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'add new project'&lt;/span&gt; git push &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; origin master &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 명령어로 local(pc)에 있는 소스를 bitbucket에 있는 repository에 업로드합니다.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://bitbucket.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;bitbucket 사이트&lt;/a&gt;로 이동하여 자신이 추가한 jekyll 프로젝트의 파일이 잘 있는지 확인합니다.&lt;/p&gt; &lt;h2 id=&quot;github-page-연동&quot;&gt;github page 연동&lt;/h2&gt; &lt;p&gt;github page에는 jekyll가 빌드된 static 파일을 업로드하여 블로그를 서비스 합니다.&lt;/p&gt; &lt;h3 id=&quot;회원-가입-및-로그인-1&quot;&gt;회원 가입 및 로그인&lt;/h3&gt; &lt;p&gt;아래에 사이트로 이동하여 회원 가입 및 로그인 합니다. 회원 가입 및 로그인은 일반 서비스 가입과 동일함으로 설명하지 않습니다.&lt;/p&gt; &lt;p&gt;주의: 회원가입시 &lt;code class=&quot;highlighter-rouge&quot;&gt;사용자명&lt;/code&gt;에는 주의해주세요. &lt;code class=&quot;highlighter-rouge&quot;&gt;https://사용자명.github.io&lt;/code&gt;으로 github page를 서비스할 예정입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;github 사이트: &lt;a href=&quot;https://github.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/github-login.png&quot; alt=&quot;github login&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;repository-생성-1&quot;&gt;Repository 생성&lt;/h3&gt; &lt;p&gt;로그인을 하면 아래와 같은 화면을 볼 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Start a project&lt;/code&gt;버튼을 눌러 새로운 프로젝트를 생성합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/github-repository.png&quot; alt=&quot;github repository&quot; /&gt;&lt;/p&gt; &lt;p&gt;Repository name에 github에 회원가입 할 때 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;사용자명 + github.io&lt;/code&gt;를 넣고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Create repository&lt;/code&gt; 버튼을 눌러 repository를 생성합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/github-create-repository.png&quot; alt=&quot;github crete repository&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;pc에-repository-연동-1&quot;&gt;PC에 Repository 연동&lt;/h3&gt; &lt;p&gt;repository를 생성하면 역시 친절하게 설명이 잘 나와있는 페이지를 볼 수 있습니다. 하지만 우리는 이미 bitbucket과 local을 연동하고 있기 때문에 조금 다른 방식으로 진행합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/github-clone-repository.png&quot; alt=&quot;github clone repository&quot; /&gt;&lt;/p&gt; &lt;p&gt;우리는 이미 bitbucket과 연동이 되어 있으므로, 아래에 명령어로 remote repository를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// git remote add github &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;github repository url] git remote add github https://github.com/dev-yakuza/dev-yakuza-test.github.io.git &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;연동이 완료되었습니다. 아래에 명령어로 jekyll이 빌드한 소스만 repository에 업로드합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git subtree add &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt; _site/ github master git subtree push &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt; _site/ github master &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;jekyll이 빌드가 되어 있지 않는 경우 빌드를 해주세요.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll build &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;github page가 화면에 표시되는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://dev-yakuza.github.io &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;마침&quot;&gt;마침&lt;/h2&gt; &lt;p&gt;현재 소스를 github, bitbucket과 연동하는 방법을 살펴보았습니다. build전 소스는 bitbucket에, build후 static 페이지는 github page에 업로드하여 블로그 서비스를 할 수 있도록 설정했습니다. 이제 여러분도 자신만에 블로그를 시작해보세요.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 지금까지 만든 jekyll 프로젝트를 github page에 업로드하여 블로그 서비스를 시작해봅시다. 기본적인 소스는 bitbucket에서 관리할 예정이고 jekyll에서 build된 static 페이지만 github에 업로드하여 서비스할 예정입니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/jekyll/github-page.jpg"/></entry><entry xml:lang="ko"><title type="html">google 서비스</title><link href="https://dev-yakuza.github.io/ko/jekyll/google-service/" rel="alternate" type="text/html" title="google 서비스"/><published>2018-10-19T00:00:00+09:00</published><updated>2018-10-19T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/jekyll/google-service-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/jekyll/google-service/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;자신에 블로그에서 수익을 내거나 더 많은 인사이트를 얻기 위해서는 역시 구글 서비스와 연동이 중요한거 같습니다. 여기에서는 블로그를 더욱 잘 활용할 수 있도록 구글 서비스와 연동해 보도록 하겠습니다.&lt;/p&gt; &lt;p&gt;우리가 여기서 연동할 서비스는 아래와 같습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Analytics: &lt;a href=&quot;https://analytics.google.com/analytics/web/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://analytics.google.com/analytics/web/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Google Search Console: &lt;a href=&quot;https://search.google.com/search-console/about&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://search.google.com/search-console/about&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Google Adsense: &lt;a href=&quot;https://www.google.com/adsense/start/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/adsense/start/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;google-analytics&quot;&gt;Google Analytics&lt;/h2&gt; &lt;p&gt;사이트 분석을 위해서는 기본적으로 Google Analytics를 이용합니다. 아래에 링크를 통해 Google Analytics 사이트로 이동하고 구글 계정으로 로그인 합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Analytics: &lt;a href=&quot;https://analytics.google.com/analytics/web/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://analytics.google.com/analytics/web/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;로그인을 하면 아래와 같은 화면을 볼 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;sign up&lt;/code&gt;을 눌러 다음으로 진행하세요.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/analytics/signup.png&quot; alt=&quot;google analytics signup&quot; /&gt;&lt;/p&gt; &lt;p&gt;아래에 사이트 정보를 입력하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Get Tracking ID&lt;/code&gt;를 선택하여 트래킹 코드를 발급받습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/analytics/register-site.png&quot; alt=&quot;google analytics register site&quot; /&gt;&lt;/p&gt; &lt;p&gt;트래킹 코드가 발급되면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Global Site Tag (gtag.js)&lt;/code&gt;에 있는 코드를 복사하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;_include/head.html&lt;/code&gt;에 붙여넣습니다. 테마에 따라 파일 위치/이름이 다를 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/analytics/tracking-code.png&quot; alt=&quot;google analytics tracking code&quot; /&gt;&lt;/p&gt; &lt;p&gt;주의: 위에 보이는 코드는 테스트용 코드임으로 붙여 넣으시면 안됩니다. 자신에 트래킹 코드를 복사 붙여넣기 하시기 바랍니다.&lt;/p&gt; &lt;p&gt;Google Analytics 연동이 완료되었습니다. 이제 데이터를 분석하여 블로그를 관리해보세요.&lt;/p&gt; &lt;h2 id=&quot;google-search-console&quot;&gt;Google Search Console&lt;/h2&gt; &lt;p&gt;Google Search Console은 구글 검색 엔진에 사이트를 등록하여 구글에서 검색이 가능하다록 합니다. 아래에 링크를 눌러 Google Search Console로 이동합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Search Console: &lt;a href=&quot;https://search.google.com/search-console/about&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://search.google.com/search-console/about&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;아래와 같은 화면에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Start now&lt;/code&gt;를 눌러 Google Search Console을 시작합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/search-console/start.png&quot; alt=&quot;google search console start&quot; /&gt;&lt;/p&gt; &lt;p&gt;사이트 URL을 입력하여 Google Search Console에 사이트를 등록합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/search-console/register.png&quot; alt=&quot;google search console start&quot; /&gt;&lt;/p&gt; &lt;p&gt;아래와 같은 화면이 나오면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Analytics&lt;/code&gt;를 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;VERIFY&lt;/code&gt;를 눌러 자신의 사이트임을 증명합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/search-console/verify.png&quot; alt=&quot;google search console verify&quot; /&gt;&lt;/p&gt; &lt;p&gt;이제 사이트맵을 등록시켜 구글봇이 사이트를 크롤링할 수 있도록 안내합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/search-console/sitemap.png&quot; alt=&quot;google search console sitemap&quot; /&gt;&lt;/p&gt; &lt;p&gt;Google Search Console 연동이 완료되었습니다. 이제 구글봇이 사이트를 크롤링할 것입니다. 우리는 기다리는 일만 남았습니다.&lt;/p&gt; &lt;p&gt;구글봇이 사이트를 크롤링하지 못하거나 시간이 많이 걸리면 직접 크롤링 요청할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/search-console/request.png&quot; alt=&quot;google search console request&quot; /&gt;&lt;/p&gt; &lt;p&gt;상단에 검색바에 크롤링을 요청하고 싶은 URL을 넣습니다. 위와 같은 화면에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;REQUEST INDEXING&lt;/code&gt;을 눌러 직접 크롤링을 요청할 수 있습니다.&lt;/p&gt; &lt;p&gt;Google Search Console 연동이 끝났습니다. 이제 우리 사이트가 구글에서 검색이 가능하게 됩니다.&lt;/p&gt; &lt;h2 id=&quot;google-adsense&quot;&gt;Google Adsense&lt;/h2&gt; &lt;p&gt;우리가 블로그로 엄청난 부자가 될 일은 없지만 Google Adsense 연동 연습도 할겸 돈도 벌어 볼겸 jekyll에 Google Adsense를 연동해 봅시다.&lt;/p&gt; &lt;p&gt;아래에 링크를 통해 Google Adsense 사이트로 이동합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Adsense: &lt;a href=&quot;https://www.google.com/adsense/start/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/adsense/start/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Google Adsense 사이트에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;sign up&lt;/code&gt;을 눌러 가입합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/adsense/signup.png&quot; alt=&quot;google adsense signup&quot; /&gt;&lt;/p&gt; &lt;p&gt;사이트 등록이 완료되면 payment를 등록해야합니다. Google Adsense에서 돈을 받을 분에 정보를 입력합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/adsense/payment.png&quot; alt=&quot;google adsense payment&quot; /&gt;&lt;/p&gt; &lt;p&gt;그리고 Google Adsense가 우리 사이트를 등록해 줄때까지 기다리면 됩니다. 보통 하루면 등록이 된다고 하지만, 우리 사이트는 2~3주정도 걸렸습니다. 처음 블로그를 만들때 등록해서 컨텐츠(페이지)가 별로 없어서 등록을 안시켜준게 아닌가 싶습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/adsense/get.png&quot; alt=&quot;google adsense get&quot; /&gt;&lt;/p&gt; &lt;p&gt;많은 유저들이 페이지를 보거나 클릭하면 이렇게 Google Adsense로부터 돈이 들어옵니다. 실제로 우리 통장에 입금하기 위해서는 일정 금액(¥8,000)이상이 되어야 입금이 가능합니다. 입금이 가능한 날이 오면 입금 절차도 블로그에 작성하도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Google Analytics: &lt;a href=&quot;https://analytics.google.com/analytics/web/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://analytics.google.com/analytics/web/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Google Search Console: &lt;a href=&quot;https://search.google.com/search-console/about&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://search.google.com/search-console/about&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Google Adsense: &lt;a href=&quot;https://www.google.com/adsense/start/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/adsense/start/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 자신에 블로그에서 수익을 내거나 더 많은 인사이트를 얻기 위해서는 역시 구글 서비스와 연동이 중요한거 같습니다. 여기에서는 블로그를 더욱 잘 활용할 수 있도록 구글 서비스와 연동해 보도록 하겠습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/jekyll/google-service.jpg"/></entry><entry xml:lang="ko"><title type="html">이메일 발송 기능</title><link href="https://dev-yakuza.github.io/ko/jekyll/send-email/" rel="alternate" type="text/html" title="이메일 발송 기능"/><published>2018-10-18T00:00:00+09:00</published><updated>2018-10-18T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/jekyll/send-email-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/jekyll/send-email/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;우리는 &lt;a href=&quot;https://pages.github.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;github page&lt;/a&gt;로 블로그를 서비스하고 있습니다. jekyll로 생성한 정적 파일(html, css, javascript)를 github page에 업로드하는 것으로 블로그를 서비스하고 있습니다. 이 말은 서버쪽 소스는 생성, 활용을 할 수 없다는 의미입니다. 그러므로 일반적으로 서버를 통해 이메일을 발송하는 간단한 기능도 github과 jekyll을 이용한 사이트는 구현할 수 없습니다.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://formspree.io/&quot; rel=&quot;nofollow noreferrer&quot;&gt;formspree 서비스&lt;/a&gt;는 이와 같은 정적 페이지에 이메일 전송 기능을 무료로 구현할 수 있도록 도와주는 서비스입니다. 이 블로그에서 formspree를 사용하여 jekyll에서 이메일을 발송하는 기능을 구현하도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;formspree-서비스&quot;&gt;formspree 서비스&lt;/h2&gt; &lt;p&gt;formspree 서비스는 회원 가입을 하지 않고도 무료로 사용할 수 있습니다. 아래에 링크를 통해 서비스 사이트로 이동합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;formspree 서비스: &lt;a href=&quot;https://formspree.io/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://formspree.io/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;formspree-서비스-이용하기&quot;&gt;formspree 서비스 이용하기&lt;/h2&gt; &lt;p&gt;formspree 서비스 사이트로 이동하면 아래와 같은 화면을 볼 수 있습니다. &lt;img src=&quot;/assets/images/category/jekyll/formspree/homepage.png&quot; alt=&quot;formspree service site&quot; /&gt;&lt;/p&gt; &lt;p&gt;왼쪽 위에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Try Formspree!&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/formspree/test-site.png&quot; alt=&quot;formspree test site&quot; /&gt;&lt;/p&gt; &lt;p&gt;위에 화면에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Edit your form here&lt;/code&gt; 부분을 수정하여 실제로 사용할 form을 작성합니다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://formspree.io/YOUREMAILHERE&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;action부분에 사용할 이메일을 사용할 이메일을 넣습니다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://formspree.io/dev.yakuza@gmail.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 오른쪽에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Test it here&lt;/code&gt;을 통해 실제 메일을 발송합니다.&lt;/p&gt; &lt;p&gt;메일을 발송하고 나면 form에 작성한 메일이 실제 자신에 메일인지 formspree이 확인 메일을 발송합니다. 메일을 확인하여 자신에 메일임을 증명합니다.&lt;/p&gt; &lt;p&gt;formspree 서비스를 통해 이메일 발송 기능을 jekyll에 추가할 준비가 완료되었습니다.&lt;/p&gt; &lt;h2 id=&quot;jekyll에-formspree-적용하기&quot;&gt;jekyll에 formspree 적용하기&lt;/h2&gt; &lt;p&gt;위에서 생성한 html form 소스를 복사하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;_layout/contact.html&lt;/code&gt;에 삽입합니다. 레이아웃 파일은 테마에 따라 다를 수 있습니다. 아래에 코드는 우리가 실제로 사용하고 있는 소스입니다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sentMessage&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;contactForm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;novalidate&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://formspree.io/dev.yakuza@gmail.com&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_subject&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;블로그에서 새로운 연락이 왔습니다.&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_gotcha&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;display:none&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;control-group&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group floating-label-form-group controls&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-validation-required-message=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;help-block text-danger&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group floating-label-form-group controls&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-validation-validemail-message=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-validation-required-message=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;help-block text-danger&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group floating-label-form-group controls&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;5&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-validation-required-message=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;help-block text-danger&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;success&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sendMessageButton&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Send&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;action=&quot;https://formspree.io/dev.yakuza@gmail.com&quot; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;form의 action에 &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;에 설정한 이메일을 사용하도록 하였습니다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_gotcha&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;display:none&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 코드로 이메일을 발송할때 &lt;code class=&quot;highlighter-rouge&quot;&gt;CAPTCHA&lt;/code&gt;를 표시하도록 설정합니다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_subject&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;블로그에서 새로운 연락이 왔습니다.&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;메일에 제목을 설정합니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;모든 설정이 완료되었습니다. 실제 사이트에서 메일이 발송되는지 확인하세요.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;공식 사이트: &lt;a href=&quot;https://formspree.io/&quot; rel=&quot;nofollow noreferrer&quot;&gt;formspree 서비스&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 우리는 github page로 블로그를 서비스하고 있습니다. jekyll로 생성한 정적 파일(html, css, javascript)를 github page에 업로드하는 것으로 블로그를 서비스하고 있습니다. 이 말은 서버쪽 소스는 생성, 활용을 할 수 없다는 의미입니다. 그러므로 일반적으로 서버를 통해 이메일을 발송하는 간단한 기능도 github과 jekyll을 이용한 사이트는 구현할 수 없습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/jekyll/send-email.jpg"/></entry><entry xml:lang="ko"><title type="html">Disqus 댓글</title><link href="https://dev-yakuza.github.io/ko/jekyll/disqus/" rel="alternate" type="text/html" title="Disqus 댓글"/><published>2018-10-17T00:00:00+09:00</published><updated>2018-10-17T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/jekyll/disqus-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/jekyll/disqus/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;jekyll은 기본적으로 정적 페이지 생성 시스템입니다. 따라서 동적으로 데이터 저장이 필요한 댓글 기능을 만드는 것은 불가능합니다. 하지만 우리는 &lt;a href=&quot;https://pages.github.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;github page&lt;/a&gt;로 블로그를 서비스하고 싶고 댓글 기능도 사용하고 싶습니다.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://disqus.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Disqus 서비스&lt;/a&gt;는 사이트에 무료로 댓글 기능을 사용하게 해주는 엄청난 서비스입니다. 여기서 jekyll로 생성된 페이지에 Disqus를 사용하는 방법에 대해서 소개하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;disqus-서비스-가입&quot;&gt;Disqus 서비스 가입&lt;/h2&gt; &lt;p&gt;Disqus 서비스를 이용하려면 일단 회원 가입을 해야겠죠. 아래에 사이트 링크를 통해 회원 가입을 합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Disqus 서비스 회원 가입하기: &lt;a href=&quot;https://disqus.com/profile/signup/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://disqus.com/profile/signup/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;disqus-서비스-사용&quot;&gt;Disqus 서비스 사용&lt;/h2&gt; &lt;p&gt;회원 가입을 하고 나면 아래와 같은 화면을 볼 수 있습니다. 아래와 같은 화면이 보이지 않는다면 &lt;a href=&quot;https://disqus.com/profile/signup/intent/&quot; rel=&quot;nofollow noreferrer&quot;&gt;링크&lt;/a&gt;를 클릭해주세요.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/disqus/account_created.png&quot; alt=&quot;disqus account created&quot; /&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I want to comment on sites: disqus를 사용하고 있는 다른 사이트에 댓글을 다는 메뉴입니다.&lt;/li&gt; &lt;li&gt;I want to isntall Disqus on my site: disqus를 자신에 사이트에 설치하는 메뉴입니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;아래의 &lt;code class=&quot;highlighter-rouge&quot;&gt;I want to install Disqus on my site&lt;/code&gt; 메뉴를 선택합니다.&lt;/p&gt; &lt;p&gt;아래와 같은 화면에서 Disqus를 사용하고 싶은 사이트에 정보를 입력합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/disqus/register_site.png&quot; alt=&quot;register site&quot; /&gt;&lt;/p&gt; &lt;p&gt;요금제를 선택하는 화면이 나오면 무료 요금제를 선택하자. &lt;img src=&quot;/assets/images/category/jekyll/disqus/choose_plan.png&quot; alt=&quot;choose plan&quot; /&gt;&lt;/p&gt; &lt;p&gt;등록을 하면 아래와 같이 플랫폼 선택 화면이 나옵니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/disqus/choose_platform.png&quot; alt=&quot;choose platform&quot; /&gt;&lt;/p&gt; &lt;p&gt;우리는 jekyll에 설치할 예정이므로 jekyll 플랫폼을 선택합니다.&lt;/p&gt; &lt;p&gt;플랫폼 페이지에 설정 설명이 자세히 나와있습니다. 한번 따라해 봅시다.&lt;/p&gt; &lt;h3 id=&quot;disqus-페이지-설정&quot;&gt;Disqus 페이지 설정&lt;/h3&gt; &lt;p&gt;Disqus를 사용하고자 하는 post 상단 yml에 아래에 옵션을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;comment: Disqus 기능을 사용할지 여부를 설정합니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;레이아웃-수정&quot;&gt;레이아웃 수정&lt;/h3&gt; &lt;p&gt;레이아웃 파일인 &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts/page.html&lt;/code&gt;에 댓글 기능을 표시하고 싶은 부분에 아래에 코드를 넣습니다. 테마에 따라 레이아웃 파일이 다를 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;disqus에서 제공하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Universal Embed Code&lt;/code&gt;를 복사하여 붙여넣습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;링크 주소: &lt;code class=&quot;highlighter-rouge&quot;&gt;https://your-disqus-site-url/admin/install/platforms/universalcode&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;disqus_thread&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// DON'T EDIT BELOW THIS LINE&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'script'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'site link'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'data-timestamp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;noscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Please&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://disqus.com/?ref_noscript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;powered&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Disqus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/a&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;noscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;주의: 위에 코드를 복사 붙여넣기해서는 안됩니다. disqus 사이트에서 자신의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Universal Embed Code&lt;/code&gt;를 복사 붙여넣기해 주시기 바랍니다.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;설정이 완료되었습니다. 지킬을 실행해서 Disqus가 잘 표시되는지 확인해 보세요.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll serve &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;공식 사이트: &lt;a href=&quot;https://disqus.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Disqus&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 jekyll은 기본적으로 정적 페이지 생성 시스템입니다. 따라서 동적으로 데이터 저장이 필요한 댓글 기능을 만드는 것은 불가능합니다. 하지만 우리는 github page로 블로그를 서비스하고 싶고 댓글 기능도 사용하고 싶습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/jekyll/disqus.jpg"/></entry><entry xml:lang="ko"><title type="html">react-native-tts</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-tts/" rel="alternate" type="text/html" title="react-native-tts"/><published>2018-10-16T00:00:00+09:00</published><updated>2018-10-16T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-tts-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-tts/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/ak1394/react-native-tts&quot; rel=&quot;nofollow noreferrer&quot;&gt;react-native-tts&lt;/a&gt;를 사용하여 RN 프로젝트에서 text-to-speech 기능을 구현해보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;라이브러리-설치&quot;&gt;라이브러리 설치&lt;/h2&gt; &lt;p&gt;아래에 명령어로 react-native-tts을 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-tts &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설치가 완료되면 아래에 명령어로 react-native-tts 라이브러리와 프로젝트를 연결합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-tts &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;사용법&quot;&gt;사용법&lt;/h2&gt; &lt;p&gt;우리는 기본적으로 사용한적이 있는 경우만 블로그로 작성합니다. 따라서 여기에 작성된 내용은 우리가 사용할 때마다 추가될 것입니다.&lt;/p&gt; &lt;p&gt;사용법에 대한 자세한 사항은 공식 홈페이지를 참조하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;공식 사이트: &lt;a href=&quot;https://github.com/ak1394/react-native-tts&quot; rel=&quot;nofollow noreferrer&quot;&gt;react-native-tts&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;text-to-speech&quot;&gt;text-to-speech.&lt;/h2&gt; &lt;p&gt;아래에 방법으로 text-to-speech를 구현합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-tts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Home&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDefaultLanguage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'en-IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onPressSpeech&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Hello, world!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;setDefaultLanguage: 언어 설정을 합니다. 언어 코드는 &lt;a href=&quot;https://docs.fedoraproject.org/en-US/Fedora_Contributor_Documentation/1/html/Users_Guide/appe-Users_Guide-Language_codes.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;Language codes&lt;/a&gt;을 참고하세요.&lt;/li&gt; &lt;li&gt;speak: 해당 단어를 소리내어 읽습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;공식 사이트: &lt;a href=&quot;https://github.com/ak1394/react-native-tts&quot; rel=&quot;nofollow noreferrer&quot;&gt;react-native-tts&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Language codes: &lt;a href=&quot;https://docs.fedoraproject.org/en-US/Fedora_Contributor_Documentation/1/html/Users_Guide/appe-Users_Guide-Language_codes.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;Language codes&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 react-native-tts를 사용하여 RN 프로젝트에서 text-to-speech 기능을 구현해보도록 하겠습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-tts.jpg"/></entry></feed>