<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dev-yakuza.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/" rel="alternate" type="text/html"/><updated>2019-02-16T21:02:35+09:00</updated><id>https://dev-yakuza.github.io/</id><title type="html">Dreams the art through programming</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ja"><title type="html">Kumonchoアプリ開発日誌(RN, React Native)</title><link href="https://dev-yakuza.github.io/kumoncho/development-journal/" rel="alternate" type="text/html" title="Kumonchoアプリ開発日誌(RN, React Native)"/><published>2019-02-11T00:00:00+09:00</published><updated>2019-02-15T09:59:43+09:00</updated><id>https://dev-yakuza.github.io/kumoncho/development-journal-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/kumoncho/development-journal/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;以前のプロジェクトでは一人でRN(React Native)を使ってアプリを最初から最後まで作ってみました。今回は別の人と協業してプロジェクトを進めてたいので、以前のプロジェクトで一番時間が掛かったデザインを担当してくれる友達と一緒にプロジェクトを進めてみました。以前のプロジェクトが気になる方は下記のリンクを押して以前のプロジェクトを開発した時のエピソードをみてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/blaboo/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBooアプリ開発日誌(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;くもんちょkumonchoとは&quot;&gt;くもんちょ(Kumoncho)とは?&lt;/h2&gt; &lt;p&gt;くもんちょ(Kumoncho)は雲の国のイカロス王子と彼の雲の友達、くもんちょの友情と容器に関する子供向け絵本アプリです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Kumoncho紹介ページ: &lt;a href=&quot;https://dev-yakuza.github.io/app/kumoncho/ko/&quot; target=&quot;_blank&quot;&gt;Kumoncho&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記はアプリのダウンロードリンクです。&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/kumoncho/id1450902241&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょiOSダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.kumoncho&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょアンドロイドダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;h2 id=&quot;なぜ作るようになったか&quot;&gt;なぜ作るようになったか？&lt;/h2&gt; &lt;p&gt;以前のプロジェクトは一人でRN(React Native)でアプリを最初から最後まで開発することを中心にしました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/blaboo/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBooアプリ開発日誌(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;それで今回のプロジェクトは他の人と協業することを焦点にしたかったです。また、以前のプロジェクトで一番時間が掛かったデザインの部分を協業で時間を短縮してもっと早くアプリを作成したかったです。&lt;/p&gt; &lt;p&gt;最後は、漫画家になりたかったけど、その夢を達成できなくってデザイナで仕事してる友達が一人いました。けれど、その才能がもったいないと思ってこのプロジェクトに誘いました。漫画家は数万ページ、数万ストーリーを作らなければならないですが、子供向け絵本は短いテーマで作れるので今の業務をしながら、趣味で作れるじゃない？と言えながら一緒に作ってみようと説得しました。&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/kumoncho/development-journal/profile_shu.png&quot; alt=&quot;子供向け絵本作者shuプロフィール&quot; /&gt; &lt;/div&gt; &lt;ul&gt; &lt;li&gt;Shu: &lt;a href=&quot;mailto:meiki.shuzou@gmail.com&quot;&gt;meiki.shuzou@gmail.com&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;幸いに一緒に作ることになって、この友達が絵とストーリーを、私がプロジェクトのディレクティングと開発を担当して進めることになりました。&lt;/p&gt; &lt;p&gt;このプロジェクトをはじめ、この友達とは続けて子供向けの絵本アプリを作成する予定であり、絵本を出版することを最終目標として設定しました。くもんちょをリリースしながら、既に2番目の子供向け絵本アプリを準備しています。&lt;/p&gt; &lt;p&gt;お互いに仕事してる会社が違うので、フィードバックは主にラインのメッセージでやりとりで、必要な時ランチでテレビ会議をしました。担当してるパートが重ならなくはっきり分かれてるので、協業には大きな問題なく進めることができました。&lt;/p&gt; &lt;h2 id=&quot;アプリの企画&quot;&gt;アプリの企画&lt;/h2&gt; &lt;p&gt;今回のプロジェクトは子供向け絵本アプリですが、作者の友達は絵本のストーリーや絵を書いたことがないし、私も絵本アプリを作ったことなかったです。それで一旦資料調査をはじめました。&lt;/p&gt; &lt;p&gt;最終目標は絵本の出版なので現在の子供向け絵本の基準を調査しました。&lt;/p&gt; &lt;p&gt;子供向け絵本は16、24、48ページの本がありますが、32ページが業界標準です。(もし間違ったらコメントください。)&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/kumoncho/development-journal/picture_book.jpg&quot; alt=&quot;子供向け絵本32ページ&quot; /&gt; (写真の出所: &lt;a href=&quot;https://taralazar.com/2009/02/22/picture-book-construction-know-your-layout/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://taralazar.com&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;また、私たちは出版する本(本当に出版できるか分からないけど)とアプリの違いを作って、アプリを既に見た方も本を購買出来るように企画しました。それで結論出したページが9ページ。あまり長くも短くもないページを設定しました。(絵本の出版は32ページを想定しています。)&lt;/p&gt; &lt;p&gt;これでページを決定したら作者の友達は簡単にストーリーとイラストのレイアウトを構成することができました。&lt;/p&gt; &lt;h2 id=&quot;ストーリーとイラスト&quot;&gt;ストーリーとイラスト&lt;/h2&gt; &lt;p&gt;作者の友達と私は子供向け絵本アプリは初めて作るので、最初のストーリーは無難なストーリーで決定しました。アプリをダウンロードして内容を見たら分かると思いますが、どこかで見た気がする、どこかにある気がする内容を初ストーリーで決定しました。&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/kumoncho/id1450902241&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょiOSダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.kumoncho&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょアンドロイドダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;p&gt;ストーリーが決まると、作者の友達はスケッチで人物と背景を躯体化しました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/kumoncho/development-journal/sketch.png&quot; alt=&quot;くもんちょスケッチ&quot; /&gt;&lt;/p&gt; &lt;p&gt;そしてストーリーを磨き、そのストーリーと合わせてイラストを描き出しました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/kumoncho/development-journal/illustration.png&quot; alt=&quot;くもんちょイラスト&quot; /&gt;&lt;/p&gt; &lt;p&gt;私の友達だからではなく、本当に絵とストーリーには才能があるのではないかなと思います。&lt;/p&gt; &lt;h2 id=&quot;アプリ開発&quot;&gt;アプリ開発&lt;/h2&gt; &lt;p&gt;アプリ開発はもちろんRN(React Native)を使いました。くもんちょは基本的RN(&lt;code class=&quot;highlighter-rouge&quot;&gt;React Native&lt;/code&gt;)とタイプスクリプト(&lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;)を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)インストール方法: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/installation/&quot; target=&quot;_blank&quot;&gt;RNインストール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)にtypescriptタイプスクリプト適用: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;また、RN(React Native)の基本スタイルは&lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;を使いました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Navtive)でstyled-components使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;ページの背景には&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;を使ってグラデーションの効果を入れました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Navtive)でグラデーション(Gradient)を使う方法: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-linear-gradient/&quot; target=&quot;_blank&quot;&gt;react-native-linear-gradient&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;初めて開発した時は、ページ転換を下記のようにスクロールを使いました。&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/kumoncho/development-journal/kumoncho_scroll.gif&quot; alt=&quot;子供向け絵本くもんちょスクロール&quot; /&gt; &lt;/div&gt; &lt;p&gt;しかし、自然なページ転換を演出したくて&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-linear-gradient/&quot; target=&quot;_blank&quot;&gt;react-native-linear-gradient&lt;/a&gt;で紹介したグラデーションのアニメーションを適用して背景を変更しました。それと&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-animatable/&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt;のfadein/fadeoutでイメージの登場効果を入れました。&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/kumoncho/development-journal/kumoncho_swipe.gif&quot; alt=&quot;子供向け絵本くもんちょスワイプ&quot; /&gt; &lt;/div&gt; &lt;p&gt;ページの転換にはユーザのスワイプのイベントを検知するようにしました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)でスワイプ検知: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-swipe-gestures/&quot; target=&quot;_blank&quot;&gt;react-native-swipe-gestures&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;最後にはアプリの広告と分析のためグーグルのファイアベース(Google Firevase)とグーグルアドモブ(Google Admob)を使ってます。これを実装するため&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-firebase admobの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-admob&lt;/a&gt;&lt;/li&gt; &lt;li&gt;react-native-firebase analyticsの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-analytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-analytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;react-native-firebase Crashlyticsの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/firebase-crashlytics/&quot; target=&quot;_blank&quot;&gt;firebase-crashlytics&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記のリストは付加的な機能を実装するため使ったライブラリです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)でメール発信: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-mail/&quot; target=&quot;_blank&quot;&gt;react-native-mail&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)でレビュー案内: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-rate/&quot; target=&quot;_blank&quot;&gt;react-native-rate&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)でsplashイメージコントロール: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-splash-screen/&quot; target=&quot;_blank&quot;&gt;react-native-splash-screen&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)でTTS(Text To Speech)を使う方法: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-tts/&quot; target=&quot;_blank&quot;&gt;react-native-tts&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;アプリ登録&quot;&gt;アプリ登録&lt;/h2&gt; &lt;p&gt;以前のプロジェクトではアプリ登録する時結構大変でした。(&lt;a href=&quot;https://dev-yakuza.github.io/blaboo/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBooアプリ開発日誌(RN, React Native)&lt;/a&gt;) その時の経験のお陰で、今回のプロジェクトのアプリ登録は問題なく進めることができました。&lt;/p&gt; &lt;p&gt;iOSは子供のカテゴリーを選べて登録を試しましたが、アプリ中に外部リンクがあって審査はリジェクト(Reject)されました。子供のカテゴリーの場合、Parental Gateの機能で外部リンクを保護する義務がありますが、私のアプリはこれを無視して問題になりました。Parental Gateに関していいライブラリを見つけれなかったので、子供のカテゴリーを放棄して登録申請をして登録しました。&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/kumoncho/id1450902241&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょiOSダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.kumoncho&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょアンドロイドダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;h2 id=&quot;最後に&quot;&gt;最後に&lt;/h2&gt; &lt;p&gt;今回の子供向け絵本アプリプロジェクトは企画段階でもっとベンチマーキングと競争社(絵本)を分析するべきでした。私たちはページ数が決定された瞬間ストーリーとイラストに集中したので1ページへ入る内容、つまり文字数を決定しなかったミスをしました。&lt;code class=&quot;highlighter-rouge&quot;&gt;ストーリーとイラスト&lt;/code&gt;セクションでイラストを見たと思いますが、最初のイラストには絵しかありませんでした。アプリを開発する段階でイラストに関する内容を伝えるため、あとで内容を入れました。そのせいで、イラストの求道とストーリーの伝達力が落ちる問題が発生しました。&lt;/p&gt; &lt;p&gt;また、絵本を基準にして作業したので、アプリで絵本を読む部分、つまりUXを深く考えなかったです。今も途中でアプリを終了してアプリを再起動した場合、いつも最初から全て見ないとダメです。中間ページに飛べる機能もないです。UXに関しては完全に失敗したプロジェクトと思います。&lt;/p&gt; &lt;p&gt;開発にも問題はありました。アプリをリリースした後、作者の友達からタブレットも対応して欲しい話がありました。RN(React Native)はそもそもクロスプラットフォームなので簡単に転換できると思いました。実際以前のプロジェクト(&lt;a href=&quot;https://dev-yakuza.github.io/blaboo/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBooアプリ開発日誌(RN, React Native)&lt;/a&gt;)は簡単なアプリなので簡単に転換できました。しかし、今回のプロジェクトはイメージが多いし、そのイメージを設定する部分でタブレットを考慮しなくて設計したのでタブレットの転換に失敗しました。時間があったら設計を直してタブレットも対応する予定ですが最初からうまく作るべきでした。&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/kumoncho/id1450902241&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょiOSダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.kumoncho&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょアンドロイドダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;p&gt;最後の最後ですが、出版業界いらっしゃる方中で私たちのアプリを絵本に出版したい方がいたら連絡してください！！&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;mailto:dev.yakuza@gmail.com&quot;&gt;dev.yakuza@gmail.com&lt;/a&gt;&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 以前のプロジェクトでは一人でRN(React Native)を使ってアプリを最初から最後まで作ってみました。今回は別の人と協業してプロジェクトを進めてたいので、以前のプロジェクトで一番時間が掛かったデザインを担当してくれる友達と一緒にプロジェクトを進めてみました。以前のプロジェクトが気になる方は下記のリンクを押して以前のプロジェクトを開発した時のエピソードをみてください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/kumoncho/background.png"/></entry><entry xml:lang="ja"><title type="html">アプリストアレビュー</title><link href="https://dev-yakuza.github.io/react-native/react-native-rate/" rel="alternate" type="text/html" title="アプリストアレビュー"/><published>2019-02-09T00:00:00+09:00</published><updated>2019-02-09T23:00:20+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-rate-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-rate/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)でアプリを開発してリリースしたらアプリストアでレビューを作成してくれた方々が出ました。そのレビューをみたら開発したやりがいも感じるし、ユーザが必要な機能についても理解することができました。しかし、今までは特にアプリ中でアプリレビューを作成するように誘導してないのでアプリレビュー作成を誘導したらもっとたくさんのユーザのご意見を貰うことが出来ると思いました。&lt;/p&gt; &lt;p&gt;このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;ライブラリを使ってRN(React Native)で開発したアプリからアプリストアレビュー作成を誘導する方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-rate公式サイト: &lt;a href=&quot;https://github.com/KjellConnelly/react-native-rate&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/KjellConnelly/react-native-rate&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;ライブラリを使うため、下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install react-native-rate &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ライブラリ連結&quot;&gt;ライブラリ連結&lt;/h2&gt; &lt;p&gt;ライブラリインストールが終わったら、下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;ライブラリをRN(React Native)プロジェクトと連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-rate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;下記のソースコードは&lt;a href=&quot;https://github.com/KjellConnelly/react-native-rate&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-rate公式サイト&lt;/a&gt;の一部をコピーした内容です。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AndroidMarket&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-rate'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Rate App&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;AppleAppID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2193813192&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GooglePackageName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;com.mywebsite.myapp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;AmazonPackageName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;com.mywebsite.myapp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;OtherAndroidURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.randomappstore.com/app/47172391&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preferredAndroidMarket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AndroidMarket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preferInApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;openAppStoreIfInAppFails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fallbackPlatformURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.mywebsite.com/myapp.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this technically only tells us if the user successfully went to the Review Page. Whether they actually did anything, we do not know.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このソースを見たらわかると思いますが、アプリレビュー作成を誘導したい時色んなオプションと一緒に&lt;code class=&quot;highlighter-rouge&quot;&gt;Rate.rate()&lt;/code&gt;を実行すればいいです。下のソースコードは実際私たちが使ってるソースコードの一部です。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncStorage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AndroidMarket&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-rate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isAlreadyRate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'isAlreadyRate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countStartApp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'countStartApp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countStartApp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;countStartApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isAlreadyRate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'App Rating'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Please give us your opinion!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Later'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Cancel Pressed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cancel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'OK'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;AppleAppID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'***************'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GooglePackageName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'******************'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preferredAndroidMarket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AndroidMarket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preferInApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;openAppStoreIfInAppFails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'isAlreadyRate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'true'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'countStartApp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;私たちは&lt;code class=&quot;highlighter-rouge&quot;&gt;AsyncStorage&lt;/code&gt;にアプリレビューをしたかどうかを保存してアプリレビューをしたユーザはアプリレビューの誘導をしないように処理しています。また、アプリの実行回数が3の倍数の場合アプリレビューの誘導ダイアログを表示して既存のUXを邪魔しないようにしています。&lt;/p&gt; &lt;p&gt;上記で見た&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;公式サイトソースには色んな設定がありますが、私たちはiOSのアプリストアとアンドロイドのGoogle Playストアだけ使ってるので、&lt;code class=&quot;highlighter-rouge&quot;&gt;AppleAppID&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;GooglePackageName&lt;/code&gt;オプションだけ使います。AppleAppIDはアプリストアダウンロードリンクのURL後ろの部分を見るか、Appstore Connectにある&lt;code class=&quot;highlighter-rouge&quot;&gt;アプリ情報&lt;/code&gt;から確認することができます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;アプリのロードマップも重要ですが、やはり一番重要なことはユーザのご意見じゃないかなと思います。ユーザがもっと簡単にご意見を伝えることが出来るように案内することもアプリ開発中で重要に考慮する項目じゃないかなと思います。&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;を使って皆さんもユーザがもっと簡単に意見を出せるように誘導してみてください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-rate公式サイト: &lt;a href=&quot;https://github.com/KjellConnelly/react-native-rate&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/KjellConnelly/react-native-rate&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)でアプリを開発してリリースしたらアプリストアでレビューを作成してくれた方々が出ました。そのレビューをみたら開発したやりがいも感じるし、ユーザが必要な機能についても理解することができました。しかし、今までは特にアプリ中でアプリレビューを作成するように誘導してないのでアプリレビュー作成を誘導したらもっとたくさんのユーザのご意見を貰うことが出来ると思いました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-rate.jpg"/></entry><entry xml:lang="ja"><title type="html">プレビュー</title><link href="https://dev-yakuza.github.io/jekyll/preview-speed-up/" rel="alternate" type="text/html" title="プレビュー"/><published>2019-02-07T00:00:00+09:00</published><updated>2019-02-07T14:11:05+09:00</updated><id>https://dev-yakuza.github.io/jekyll/preview-speed-up-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/jekyll/preview-speed-up/">&lt;h2 id=&quot;問題点&quot;&gt;問題点&lt;/h2&gt; &lt;p&gt;今ジキル(jekyll)で管理してるブログが作成した記事が多くなって、ローカルで作成した記事を確認する時、時間が結構掛かります。私は下のジキル(jekyll)コマンドで記事を公開する前ローカルで作成した記事を確認しています。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;しかし、記事の量が多いし、使ってるプラグインが多いので記事を確認するため&lt;code class=&quot;highlighter-rouge&quot;&gt;209.498985 seconds&lt;/code&gt;を待たなければならない問題が発生しました。配布するためこのぐらい時間が掛かることはいいですが、新記事を確認するたびにこのぐらい時間が掛かることはちょっと勿体無いなと思いました。&lt;/p&gt; &lt;h2 id=&quot;解決策&quot;&gt;解決策&lt;/h2&gt; &lt;p&gt;たくさんの解決策があるみたいですが私は下記のジキル(jekyll)設定でビルド速度をあげました。&lt;/p&gt; &lt;p&gt;まず、 &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;をコピーして&lt;code class=&quot;highlighter-rouge&quot;&gt;_config-dev.yml&lt;/code&gt;を作りました。。そして、下のコードを追加しました。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 多言語を使ってるので3を設定。普通は１で設定&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;limit_posts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして、作成した記事を確認するため下のジキル(jekyll)コマンドを使ってます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt; _cong-dev.yml &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このコードは一つのブログ記事のみビルドするようにします。私はこのジキル(jekyll)設定を使って&lt;code class=&quot;highlighter-rouge&quot;&gt;74.639 seconds&lt;/code&gt;だけ待ってば記事を確認することが出来るようになりました。また、ジキル(jekyll)プラグイン中で時間が結構掛かる&lt;code class=&quot;highlighter-rouge&quot;&gt;minify&lt;/code&gt;プラグインを使えないように下記のように設定しました。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;jekyll-minifier&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;remove_spaces_inside_tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;remove_multi_spaces&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;remove_comments&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;compress_css&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;compress_javascript&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;compress_json&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;こんな設定をしたらビルド時間が&lt;code class=&quot;highlighter-rouge&quot;&gt;50.668 seconds&lt;/code&gt;、20秒くらい早くなりました。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;上記で説明した方法で200秒から50秒にビルド時間が1/4に減少しました。しかし、まだ50秒くらいかかりますね。これはジキル(jekyll)の大問題点と思います。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">問題点 今ジキル(jekyll)で管理してるブログが作成した記事が多くなって、ローカルで作成した記事を確認する時、時間が結構掛かります。私は下のジキル(jekyll)コマンドで記事を公開する前ローカルで作成した記事を確認しています。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/jekyll/preview-speed-up.jpg"/></entry><entry xml:lang="ja"><title type="html">App Splash スクリーン</title><link href="https://dev-yakuza.github.io/react-native/react-native-splash-screen/" rel="alternate" type="text/html" title="App Splash スクリーン"/><published>2019-02-06T00:00:00+09:00</published><updated>2019-02-07T10:36:45+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-splash-screen-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-splash-screen/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)は基本的にSplashスクリーンを提供しています。以前のブログでも紹介しましたが、&lt;code class=&quot;highlighter-rouge&quot;&gt;generator-rn-toolbox&lt;/code&gt;ツールを使ったら簡単に色んなサイズのSplashイメージを作れます。下のリンクは&lt;code class=&quot;highlighter-rouge&quot;&gt;generator-rn-toolbox&lt;/code&gt;ツールを使ってSplashイメージを作る方法に関するブログです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/splash-image/&quot; target=&quot;_blank&quot;&gt;Splashイメージ&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;しかし、実際アプリを起動したらSplashスクリーンが早く終了されます。普通のアプリではSplashスクリーンを表示して裏で必要な情報をapiで取ってきてSplashスクリーンを終了してその情報を表示する自然なUXを提供するが、RN(React Native)が基本的に提供してるSplashスクリーンでそうゆう感じのUXを提供することは難しです。&lt;/p&gt; &lt;p&gt;このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;ライブラリを使ってSplashスクリーンを終了する時点をコントロールして自然なUXを提供するように作ってみます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-splash-screen公式サイト: &lt;a href=&quot;https://github.com/crazycodeboy/react-native-splash-screen&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/crazycodeboy/react-native-splash-screen&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)でSplashスクリンーんを好きな時終了させるため&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;ライブラリを下記のコマンドでインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-splash-screen &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ライブラリ連結&quot;&gt;ライブラリ連結&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を使うため下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;ライブラリとRN(React Native)プロジェクトを連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-splash-screen &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ライブラリ連結失敗&quot;&gt;ライブラリ連結失敗&lt;/h3&gt; &lt;p&gt;下記のような場合RN(React Native)に&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を連結する時連結がうまくいかなくって失敗する場合があります。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;アンドロイドプロジェクトのパッケージ(Package)名を変更した場合。&lt;/li&gt; &lt;li&gt;iOSで&lt;code class=&quot;highlighter-rouge&quot;&gt;Pod&lt;/code&gt;を使ってる場合。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;私は両方使ってるので連結する時結構大変でした。上のような場合、連結が失敗する方は下記の方法を使ってみてください。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;アンドロイドプロジェクトのパッケージ(Package)名を変更した場合。 アンドロイドパッケージ(Package)名に合わせてフォルダーの構造を変更します。例えば、パッケージ名が&lt;code class=&quot;highlighter-rouge&quot;&gt;io.github.dev.yakuza.blaboo&lt;/code&gt;の場合、&lt;code class=&quot;highlighter-rouge&quot;&gt;com/blaboo&lt;/code&gt;であるフォルダーの構造を&lt;code class=&quot;highlighter-rouge&quot;&gt;io/github/dev/yakuza/blaboo&lt;/code&gt;で変更します。&lt;/li&gt; &lt;li&gt;iOSで&lt;code class=&quot;highlighter-rouge&quot;&gt;Pod&lt;/code&gt;を使う場合。 私はほとんどのプロジェクトギット(git)で管理したます。下記の方法は(git)を使った場合です。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;下のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;Pod&lt;/code&gt;を削除します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# cd ios&lt;/span&gt; pod deintegrate rm Podfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;ライブラリをインストールしてRN(React Native)プロジェクトへ連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# React Native root directory&lt;/span&gt; npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-splash-screen react-native link react-native-splash-screen &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;その後、下記のコマンドでギット(git)を使って削除した&lt;code class=&quot;highlighter-rouge&quot;&gt;Pod&lt;/code&gt;を戻して再インストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# cd ios&lt;/span&gt; git checkout &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; Podfile pod install &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を使うためには大きくネイティブ(Native)部分とJS部分へソースを追加する必要があります。ネイティブ(Native)部分はアンドロイド、iOSでSplashスクリーンを実行するためで、JS部分はネイティブ(Native)で実行したSplashスクリーンを終了するためです。&lt;/p&gt; &lt;h3 id=&quot;アンドロイド&quot;&gt;アンドロイド&lt;/h3&gt; &lt;p&gt;アンドロイドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を使うため&lt;code class=&quot;highlighter-rouge&quot;&gt;MainActivity.java&lt;/code&gt;ファイルを開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// here&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.facebook.react.ReactActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.devio.rn.splashscreen.SplashScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// here&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ReactActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SplashScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;また、アンドロイドで使うSplashスクリーンを生成する必要があります。&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/main/res/layout/launch_screen.xml&lt;/code&gt;ファイルを生成して下記のソースコードを追加します。&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vertical&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:background=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/launch_screen&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上部で紹介した&lt;code class=&quot;highlighter-rouge&quot;&gt;generator-rn-toolbox&lt;/code&gt;(&lt;a href=&quot;https://dev-yakuza.github.io/react-native/splash-image/&quot; target=&quot;_blank&quot;&gt;Splashイメージ&lt;/a&gt;)を使っでSplashイメージを生成した場合は&lt;code class=&quot;highlighter-rouge&quot;&gt;drawable-*&lt;/code&gt;フォルダーに&lt;code class=&quot;highlighter-rouge&quot;&gt;launch_screen.png&lt;/code&gt;ファイルが生成されます。&lt;/p&gt; &lt;p&gt;したがって上のソースコードをコピペして使っても構いませんが、Splashイメージファイル名が違う場合&lt;code class=&quot;highlighter-rouge&quot;&gt;android:background=&quot;@drawable/launch_screen&quot;&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;launch_screen&lt;/code&gt;部分を生成したイメージファイル名で変更して使ってください。&lt;/p&gt; &lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt; &lt;p&gt;iOSで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を使えため&lt;code class=&quot;highlighter-rouge&quot;&gt;AppDelegate.m&lt;/code&gt;ファイルを開いて下記のように修正してください。&lt;/p&gt; &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;#import &quot;RNSplashScreen.h&quot; // here&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AppDelegate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UIApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;NSDictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;launchOptions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;RNSplashScreen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// here&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;js&quot;&gt;JS&lt;/h3&gt; &lt;p&gt;上で設定したSplashスクリーンを終了させるため下記のようにソースを追加します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SplashScreen&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-splash-screen'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WelcomePage&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SplashScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上のソースを見たら分かりますが&lt;code class=&quot;highlighter-rouge&quot;&gt;SplashScreen.hide();&lt;/code&gt;を使って好きな時Splashスクリーンを終了させることができます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;RN(React Native)でプロジェクトを進める時Splashスクリーンがいつも早くなくなって困りました。&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;ライブラリを使った後、Splashスクリーンを自由にコントロールすることが出来てもっと良いUXを作ることができました。&lt;/p&gt; &lt;p&gt;私の場合、ネットワークを使ってないアプリは下記のように強制的に時間を入れてSplashスクリーンをもうちょっと維持しています。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SplashScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ネットワークを使う場合はネットワークから必要な情報を貰ってSplashスクリーンを終了させています。&lt;/p&gt; &lt;p&gt;皆さんも&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を使ってユーザにもっと良い経験を提供してみてください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-splash-screen 公式サイト: &lt;a href=&quot;https://github.com/crazycodeboy/react-native-splash-screen&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/crazycodeboy/react-native-splash-screen&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)は基本的にSplashスクリーンを提供しています。以前のブログでも紹介しましたが、generator-rn-toolboxツールを使ったら簡単に色んなサイズのSplashイメージを作れます。下のリンクはgenerator-rn-toolboxツールを使ってSplashイメージを作る方法に関するブログです。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-splash-screen.jpg"/></entry><entry xml:lang="ja"><title type="html">グラデーション(Gradient)</title><link href="https://dev-yakuza.github.io/react-native/react-native-linear-gradient/" rel="alternate" type="text/html" title="グラデーション(Gradient)"/><published>2019-02-02T00:00:00+09:00</published><updated>2019-02-03T12:20:22+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-linear-gradient-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-linear-gradient/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)にバックグラウンドでグラデーション(Gradient)を入れることは難しいです。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;を使ってRN(React Native)プロジェクトにグラデーション(Gradient)背景を入れる方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-linear-gradient公式サイト: &lt;a href=&quot;https://github.com/react-native-community/react-native-linear-gradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/react-native-community/react-native-linear-gradient&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)でグラデーション(Gradient)を使うため下記のコマンドを実行して&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-linear-gradient &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ライブラリ連結&quot;&gt;ライブラリ連結&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;を使うため下のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;ライブラリとRN(React Native)プロジェクトを連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-linear-gradient &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;を使ってグラデーション(Gradient)を実装する方法は下記のようです。 (ソースコードはreact-native-linear-gradient公式サイトからコピペ〜しました。)&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-linear-gradient'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Within your render function&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#4c669f'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#3b5998'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#192f6a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linearGradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buttonText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Sign&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Facebook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/LinearGradient&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Later on in your styles..&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyleSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;linearGradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;paddingLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;paddingRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;borderRadius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;buttonText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fontSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fontFamily&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Gill Sans'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;textAlign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'center'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#ffffff'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'transparent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;私たちは背景でグラデーション(Gradient)を使うため下のソースコードを使っています。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-linear-gradient'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'styled-components/native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Background&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` position: absolute; top: 0; left: 0; right: 0; bottom: 0; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Background&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;また、ページの切り替える時背景のグラデーション(Gradient)をスムーズ変えるためアニメーションを適用してます。アニメーションは下記のサイトを参考して作りました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;グラデーションアニメーション例題: &lt;a href=&quot;https://github.com/dslounge/rn-animated-gradient-example/tree/master/src/ColorExample/AnimatedGradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;AnimatedGradient&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発したアプリにグラデーション(Gradient)背景を入れってもっと美しいアプリを作ってみてください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-linear-gradient公式サイト: &lt;a href=&quot;https://github.com/react-native-community/react-native-linear-gradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/react-native-community/react-native-linear-gradient&lt;/a&gt;&lt;/li&gt; &lt;li&gt;グラデーションアニメーション例題: &lt;a href=&quot;https://github.com/dslounge/rn-animated-gradient-example/tree/master/src/ColorExample/AnimatedGradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;AnimatedGradient&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)にバックグラウンドでグラデーション(Gradient)を入れることは難しいです。このブログではreact-native-linear-gradientを使ってRN(React Native)プロジェクトにグラデーション(Gradient)背景を入れる方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-linear-gradient.png"/></entry><entry xml:lang="ja"><title type="html">スワイプ検知</title><link href="https://dev-yakuza.github.io/react-native/react-native-swipe-gestures/" rel="alternate" type="text/html" title="スワイプ検知"/><published>2019-02-01T00:00:00+09:00</published><updated>2019-02-01T12:20:52+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-swipe-gestures-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-swipe-gestures/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)プロジェクトを進めてる時ユーザのスワイプ(Swipe)の方向について別のアクションをする機能を追加することになりました。そして検索したら&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;と呼ばれるライブラリを発見して適用してみました。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;のインストールと使い方について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-swipe-gestures公式サイト: &lt;a href=&quot;https://github.com/glepur/react-native-swipe-gestures&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/glepur/react-native-swipe-gestures&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-swipe-gestures &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;RN(React Native)でユーザのスワイプ(Swipe)を検知するため下記のようにソースを修正します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GestureRecognizer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-swipe-gestures'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GestureRecognizer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onSwipeLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSwipeLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onSwipeRight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSwipeRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;velocityThreshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;directionalOffsetThreshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/GestureRecognizer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSwipeLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gestureState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSwipeRight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gestureState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでRN(React Native)でユーザのスワイプ(Swipe)を検知する方法についてみてみました。簡単な機能もどんどんコーディングをしなくてコピペーしてる自分をみつけました。。。&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;ソースはそんな長くないのでソースを見って自ら作っても面白いと思います。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-swipe-gestures公式サイト: &lt;a href=&quot;https://github.com/glepur/react-native-swipe-gestures&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/glepur/react-native-swipe-gestures&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)プロジェクトを進めてる時ユーザのスワイプ(Swipe)の方向について別のアクションをする機能を追加することになりました。そして検索したらreact-native-swipe-gesturesと呼ばれるライブラリを発見して適用してみました。このブログではreact-native-swipe-gesturesのインストールと使い方について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-swipe-gestures.jpg"/></entry><entry xml:lang="ja"><title type="html">アフターエフェクト(AEF)</title><link href="https://dev-yakuza.github.io/react-native/react-native-lottie/" rel="alternate" type="text/html" title="アフターエフェクト(AEF)"/><published>2019-01-31T00:00:00+09:00</published><updated>2019-02-06T15:55:43+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-lottie-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-lottie/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;最近アプリに躍動感を入れるためマイクロインタラクション(Microinteractions)をたくさん使っています。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;アドビのアフターエフェクト(Adobe After Effects)&lt;/code&gt;で作ったアニメーションをAirbnbが作った&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリを使ってRN(React Native)に適用する方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;lottie公式サイト: &lt;a href=&quot;https://airbnb.design/lottie/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://airbnb.design/lottie/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリを使うため下のコマンドを実行して&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; lottie-react-native &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ライブラリ連結&quot;&gt;ライブラリ連結&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリを使うため&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;ライブラリをインストールを完了したら下記の方法でOSに合わせてライブラリを接続します。&lt;/p&gt; &lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリをiOSで使うため下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;ライブラリをRN(React Native)プロジェクトと連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link lottie-ios react-native link lottie-react-native &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project_name].xcodeproj&lt;/code&gt;か&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project_name].xcworkspace&lt;/code&gt;ファイルを開いてxcodeを実行します。その後、下のように追加設定をしてください。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/ios-settings.png&quot; alt=&quot;lottie ios追加設定&quot; /&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;下のメニューでプロジェクト名を選択&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TARGETS&lt;/code&gt;でプロジェクト名を選択&lt;/li&gt; &lt;li&gt;上部にあるメニューで&lt;code class=&quot;highlighter-rouge&quot;&gt;General&lt;/code&gt;を選択&lt;/li&gt; &lt;li&gt;スクロールして下に行くと&lt;code class=&quot;highlighter-rouge&quot;&gt;Embedded Binaries&lt;/code&gt;項目が見える。&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;ボタンを押して&lt;code class=&quot;highlighter-rouge&quot;&gt;Lottie.framework&lt;/code&gt;を検索、&lt;code class=&quot;highlighter-rouge&quot;&gt;ios&lt;/code&gt;用を選択して追加します。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/add-lottie-framework.png&quot; alt=&quot;lottie ios framework追加設定&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;アンドロイド&quot;&gt;アンドロイド&lt;/h3&gt; &lt;p&gt;上のように&lt;code class=&quot;highlighter-rouge&quot;&gt;iOS&lt;/code&gt;を連結したら&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリをアンドロイドで使うため他にすることはありません。下記のコマンドが実行された時、アンドロイドは&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;と連結されました。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link lottie-react-native &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;RN(React Native)でlottieを使うためにはアドビのアフターエフェクト(Adobe After Effects)で作ったアニメーションファイルが必要になりますアドビのアフターエフェクト(Adobe After Effects)でlottieに必要なアニメーションファイルを作る方法についてはこのブログでは説明しません。下記のリンクを参考してアドビのアフターエフェクト(Adobe After Effects)からlottieのアニメーションファイルを生成してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/lottie-web&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/airbnb/lottie-web&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;または下記のサイトで必要なマイクロインタラクション(Microinteractions)ファイルを検索してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://lottiefiles.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://lottiefiles.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;アドビのアフターエフェクト(Adobe After Effects)や上のサイトからダウンロードしたファイルは&lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt;形式になっております。&lt;/p&gt; &lt;p&gt;RN(React Native)でlottieを利用してマイクロインタラクション(Microinteractions)を適用するため下記のようにコードを作成します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LottieView&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lottie-react-native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BasicExample&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LottieView&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./animation.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;autoPlay&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;エラー対応&quot;&gt;エラー対応&lt;/h2&gt; &lt;p&gt;RN(React Native)プロジェクトで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-lottie&lt;/code&gt;を実装してよく使いましたが、別のライブラリを入れった後ビルドする時、下記のようなエラーが発生しました。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Build system information error: Cycle &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;dependencies between targets &lt;span class=&quot;s1&quot;&gt;'LottieLibraryIOS'&lt;/span&gt; and &lt;span class=&quot;s1&quot;&gt;'LottieReactNative'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; building could produce unreliable results. Cycle path: LottieLibraryIOS → LottieReactNative → LottieLibraryIOS Cycle details: ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;RN(React Native)プロジェクトの&lt;code class=&quot;highlighter-rouge&quot;&gt;Pods&lt;/code&gt;フォルダや&lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;を削除してまたインストールしても問題が続けて発生しました。&lt;/p&gt; &lt;p&gt;下にある説明で私のRN(React Native)のプロジェクトは問題なくビルドされました。他の方も私と同じ問題が発生したら下記の方法を試してみてください。&lt;/p&gt; &lt;p&gt;RN(React Native)プロジェクトの&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project_name].xcworkspace&lt;/code&gt;ファイルを実行してxcodeを実行します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/lottie_fix_error.png&quot; alt=&quot;lottie ビルドエラー対応&quot; /&gt;&lt;/p&gt; &lt;p&gt;xcodeが実行されたら上のように&lt;code class=&quot;highlighter-rouge&quot;&gt;File &amp;gt; Workspace Settings...&lt;/code&gt;を選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/change_build_system.png&quot; alt=&quot;lottie ビルドエラー対応: ビルドシステム変更&quot; /&gt;&lt;/p&gt; &lt;p&gt;上のようにビルドシステム(Build System)を&lt;code class=&quot;highlighter-rouge&quot;&gt;New Build System (Default)&lt;/code&gt;から &lt;code class=&quot;highlighter-rouge&quot;&gt;Legacy Build System&lt;/code&gt;に変更します。&lt;/p&gt; &lt;p&gt;私の場合はこのようにビルドシステム(Build System)を変更した後、RN(React Native)をビルドしたら無事にビルドされることを確認しました。他の方もこの方法で解決されたらいいと思います。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでRN(React Native)でlottieを使ってマイクロインタラクション(Microinteractions)を実装しました。簡単ですね？lottieでアニメーションを適用するよりアニメーションを作ることがもっと大変と思います。私はアフターエフェクト(After Effects)ができないので&lt;a href=&quot;https://lottiefiles.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://lottiefiles.com/&lt;/a&gt;サイトを使ってます。lottieを使って皆さんも皆さんのアプリに面白いマイクロインタラクション(Microinteractions)を入れってみてください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;lottie公式サイト: &lt;a href=&quot;https://airbnb.design/lottie/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://airbnb.design/lottie/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 最近アプリに躍動感を入れるためマイクロインタラクション(Microinteractions)をたくさん使っています。このブログではアドビのアフターエフェクト(Adobe After Effects)で作ったアニメーションをAirbnbが作ったlottieライブラリを使ってRN(React Native)に適用する方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-lottie.jpg"/></entry><entry xml:lang="ja"><title type="html">ngrok</title><link href="https://dev-yakuza.github.io/environment/ngrok/" rel="alternate" type="text/html" title="ngrok"/><published>2019-01-28T00:00:00+09:00</published><updated>2019-02-01T17:41:03+09:00</updated><id>https://dev-yakuza.github.io/environment/ngrok-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/environment/ngrok/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;仮想環境(Guest System)で開発をする時ローカルマシン(Host System)からの接続以外に外部環境/外部IPから接続する場合があります。この時&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;を使ったら簡単に環境を設定することができます。&lt;/p&gt; &lt;p&gt;下記のリンクは&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;をテストするためアンシブル(Ansible)で作ったララベル(Laravel)の仮想環境(Guest System)です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;ここで紹介する&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;の使い方は開発とテストのためです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ngrok 公式サイト: &lt;a href=&quot;https://ngrok.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://ngrok.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;アンシブル設定&quot;&gt;アンシブル設定&lt;/h2&gt; &lt;p&gt;下記のリンクで構成した仮想環境(Guest System)は&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記のようです。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- docker | | |-- tasks | | | |-- main.yml | |-- laradock | | |-- tasks | | | |-- main.yml | |-- php | | |-- tasks | | | |-- main.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ここで&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;に必要な&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;ファイルを　ansible/ngrok/tasks/main.ymlに追加します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- docker | | |-- tasks | | | |-- main.yml | |-- laradock | | |-- tasks | | | |-- main.yml | |-- php | | |-- tasks | | | |-- main.yml | |-- ngrok | | |-- tasks | | | |-- main.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;追加した&lt;code class=&quot;highlighter-rouge&quot;&gt;ansible/ngrok/tasks/main.yml&lt;/code&gt;ファイルを開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Unarchive ngrok&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unarchive&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ngrok.zip&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ngrok&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;実際、この&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;はファイルをの圧縮解除だけします。ここに必要なファイルは下記のリンクを使ってダウンロードします。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ngrok ダウうんロードサイト: &lt;a href=&quot;https://ngrok.com/download&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://ngrok.com/download&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;または、私たちのリポジトリ(Repository)からダウンロードします。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-devtool github: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-devtool/blob/master/ansible/files/ngrok.zip&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;laravel-devtool&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;ダウンロードしたファイルを&lt;code class=&quot;highlighter-rouge&quot;&gt;ansible/files&lt;/code&gt;にコピーします。&lt;/p&gt; &lt;p&gt;上で設定した&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;の &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;を使うため&lt;code class=&quot;highlighter-rouge&quot;&gt;ansible/playbook.yml&lt;/code&gt;ファイルを開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--- - hosts: localhost connection: local roles: - init - docker - laradock - php - ngrok &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;仮想環境実行&quot;&gt;仮想環境実行&lt;/h2&gt; &lt;p&gt;下記のコマンドで仮想環境(Guest System)を実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant up &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;仮想環境(Guest System)を初めて起動した方は結構時間がかかります。また、上で追加した&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;設定も自動で進めます。&lt;/p&gt; &lt;p&gt;既存、私たちのアンシブル(Ansible)を使って仮想環境(Guest System)を構成したことがある方は下記のコマンドを使って&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;設定を実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; vagrant ssh &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ansible-playbook /vagrant/ansible/playbook.yml &lt;span class=&quot;nt&quot;&gt;--tags&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ngrok'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ngrok起動&quot;&gt;ngrok起動&lt;/h2&gt; &lt;p&gt;上で仮想環境(Guest Syste)を構成した方は下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;を起動します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /vagrant/ ./ngrok http &lt;span class=&quot;nt&quot;&gt;-region&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ap 80 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そしたら下記のような画面が見えます。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Session Status online Session Expires 7 hours, 59 minutes Version 2.2.8 Region Asia Pacific (ap) Web Interface http://127.0.0.1:4040 Forwarding http://cf354047.ap.ngrok.io -&amp;gt; localhost:80 Forwarding https://cf354047.ap.ngrok.io -&amp;gt; localhost:80 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ここに見える&lt;code class=&quot;highlighter-rouge&quot;&gt;Forwarding&lt;/code&gt;のURLを使ったら外部から仮想環境(Guest System)に接続が出来ます。これはあくまでテストと開発用ですのでテストする時や開発する時だけ使ってください。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;アプリのためapiサーバーを開発する時、上のように&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;を使ったらローカルマシン(Host System)の仮想環境(Guest System)で開発中であるapiサーバーを簡単に使えます。&lt;/p&gt; &lt;p&gt;上記で作ったララベル(Laravel)仮想環境(Guest System)のためのアンシブル(Ansible)は下のリンクを押して確認することが出来ます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dev-yakuza/laravel-devtool&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-devtool&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 仮想環境(Guest System)で開発をする時ローカルマシン(Host System)からの接続以外に外部環境/外部IPから接続する場合があります。この時ngrokを使ったら簡単に環境を設定することができます。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/environment/ngrok.jpg"/></entry><entry xml:lang="ja"><title type="html">ファイルシステム使用</title><link href="https://dev-yakuza.github.io/react-native/react-native-fs/" rel="alternate" type="text/html" title="ファイルシステム使用"/><published>2019-01-27T00:00:00+09:00</published><updated>2019-01-30T09:50:35+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-fs-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-fs/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発する時、しばしばファイルシステム(filesystem)を使ってファイルを読んだり書いたりする場合が発生します。&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;はRN(React Native)でファイルシステム(filesystem)をもっと簡単に使えるように助けてくれるライブラリです。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使う方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-fs公式サイト: &lt;a href=&quot;https://github.com/itinance/react-native-fs&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/itinance/react-native-fs&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)でファイルシステム(filesystem)を使うために下記のコマンドを使って&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;をインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-fs &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;インストールが完了されたら、下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;とRN(React Native)プロジェクトを連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-fs &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;ファイルシステム(filesystem)を使ってファイルを読んだり書いたりする色んな方法について&lt;a href=&quot;https://github.com/chirag04/react-native-mail&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;公式サイト&lt;/a&gt;に詳しく載せております。ここには簡単にファイルを読んだり書いたりする部分について説明します。&lt;/p&gt; &lt;h3 id=&quot;ディレクトリ&quot;&gt;ディレクトリ&lt;/h3&gt; &lt;p&gt;下は&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;が定義してるファイルシステムのディレクトリ/パス(filesystem directory/path)です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;MainBundlePath: メインバンドルフォルダ(Main Bundle Directory)の絶対位置です(アンドロイドでは使えません。)&lt;/li&gt; &lt;li&gt;CachesDirectoryPath: キャッシュフォルダ(Cache Directory)の絶対位置です。&lt;/li&gt; &lt;li&gt;ExternalCachesDirectoryPath: 外部キャッシュフォルダ(External Cache Directory)の絶対位置です。(iOSでは使えません。)&lt;/li&gt; &lt;li&gt;DocumentDirectoryPath: ドキュメントフォルダ(Document Directory)の絶対位置です。&lt;/li&gt; &lt;li&gt;TemporaryDirectoryPath: 臨時フォルダ(Temporary Directory)の絶対位置です。(アンドロイドではキャッシュフォルダと同じです。)&lt;/li&gt; &lt;li&gt;LibraryDirectoryPath: iOSのNSLibraryDirectoryの絶対位置です(アンドロイドでは使えません。)&lt;/li&gt; &lt;li&gt;ExternalDirectoryPath: 外部ファイル共有フォルダ(External files, shared directory)の絶対位置です。(iOSでは使えません。)&lt;/li&gt; &lt;li&gt;ExternalStorageDirectoryPath: 外部ストレじ共有フォルダ(External storage, shared directory)の絶対位置です。(iOSでは使えません。)&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;フォルダ読み&quot;&gt;フォルダ読み&lt;/h3&gt; &lt;p&gt;下はRN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使ってフォルダを読む方法に関するコードです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// typescript style&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//readDir(dirpath: string)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocumentDirectoryPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ファイル読み&quot;&gt;ファイル読み&lt;/h3&gt; &lt;p&gt;下はRN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使ってファイルを読む方法に関するコードです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// typescript style&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// readFile(filepath: string, encoding?: string)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ファイル書き&quot;&gt;ファイル書き&lt;/h3&gt; &lt;p&gt;下はRN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使ってファイルを書く方法に関するコードです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// typescript style&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// writeFile(filepath: string, contents: string, encoding?: string)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;savePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ファイル削除&quot;&gt;ファイル削除&lt;/h3&gt; &lt;p&gt;下はRN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使ってファイルを削除する方法に関するコードです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// typescript style&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// unlink(filepath: string)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unlink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocumentDirectoryPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/temp/`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;他の機能&quot;&gt;他の機能&lt;/h2&gt; &lt;p&gt;react-native-fsで使える機能を共通/iOS/アンドロイド別で整理してみました。 詳しく内容は公式サイトを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-fs公式サイト: &lt;a href=&quot;https://github.com/itinance/react-native-fs&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/itinance/react-native-fs&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;共通&quot;&gt;共通&lt;/h3&gt; &lt;p&gt;下記のリストは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;でOSと関係なく使える共通な機能です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;readDir(dirpath: string): パラメータでもらって絶対位置(Absolute path)のフォルダを読む&lt;/li&gt; &lt;li&gt;readdir(dirpath: string): Nodejsスタイルの&lt;code class=&quot;highlighter-rouge&quot;&gt;readDir&lt;/code&gt;&lt;/li&gt; &lt;li&gt;stat(filepath: string): パラメータのファイル位置のファイルのステータスを取得&lt;/li&gt; &lt;li&gt;readFile(filepath: string, encoding?: string): パラメータのファイル位置のファイルを読む。encodingはutf8(default), ascii, base64を提供するし、base64はバイナリファイルを読む時使う。&lt;/li&gt; &lt;li&gt;read(filepath: string, length = 0, position = 0, encodingOrOptions?: any): パラメータのファイル位置のファイルに特定位置(position)へ長さが(length)ほどファイルの内容を読む。encodingはreadFileと同じです。&lt;/li&gt; &lt;li&gt;writeFile(filepath: string, contents: string, encoding?: string): 指定したファイル位置にファイルを記録する。&lt;/li&gt; &lt;li&gt;appendFile(filepath: string, contents: string, encoding?: string): 指定したファイルにファイルの内容を追加する。&lt;/li&gt; &lt;li&gt;write(filepath: string, contents: string, position?: number, encoding?: string): ファイルの特定位置(position)へファイル内容を追加する。&lt;/li&gt; &lt;li&gt;moveFile(filepath: string, destPath: string): ファイルを移動する。&lt;/li&gt; &lt;li&gt;copyFile(filepath: string, destPath: string): ファイルをコピする。&lt;/li&gt; &lt;li&gt;unlink(filepath: string): ファイルを削除する。&lt;/li&gt; &lt;li&gt;exists(filepath: string): ファイルが存在するかどうかファイルが存在するかどうかを確認する。ファイルが存在しない場合&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;をリターンする。&lt;/li&gt; &lt;li&gt;hash(filepath: string, algorithm: string): パラメータのファイル位置のファイルの当該アルゴリズム(algorithem)のchecksumをリターンする。アルゴリズム(algorithm)はmd5, sha1, sha224, sha256, sha384, sha512が使える。&lt;/li&gt; &lt;li&gt;touch(filepath: string, mtime?: Date, ctime?: Date): ファイルの修正日(mtime)と生成日(ctime)を更新する。iOSでは生成日(ctime)のみで修正が可能ですが、アンドロイドは修正日(mtime)を使って修正日と生成日をいつも同時に更新する。&lt;/li&gt; &lt;li&gt;mkdir(filepath: string, options?: MkdirOptions): フォルダを生成する。&lt;/li&gt; &lt;li&gt;downloadFile(options: DownloadFileOptions): パラメータのオプション(options)中のファイルURLを使ってファイルをダウンロードする。&lt;/li&gt; &lt;li&gt;stopDownload(jobId: number): パラメータのダウンロードidを使ってダウンロードを中止する。&lt;/li&gt; &lt;li&gt;getFSInfo(): ファイルシステムの情報(総容量、使える容量)をリターンする。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;ios専用&quot;&gt;iOS専用&lt;/h3&gt; &lt;p&gt;下記のリストは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;でiOSのみで使える機能です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;copyAssetsFileIOS(imageUri: string, destPath: string, width: number, height: number, scale : number = 1.0, compression : number = 1.0, resizeMode : string = ‘contain’ ): (iOS) iOSのカメラロール(Camera-roll)に存在するファイルをコピします。&lt;/li&gt; &lt;li&gt;resumeDownload(jobId: number): (iOS) パラメータのダウンロードidを使ってダウンロードを再開します。&lt;/li&gt; &lt;li&gt;isResumable(jobId: number): (iOS) パラメータのダウンロードidが再開できるかどうか確認します。&lt;/li&gt; &lt;li&gt;completeHandlerIOS(jobId: number): (iOS) バックグラウンドでダウンロードする時ダウンロードが終わったことを知らせるように設定することが可能です。&lt;/li&gt; &lt;li&gt;uploadFiles(options: UploadFileOptions): (iOS) ファイルをアップロードします。&lt;/li&gt; &lt;li&gt;stopUpload(jobId: number): (iOS) ファイルアップロードを中止します。&lt;/li&gt; &lt;li&gt;pathForGroup(groupIdentifier: string): (iOS) iOSで &lt;code class=&quot;highlighter-rouge&quot;&gt;com.apple.security.application-groups&lt;/code&gt;に設定した全てのものをリターンします。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;アンドロイド専用&quot;&gt;アンドロイド専用&lt;/h3&gt; &lt;p&gt;下記のリストは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;でアンドロイド(Android)のみで使える機能です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;existsAssets(filepath: string): (アンドロイド) アンドロイドのassetsフォルダにファイルが存在するかどうかを確認する。ファイルが存在しない場合&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;をリターンします。&lt;/li&gt; &lt;li&gt;readFileAssets(filepath:string, encoding?: string): (アンドロイド) アンドロイドのassetsフォルダ下にあるファイルをファイル位置を使って読む。&lt;/li&gt; &lt;li&gt;copyFileAssets(filepath: string, destPath: string): (アンドロイド) ファイルをアンドロイドのassetsフォルダ下にコピする。&lt;/li&gt; &lt;li&gt;readDirAssets(dirpath: string): (アンドロイド) パラメータで貰ったアンドロイドのassetsフォルダ下の相対位置(Relative path)の内容を読む。&lt;/li&gt; &lt;li&gt;scanFile(path: string): (アンドロイド) &lt;code class=&quot;highlighter-rouge&quot;&gt;Media Scanner&lt;/code&gt;を使ってファイルをスキャン(scan)する&lt;/li&gt; &lt;li&gt;getAllExternalFilesDirs(): (アンドロイド) 全ての共有/外部ストレージの情報をリターンする。&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;RN(React Native)でファイルシステムを使う場合&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使えることをお勧めします。OSに依存する機能もありますが、大体共通機能でも十分活用できます。リターンバリュー(Return Value)とパラメータ(Parameter)に関する詳しく説明はいませんでした。リターンバリュー(Return Value)とパラメータ(Parmeter)に関する内容は公式サイトを参考してください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-fs 公式サイト: &lt;a href=&quot;https://github.com/itinance/react-native-fs&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/itinance/react-native-fs&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)で開発する時、しばしばファイルシステム(filesystem)を使ってファイルを読んだり書いたりする場合が発生します。react-native-fsはRN(React Native)でファイルシステム(filesystem)をもっと簡単に使えるように助けてくれるライブラリです。このブログではreact-native-fsを使う方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-fs.jpg"/></entry><entry xml:lang="ja"><title type="html">メール送信機能</title><link href="https://dev-yakuza.github.io/react-native/react-native-mail/" rel="alternate" type="text/html" title="メール送信機能"/><published>2019-01-26T00:00:00+09:00</published><updated>2019-01-26T22:30:11+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-mail-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-mail/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)でメール発信するため端末にインストールされてある基本メールアプリを起動するライブラリを紹介します。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-mail&lt;/code&gt;ライブラリを使ってメールアプリを実行してメールを発信する方法について紹介します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-mail 公式サイト: &lt;a href=&quot;https://github.com/chirag04/react-native-mail&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/chirag04/react-native-mail&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)でメールアプリを起動してメールを発信するため下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-mail&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-mail &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;インストールが終わったら下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-mail&lt;/code&gt;をRN(React Native)プロジェクトと連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-mail &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;下記に紹介する方法は&lt;a href=&quot;https://github.com/chirag04/react-native-mail&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;公式サイト&lt;/a&gt;にある内容をそのままコピした内容になります。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/** * Sample React Native App * https://github.com/facebook/react-native * @flow */&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mailer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-mail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleEmail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mailer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'need help'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;recipients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'support@example.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ccRecipients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'supportCC@example.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bccRecipients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'supportBCC@example.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;b&amp;gt;A Bold Body&amp;lt;/b&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The absolute path of the file from which to read data.&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Mime Type: jpg, png, doc, ppt, html, pdf, csv&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Optional: Custom filename for attachment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Ok'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'OK: Email Error Response'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Cancel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CANCEL: Email Error Response'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cancelable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Email Me&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#841584&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accessabilityLabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Purple Email Me Button&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;subject: メールのタイトル&lt;/li&gt; &lt;li&gt;recipients: メールを受信するメールリスト&lt;/li&gt; &lt;li&gt;ccRecipients: ccで受信するメールリスト&lt;/li&gt; &lt;li&gt;bccRecipients: bccで受信するメールリスト&lt;/li&gt; &lt;li&gt;body: メールの本文&lt;/li&gt; &lt;li&gt;isHTML: メールの本文がHTML形式かどうか&lt;/li&gt; &lt;li&gt;attachment: 添付ファイルがある場合使う &lt;ul&gt; &lt;li&gt;path: ファイルの位置&lt;/li&gt; &lt;li&gt;type: ファイルのmime type&lt;/li&gt; &lt;li&gt;name(Optional): カスタムファイル名&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下は添付ファイルの例題です。ファイルの位置は&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使ってファイルの位置を取得しました。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocumentDirectoryPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xls'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;添付が可能なファイルのmime typeは下記になります。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jpg png doc docx ppt pptx html csv pdf vcard json zip text mp3 wav aiff flac ogg xls xlsx &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Mailer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;メールアプリが起動された後、またアプリに戻る時実行されるコールバック関数(Callback function)を上で説明したオプションと一緒に&lt;code class=&quot;highlighter-rouge&quot;&gt;Mailer.mail&lt;/code&gt;関数に伝達します。&lt;/p&gt; &lt;p&gt;メールアプリが実行中発生したエラーやメールアプリで発生したイベントがパラメータ(Parameter)で伝達されて実行されます。&lt;/p&gt; &lt;p&gt;パラメータ(Parameter)で伝達される&lt;code class=&quot;highlighter-rouge&quot;&gt;event&lt;/code&gt;は下記のようです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;sent&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;saved&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cancelled&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;failed&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;エラーが発生したら&lt;code class=&quot;highlighter-rouge&quot;&gt;error&lt;/code&gt;パラメータ(Parameter)にエラー内容が伝達されます。下記のコードは私たちが実際使ってるコードの一部です。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// エラーの処理&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// メール送信成功の処理&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;上で実装した&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-mail&lt;/code&gt;機能を実行したら下のような画面が見えます。(写真の出所: &lt;a href=&quot;https://github.com/chirag04/react-native-mail&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;公式サイト&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-mail/screenshot.png&quot; alt=&quot;react-native-mailスクリンショット&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-mail公式サイト: &lt;a href=&quot;https://github.com/chirag04/react-native-mail&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/chirag04/react-native-mail&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)でメール発信するため端末にインストールされてある基本メールアプリを起動するライブラリを紹介します。このブログではreact-native-mailライブラリを使ってメールアプリを実行してメールを発信する方法について紹介します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-mail.jpg"/></entry></feed>