<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dev-yakuza.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/" rel="alternate" type="text/html"/><updated>2019-02-05T14:45:47+09:00</updated><id>https://dev-yakuza.github.io/</id><title type="html">Dreams the art through programming</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ja"><title type="html">グラデーション(Gradient)</title><link href="https://dev-yakuza.github.io/react-native/react-native-linear-gradient/" rel="alternate" type="text/html" title="グラデーション(Gradient)"/><published>2019-02-02T00:00:00+09:00</published><updated>2019-02-03T12:20:22+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-linear-gradient-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-linear-gradient/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)にバックグラウンドでグラデーション(Gradient)を入れることは難しいです。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;を使ってRN(React Native)プロジェクトにグラデーション(Gradient)背景を入れる方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-linear-gradient公式サイト: &lt;a href=&quot;https://github.com/react-native-community/react-native-linear-gradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/react-native-community/react-native-linear-gradient&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)でグラデーション(Gradient)を使うため下記のコマンドを実行して&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-linear-gradient &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ライブラリ連結&quot;&gt;ライブラリ連結&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;を使うため下のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;ライブラリとRN(React Native)プロジェクトを連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-linear-gradient &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;を使ってグラデーション(Gradient)を実装する方法は下記のようです。 (ソースコードはreact-native-linear-gradient公式サイトからコピペ〜しました。)&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-linear-gradient'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Within your render function&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#4c669f'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#3b5998'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#192f6a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linearGradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buttonText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Sign&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Facebook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/LinearGradient&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Later on in your styles..&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyleSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;linearGradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;paddingLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;paddingRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;borderRadius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;buttonText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fontSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fontFamily&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Gill Sans'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;textAlign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'center'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#ffffff'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'transparent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;私たちは背景でグラデーション(Gradient)を使うため下のソースコードを使っています。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-linear-gradient'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'styled-components/native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Background&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` position: absolute; top: 0; left: 0; right: 0; bottom: 0; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Background&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;また、ページの切り替える時背景のグラデーション(Gradient)をスムーズ変えるためアニメーションを適用してます。アニメーションは下記のサイトを参考して作りました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;グラデーションアニメーション例題: &lt;a href=&quot;https://github.com/dslounge/rn-animated-gradient-example/tree/master/src/ColorExample/AnimatedGradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;AnimatedGradient&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発したアプリにグラデーション(Gradient)背景を入れってもっと美しいアプリを作ってみてください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-linear-gradient公式サイト: &lt;a href=&quot;https://github.com/react-native-community/react-native-linear-gradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/react-native-community/react-native-linear-gradient&lt;/a&gt;&lt;/li&gt; &lt;li&gt;グラデーションアニメーション例題: &lt;a href=&quot;https://github.com/dslounge/rn-animated-gradient-example/tree/master/src/ColorExample/AnimatedGradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;AnimatedGradient&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)にバックグラウンドでグラデーション(Gradient)を入れることは難しいです。このブログではreact-native-linear-gradientを使ってRN(React Native)プロジェクトにグラデーション(Gradient)背景を入れる方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-linear-gradient.png"/></entry><entry xml:lang="ja"><title type="html">スワイプ検知</title><link href="https://dev-yakuza.github.io/react-native/react-native-swipe-gestures/" rel="alternate" type="text/html" title="スワイプ検知"/><published>2019-02-01T00:00:00+09:00</published><updated>2019-02-01T12:20:52+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-swipe-gestures-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-swipe-gestures/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)プロジェクトを進めてる時ユーザのスワイプ(Swipe)の方向について別のアクションをする機能を追加することになりました。そして検索したら&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;と呼ばれるライブラリを発見して適用してみました。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;のインストールと使い方について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-swipe-gestures公式サイト: &lt;a href=&quot;https://github.com/glepur/react-native-swipe-gestures&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/glepur/react-native-swipe-gestures&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-swipe-gestures &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;RN(React Native)でユーザのスワイプ(Swipe)を検知するため下記のようにソースを修正します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GestureRecognizer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-swipe-gestures'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GestureRecognizer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onSwipeLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSwipeLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onSwipeRight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSwipeRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;velocityThreshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;directionalOffsetThreshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/GestureRecognizer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSwipeLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gestureState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSwipeRight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gestureState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでRN(React Native)でユーザのスワイプ(Swipe)を検知する方法についてみてみました。簡単な機能もどんどんコーディングをしなくてコピペーしてる自分をみつけました。。。&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;ソースはそんな長くないのでソースを見って自ら作っても面白いと思います。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-swipe-gestures公式サイト: &lt;a href=&quot;https://github.com/glepur/react-native-swipe-gestures&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/glepur/react-native-swipe-gestures&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)プロジェクトを進めてる時ユーザのスワイプ(Swipe)の方向について別のアクションをする機能を追加することになりました。そして検索したらreact-native-swipe-gesturesと呼ばれるライブラリを発見して適用してみました。このブログではreact-native-swipe-gesturesのインストールと使い方について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-swipe-gestures.jpg"/></entry><entry xml:lang="ja"><title type="html">ngrok</title><link href="https://dev-yakuza.github.io/environment/ngrok/" rel="alternate" type="text/html" title="ngrok"/><published>2019-01-28T00:00:00+09:00</published><updated>2019-02-01T17:41:03+09:00</updated><id>https://dev-yakuza.github.io/environment/ngrok-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/environment/ngrok/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;仮想環境(Guest System)で開発をする時ローカルマシン(Host System)からの接続以外に外部環境/外部IPから接続する場合があります。この時&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;を使ったら簡単に環境を設定することができます。&lt;/p&gt; &lt;p&gt;下記のリンクは&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;をテストするためアンシブル(Ansible)で作ったララベル(Laravel)の仮想環境(Guest System)です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;ここで紹介する&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;の使い方は開発とテストのためです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ngrok 公式サイト: &lt;a href=&quot;https://ngrok.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://ngrok.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;アンシブル設定&quot;&gt;アンシブル設定&lt;/h2&gt; &lt;p&gt;下記のリンクで構成した仮想環境(Guest System)は&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記のようです。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- docker | | |-- tasks | | | |-- main.yml | |-- laradock | | |-- tasks | | | |-- main.yml | |-- php | | |-- tasks | | | |-- main.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ここで&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;に必要な&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;ファイルを　ansible/ngrok/tasks/main.ymlに追加します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- docker | | |-- tasks | | | |-- main.yml | |-- laradock | | |-- tasks | | | |-- main.yml | |-- php | | |-- tasks | | | |-- main.yml | |-- ngrok | | |-- tasks | | | |-- main.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;追加した&lt;code class=&quot;highlighter-rouge&quot;&gt;ansible/ngrok/tasks/main.yml&lt;/code&gt;ファイルを開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Unarchive ngrok&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unarchive&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ngrok.zip&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ngrok&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;実際、この&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;はファイルをの圧縮解除だけします。ここに必要なファイルは下記のリンクを使ってダウンロードします。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ngrok ダウうんロードサイト: &lt;a href=&quot;https://ngrok.com/download&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://ngrok.com/download&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;または、私たちのリポジトリ(Repository)からダウンロードします。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-devtool github: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-devtool/blob/master/ansible/files/ngrok.zip&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;laravel-devtool&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;ダウンロードしたファイルを&lt;code class=&quot;highlighter-rouge&quot;&gt;ansible/files&lt;/code&gt;にコピーします。&lt;/p&gt; &lt;p&gt;上で設定した&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;の &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;を使うため&lt;code class=&quot;highlighter-rouge&quot;&gt;ansible/playbook.yml&lt;/code&gt;ファイルを開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--- - hosts: localhost connection: local roles: - init - docker - laradock - php - ngrok &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;仮想環境実行&quot;&gt;仮想環境実行&lt;/h2&gt; &lt;p&gt;下記のコマンドで仮想環境(Guest System)を実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant up &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;仮想環境(Guest System)を初めて起動した方は結構時間がかかります。また、上で追加した&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;設定も自動で進めます。&lt;/p&gt; &lt;p&gt;既存、私たちのアンシブル(Ansible)を使って仮想環境(Guest System)を構成したことがある方は下記のコマンドを使って&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;設定を実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; vagrant ssh &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ansible-playbook /vagrant/ansible/playbook.yml &lt;span class=&quot;nt&quot;&gt;--tags&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ngrok'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ngrok起動&quot;&gt;ngrok起動&lt;/h2&gt; &lt;p&gt;上で仮想環境(Guest Syste)を構成した方は下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;を起動します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /vagrant/ ./ngrok http &lt;span class=&quot;nt&quot;&gt;-region&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ap 80 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そしたら下記のような画面が見えます。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Session Status online Session Expires 7 hours, 59 minutes Version 2.2.8 Region Asia Pacific (ap) Web Interface http://127.0.0.1:4040 Forwarding http://cf354047.ap.ngrok.io -&amp;gt; localhost:80 Forwarding https://cf354047.ap.ngrok.io -&amp;gt; localhost:80 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ここに見える&lt;code class=&quot;highlighter-rouge&quot;&gt;Forwarding&lt;/code&gt;のURLを使ったら外部から仮想環境(Guest System)に接続が出来ます。これはあくまでテストと開発用ですのでテストする時や開発する時だけ使ってください。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;アプリのためapiサーバーを開発する時、上のように&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;を使ったらローカルマシン(Host System)の仮想環境(Guest System)で開発中であるapiサーバーを簡単に使えます。&lt;/p&gt; &lt;p&gt;上記で作ったララベル(Laravel)仮想環境(Guest System)のためのアンシブル(Ansible)は下のリンクを押して確認することが出来ます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dev-yakuza/laravel-devtool&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-devtool&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 仮想環境(Guest System)で開発をする時ローカルマシン(Host System)からの接続以外に外部環境/外部IPから接続する場合があります。この時ngrokを使ったら簡単に環境を設定することができます。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/environment/ngrok.jpg"/></entry><entry xml:lang="ja"><title type="html">アフターエフェクト(AEF)</title><link href="https://dev-yakuza.github.io/react-native/react-native-lottie/" rel="alternate" type="text/html" title="アフターエフェクト(AEF)"/><published>2019-01-27T00:00:00+09:00</published><updated>2019-01-31T21:47:05+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-fs-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-lottie/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;最近アプリに躍動感を入れるためマイクロインタラクション(Microinteractions)をたくさん使っています。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;アドビのアフターエフェクト(Adobe After Effects)&lt;/code&gt;で作ったアニメーションをAirbnbが作った&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリを使ってRN(React Native)に適用する方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;lottie公式サイト: &lt;a href=&quot;https://airbnb.design/lottie/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://airbnb.design/lottie/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリを使うため下のコマンドを実行して&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; lottie-react-native &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ライブラリ連結&quot;&gt;ライブラリ連結&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリを使うため&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;ライブラリをインストールを完了したら下記の方法でOSに合わせてライブラリを接続します。&lt;/p&gt; &lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリをiOSで使うため下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;ライブラリをRN(React Native)プロジェクトと連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link lottie-ios react-native link lottie-react-native &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project_name].xcodeproj&lt;/code&gt;か&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project_name].xcworkspace&lt;/code&gt;ファイルを開いてxcodeを実行します。その後、下のように追加設定をしてください。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/ios-settings.png&quot; alt=&quot;lottie ios追加設定&quot; /&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;下のメニューでプロジェクト名を選択&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TARGETS&lt;/code&gt;でプロジェクト名を選択&lt;/li&gt; &lt;li&gt;上部にあるメニューで&lt;code class=&quot;highlighter-rouge&quot;&gt;General&lt;/code&gt;を選択&lt;/li&gt; &lt;li&gt;スクロールして下に行くと&lt;code class=&quot;highlighter-rouge&quot;&gt;Embedded Binaries&lt;/code&gt;項目が見える。&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;ボタンを押して&lt;code class=&quot;highlighter-rouge&quot;&gt;Lottie.framework&lt;/code&gt;を検索、&lt;code class=&quot;highlighter-rouge&quot;&gt;ios&lt;/code&gt;用を選択して追加します。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/add-lottie-framework.png&quot; alt=&quot;lottie ios framework追加設定&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;アンドロイド&quot;&gt;アンドロイド&lt;/h3&gt; &lt;p&gt;上のように&lt;code class=&quot;highlighter-rouge&quot;&gt;iOS&lt;/code&gt;を連結したら&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリをアンドロイドで使うため他にすることはありません。下記のコマンドが実行された時、アンドロイドは&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;と連結されました。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link lottie-react-native &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;RN(React Native)でlottieを使うためにはアドビのアフターエフェクト(Adobe After Effects)で作ったアニメーションファイルが必要になりますアドビのアフターエフェクト(Adobe After Effects)でlottieに必要なアニメーションファイルを作る方法についてはこのブログでは説明しません。下記のリンクを参考してアドビのアフターエフェクト(Adobe After Effects)からlottieのアニメーションファイルを生成してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/lottie-web&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/airbnb/lottie-web&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;または下記のサイトで必要なマイクロインタラクション(Microinteractions)ファイルを検索してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://lottiefiles.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://lottiefiles.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;アドビのアフターエフェクト(Adobe After Effects)や上のサイトからダウンロードしたファイルは&lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt;形式になっております。&lt;/p&gt; &lt;p&gt;RN(React Native)でlottieを利用してマイクロインタラクション(Microinteractions)を適用するため下記のようにコードを作成します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LottieView&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lottie-react-native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BasicExample&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LottieView&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./animation.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;autoPlay&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでRN(React Native)でlottieを使ってマイクロインタラクション(Microinteractions)を実装しました。簡単ですね？lottieでアニメーションを適用するよりアニメーションを作ることがもっと大変と思います。私はアフターエフェクト(After Effects)ができないので&lt;a href=&quot;https://lottiefiles.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://lottiefiles.com/&lt;/a&gt;サイトを使ってます。lottieを使って皆さんも皆さんのアプリに面白いマイクロインタラクション(Microinteractions)を入れってみてください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;lottie公式サイト: &lt;a href=&quot;https://airbnb.design/lottie/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://airbnb.design/lottie/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 最近アプリに躍動感を入れるためマイクロインタラクション(Microinteractions)をたくさん使っています。このブログではアドビのアフターエフェクト(Adobe After Effects)で作ったアニメーションをAirbnbが作ったlottieライブラリを使ってRN(React Native)に適用する方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-lottie.jpg"/></entry><entry xml:lang="ja"><title type="html">ファイルシステム使用</title><link href="https://dev-yakuza.github.io/react-native/react-native-fs/" rel="alternate" type="text/html" title="ファイルシステム使用"/><published>2019-01-27T00:00:00+09:00</published><updated>2019-01-30T09:50:35+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-fs-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-fs/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発する時、しばしばファイルシステム(filesystem)を使ってファイルを読んだり書いたりする場合が発生します。&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;はRN(React Native)でファイルシステム(filesystem)をもっと簡単に使えるように助けてくれるライブラリです。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使う方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-fs公式サイト: &lt;a href=&quot;https://github.com/itinance/react-native-fs&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/itinance/react-native-fs&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)でファイルシステム(filesystem)を使うために下記のコマンドを使って&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;をインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-fs &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;インストールが完了されたら、下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;とRN(React Native)プロジェクトを連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-fs &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;ファイルシステム(filesystem)を使ってファイルを読んだり書いたりする色んな方法について&lt;a href=&quot;https://github.com/chirag04/react-native-mail&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;公式サイト&lt;/a&gt;に詳しく載せております。ここには簡単にファイルを読んだり書いたりする部分について説明します。&lt;/p&gt; &lt;h3 id=&quot;ディレクトリ&quot;&gt;ディレクトリ&lt;/h3&gt; &lt;p&gt;下は&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;が定義してるファイルシステムのディレクトリ/パス(filesystem directory/path)です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;MainBundlePath: メインバンドルフォルダ(Main Bundle Directory)の絶対位置です(アンドロイドでは使えません。)&lt;/li&gt; &lt;li&gt;CachesDirectoryPath: キャッシュフォルダ(Cache Directory)の絶対位置です。&lt;/li&gt; &lt;li&gt;ExternalCachesDirectoryPath: 外部キャッシュフォルダ(External Cache Directory)の絶対位置です。(iOSでは使えません。)&lt;/li&gt; &lt;li&gt;DocumentDirectoryPath: ドキュメントフォルダ(Document Directory)の絶対位置です。&lt;/li&gt; &lt;li&gt;TemporaryDirectoryPath: 臨時フォルダ(Temporary Directory)の絶対位置です。(アンドロイドではキャッシュフォルダと同じです。)&lt;/li&gt; &lt;li&gt;LibraryDirectoryPath: iOSのNSLibraryDirectoryの絶対位置です(アンドロイドでは使えません。)&lt;/li&gt; &lt;li&gt;ExternalDirectoryPath: 外部ファイル共有フォルダ(External files, shared directory)の絶対位置です。(iOSでは使えません。)&lt;/li&gt; &lt;li&gt;ExternalStorageDirectoryPath: 外部ストレじ共有フォルダ(External storage, shared directory)の絶対位置です。(iOSでは使えません。)&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;フォルダ読み&quot;&gt;フォルダ読み&lt;/h3&gt; &lt;p&gt;下はRN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使ってフォルダを読む方法に関するコードです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// typescript style&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//readDir(dirpath: string)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocumentDirectoryPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ファイル読み&quot;&gt;ファイル読み&lt;/h3&gt; &lt;p&gt;下はRN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使ってファイルを読む方法に関するコードです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// typescript style&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// readFile(filepath: string, encoding?: string)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ファイル書き&quot;&gt;ファイル書き&lt;/h3&gt; &lt;p&gt;下はRN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使ってファイルを書く方法に関するコードです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// typescript style&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// writeFile(filepath: string, contents: string, encoding?: string)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;savePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ファイル削除&quot;&gt;ファイル削除&lt;/h3&gt; &lt;p&gt;下はRN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使ってファイルを削除する方法に関するコードです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// typescript style&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// unlink(filepath: string)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unlink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocumentDirectoryPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/temp/`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;他の機能&quot;&gt;他の機能&lt;/h2&gt; &lt;p&gt;react-native-fsで使える機能を共通/iOS/アンドロイド別で整理してみました。 詳しく内容は公式サイトを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-fs公式サイト: &lt;a href=&quot;https://github.com/itinance/react-native-fs&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/itinance/react-native-fs&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;共通&quot;&gt;共通&lt;/h3&gt; &lt;p&gt;下記のリストは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;でOSと関係なく使える共通な機能です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;readDir(dirpath: string): パラメータでもらって絶対位置(Absolute path)のフォルダを読む&lt;/li&gt; &lt;li&gt;readdir(dirpath: string): Nodejsスタイルの&lt;code class=&quot;highlighter-rouge&quot;&gt;readDir&lt;/code&gt;&lt;/li&gt; &lt;li&gt;stat(filepath: string): パラメータのファイル位置のファイルのステータスを取得&lt;/li&gt; &lt;li&gt;readFile(filepath: string, encoding?: string): パラメータのファイル位置のファイルを読む。encodingはutf8(default), ascii, base64を提供するし、base64はバイナリファイルを読む時使う。&lt;/li&gt; &lt;li&gt;read(filepath: string, length = 0, position = 0, encodingOrOptions?: any): パラメータのファイル位置のファイルに特定位置(position)へ長さが(length)ほどファイルの内容を読む。encodingはreadFileと同じです。&lt;/li&gt; &lt;li&gt;writeFile(filepath: string, contents: string, encoding?: string): 指定したファイル位置にファイルを記録する。&lt;/li&gt; &lt;li&gt;appendFile(filepath: string, contents: string, encoding?: string): 指定したファイルにファイルの内容を追加する。&lt;/li&gt; &lt;li&gt;write(filepath: string, contents: string, position?: number, encoding?: string): ファイルの特定位置(position)へファイル内容を追加する。&lt;/li&gt; &lt;li&gt;moveFile(filepath: string, destPath: string): ファイルを移動する。&lt;/li&gt; &lt;li&gt;copyFile(filepath: string, destPath: string): ファイルをコピする。&lt;/li&gt; &lt;li&gt;unlink(filepath: string): ファイルを削除する。&lt;/li&gt; &lt;li&gt;exists(filepath: string): ファイルが存在するかどうかファイルが存在するかどうかを確認する。ファイルが存在しない場合&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;をリターンする。&lt;/li&gt; &lt;li&gt;hash(filepath: string, algorithm: string): パラメータのファイル位置のファイルの当該アルゴリズム(algorithem)のchecksumをリターンする。アルゴリズム(algorithm)はmd5, sha1, sha224, sha256, sha384, sha512が使える。&lt;/li&gt; &lt;li&gt;touch(filepath: string, mtime?: Date, ctime?: Date): ファイルの修正日(mtime)と生成日(ctime)を更新する。iOSでは生成日(ctime)のみで修正が可能ですが、アンドロイドは修正日(mtime)を使って修正日と生成日をいつも同時に更新する。&lt;/li&gt; &lt;li&gt;mkdir(filepath: string, options?: MkdirOptions): フォルダを生成する。&lt;/li&gt; &lt;li&gt;downloadFile(options: DownloadFileOptions): パラメータのオプション(options)中のファイルURLを使ってファイルをダウンロードする。&lt;/li&gt; &lt;li&gt;stopDownload(jobId: number): パラメータのダウンロードidを使ってダウンロードを中止する。&lt;/li&gt; &lt;li&gt;getFSInfo(): ファイルシステムの情報(総容量、使える容量)をリターンする。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;ios専用&quot;&gt;iOS専用&lt;/h3&gt; &lt;p&gt;下記のリストは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;でiOSのみで使える機能です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;copyAssetsFileIOS(imageUri: string, destPath: string, width: number, height: number, scale : number = 1.0, compression : number = 1.0, resizeMode : string = ‘contain’ ): (iOS) iOSのカメラロール(Camera-roll)に存在するファイルをコピします。&lt;/li&gt; &lt;li&gt;resumeDownload(jobId: number): (iOS) パラメータのダウンロードidを使ってダウンロードを再開します。&lt;/li&gt; &lt;li&gt;isResumable(jobId: number): (iOS) パラメータのダウンロードidが再開できるかどうか確認します。&lt;/li&gt; &lt;li&gt;completeHandlerIOS(jobId: number): (iOS) バックグラウンドでダウンロードする時ダウンロードが終わったことを知らせるように設定することが可能です。&lt;/li&gt; &lt;li&gt;uploadFiles(options: UploadFileOptions): (iOS) ファイルをアップロードします。&lt;/li&gt; &lt;li&gt;stopUpload(jobId: number): (iOS) ファイルアップロードを中止します。&lt;/li&gt; &lt;li&gt;pathForGroup(groupIdentifier: string): (iOS) iOSで &lt;code class=&quot;highlighter-rouge&quot;&gt;com.apple.security.application-groups&lt;/code&gt;に設定した全てのものをリターンします。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;アンドロイド専用&quot;&gt;アンドロイド専用&lt;/h3&gt; &lt;p&gt;下記のリストは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;でアンドロイド(Android)のみで使える機能です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;existsAssets(filepath: string): (アンドロイド) アンドロイドのassetsフォルダにファイルが存在するかどうかを確認する。ファイルが存在しない場合&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;をリターンします。&lt;/li&gt; &lt;li&gt;readFileAssets(filepath:string, encoding?: string): (アンドロイド) アンドロイドのassetsフォルダ下にあるファイルをファイル位置を使って読む。&lt;/li&gt; &lt;li&gt;copyFileAssets(filepath: string, destPath: string): (アンドロイド) ファイルをアンドロイドのassetsフォルダ下にコピする。&lt;/li&gt; &lt;li&gt;readDirAssets(dirpath: string): (アンドロイド) パラメータで貰ったアンドロイドのassetsフォルダ下の相対位置(Relative path)の内容を読む。&lt;/li&gt; &lt;li&gt;scanFile(path: string): (アンドロイド) &lt;code class=&quot;highlighter-rouge&quot;&gt;Media Scanner&lt;/code&gt;を使ってファイルをスキャン(scan)する&lt;/li&gt; &lt;li&gt;getAllExternalFilesDirs(): (アンドロイド) 全ての共有/外部ストレージの情報をリターンする。&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;RN(React Native)でファイルシステムを使う場合&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使えることをお勧めします。OSに依存する機能もありますが、大体共通機能でも十分活用できます。リターンバリュー(Return Value)とパラメータ(Parameter)に関する詳しく説明はいませんでした。リターンバリュー(Return Value)とパラメータ(Parmeter)に関する内容は公式サイトを参考してください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-fs 公式サイト: &lt;a href=&quot;https://github.com/itinance/react-native-fs&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/itinance/react-native-fs&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)で開発する時、しばしばファイルシステム(filesystem)を使ってファイルを読んだり書いたりする場合が発生します。react-native-fsはRN(React Native)でファイルシステム(filesystem)をもっと簡単に使えるように助けてくれるライブラリです。このブログではreact-native-fsを使う方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-fs.jpg"/></entry><entry xml:lang="ja"><title type="html">メール送信機能</title><link href="https://dev-yakuza.github.io/react-native/react-native-mail/" rel="alternate" type="text/html" title="メール送信機能"/><published>2019-01-26T00:00:00+09:00</published><updated>2019-01-26T22:30:11+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-mail-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-mail/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)でメール発信するため端末にインストールされてある基本メールアプリを起動するライブラリを紹介します。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-mail&lt;/code&gt;ライブラリを使ってメールアプリを実行してメールを発信する方法について紹介します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-mail 公式サイト: &lt;a href=&quot;https://github.com/chirag04/react-native-mail&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/chirag04/react-native-mail&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)でメールアプリを起動してメールを発信するため下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-mail&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-mail &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;インストールが終わったら下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-mail&lt;/code&gt;をRN(React Native)プロジェクトと連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-mail &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;下記に紹介する方法は&lt;a href=&quot;https://github.com/chirag04/react-native-mail&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;公式サイト&lt;/a&gt;にある内容をそのままコピした内容になります。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/** * Sample React Native App * https://github.com/facebook/react-native * @flow */&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mailer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-mail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleEmail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mailer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'need help'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;recipients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'support@example.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ccRecipients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'supportCC@example.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bccRecipients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'supportBCC@example.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;b&amp;gt;A Bold Body&amp;lt;/b&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The absolute path of the file from which to read data.&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Mime Type: jpg, png, doc, ppt, html, pdf, csv&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Optional: Custom filename for attachment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Ok'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'OK: Email Error Response'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Cancel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CANCEL: Email Error Response'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cancelable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Email Me&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#841584&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accessabilityLabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Purple Email Me Button&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;subject: メールのタイトル&lt;/li&gt; &lt;li&gt;recipients: メールを受信するメールリスト&lt;/li&gt; &lt;li&gt;ccRecipients: ccで受信するメールリスト&lt;/li&gt; &lt;li&gt;bccRecipients: bccで受信するメールリスト&lt;/li&gt; &lt;li&gt;body: メールの本文&lt;/li&gt; &lt;li&gt;isHTML: メールの本文がHTML形式かどうか&lt;/li&gt; &lt;li&gt;attachment: 添付ファイルがある場合使う &lt;ul&gt; &lt;li&gt;path: ファイルの位置&lt;/li&gt; &lt;li&gt;type: ファイルのmime type&lt;/li&gt; &lt;li&gt;name(Optional): カスタムファイル名&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下は添付ファイルの例題です。ファイルの位置は&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を使ってファイルの位置を取得しました。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocumentDirectoryPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xls'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;添付が可能なファイルのmime typeは下記になります。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jpg png doc docx ppt pptx html csv pdf vcard json zip text mp3 wav aiff flac ogg xls xlsx &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Mailer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;メールアプリが起動された後、またアプリに戻る時実行されるコールバック関数(Callback function)を上で説明したオプションと一緒に&lt;code class=&quot;highlighter-rouge&quot;&gt;Mailer.mail&lt;/code&gt;関数に伝達します。&lt;/p&gt; &lt;p&gt;メールアプリが実行中発生したエラーやメールアプリで発生したイベントがパラメータ(Parameter)で伝達されて実行されます。&lt;/p&gt; &lt;p&gt;パラメータ(Parameter)で伝達される&lt;code class=&quot;highlighter-rouge&quot;&gt;event&lt;/code&gt;は下記のようです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;sent&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;saved&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cancelled&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;failed&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;エラーが発生したら&lt;code class=&quot;highlighter-rouge&quot;&gt;error&lt;/code&gt;パラメータ(Parameter)にエラー内容が伝達されます。下記のコードは私たちが実際使ってるコードの一部です。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// エラーの処理&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// メール送信成功の処理&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;上で実装した&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-mail&lt;/code&gt;機能を実行したら下のような画面が見えます。(写真の出所: &lt;a href=&quot;https://github.com/chirag04/react-native-mail&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;公式サイト&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-mail/screenshot.png&quot; alt=&quot;react-native-mailスクリンショット&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-mail公式サイト: &lt;a href=&quot;https://github.com/chirag04/react-native-mail&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/chirag04/react-native-mail&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)でメール発信するため端末にインストールされてある基本メールアプリを起動するライブラリを紹介します。このブログではreact-native-mailライブラリを使ってメールアプリを実行してメールを発信する方法について紹介します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-mail.jpg"/></entry><entry xml:lang="ja"><title type="html">ユーザ音声認識</title><link href="https://dev-yakuza.github.io/react-native/react-native-voice/" rel="alternate" type="text/html" title="ユーザ音声認識"/><published>2019-01-25T00:00:00+09:00</published><updated>2019-01-25T21:30:07+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-voice-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-voice/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)プロジェクトでユーザ音声を認識して文字に変換する機能(STT, Speech To Text)が必要な時&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-voice&lt;/code&gt;ライブラリを使うことをお勧めします。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-voice&lt;/code&gt;を使ってユーザの音声を文字で変換する機能(STT, Speech To Text)を追加する方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-voice公式サイト: &lt;a href=&quot;https://github.com/wenkesj/react-native-voice&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/wenkesj/react-native-voice&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;ユーザ音声を認識して文字に変換する機能であるSTT(Speech To Text)を使うため下のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-voice&lt;/code&gt;ライブラリをRN(React Native)プロジェクトへインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-voice &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;インストールが終わったら下のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-voice&lt;/code&gt;をRN(React Native)プロジェクトと連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-voice &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;権限設定&quot;&gt;権限設定&lt;/h2&gt; &lt;p&gt;ユーザ音声を認識して文字に変換する機能であるSTT(Speech To Text)を使うためそれそれのOSに合う権限設定が必要です。&lt;/p&gt; &lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt; &lt;p&gt;iOSで権限を設定するため下記の内容をRN(React Native)プロジェクトフォルダの&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/app_name/Info.plist&lt;/code&gt;に追加します。&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSMicrophoneUsageDescription&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Description of why you require the use of the microphone&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSSpeechRecognitionUsageDescription&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Description of why you require the use of the speech recognition&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;アンドロイド未確認&quot;&gt;アンドロイド(未確認)&lt;/h3&gt; &lt;p&gt;アンドロイド(Android)で権限を設定するため下記の内容をRN(React Native)プロジェクトのフォルダの&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/AndroidManifest.xml&lt;/code&gt;に追加します。(参考: アンドロイドで権限の問題があるかどうかはまだ確認してないです。)&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;manifest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;package=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;package_name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.SYSTEM_ALERT_WINDOW&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.RECORD_AUDIO&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;ここで説明するRN(React Native)のコードは基本的&lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;が適応されています。RN(React Native)にtypescriptとstyled-componentsを適応する方法については以前のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記の内容はユーザ音声を認識して文字で変換する機能であるSTT(Speech To Text)を使うため&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-voice&lt;/code&gt;を使う方法です。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeAllListeners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSpeechStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'onSpeechStart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSpeechEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'onSpeechEnd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSpeechResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'onSpeechResults'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSpeechError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'_onSpeechError'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onRecordVoice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'en-US'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上のソースを詳しく見てみます。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;constructorでreact-native-voiceに使うイベント関数を連結します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeAllListeners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;react-native-voiceを使ってるコンポーネント(Component)が除去(Unmount)される時react-native-voiceライブラリも除去します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onRecordVoice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'en-US'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;特定イベントでユーザ音声を認識したり、中止したりします。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSpeechResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'onSpeechResults'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;react-native-voiceが&lt;code class=&quot;highlighter-rouge&quot;&gt;Voice.start('en-US');&lt;/code&gt;で起動したら、マイクを通じて認識されたユーザの音声が&lt;code class=&quot;highlighter-rouge&quot;&gt;Voice.onSpeechResults = this._onSpeechResults;&lt;/code&gt;を通じで継続的に更新されます。&lt;/p&gt; &lt;p&gt;全てのソースコードは下記のレポジトリ(Repository)で確認できます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react native voice exerciseレポジトリ(Repository): &lt;a href=&quot;https://github.com/dev-yakuza/react_native_voice_exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/react_native_voice_exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;提供言語選定&quot;&gt;提供言語選定&lt;/h2&gt; &lt;p&gt;ユーザ音声を認識して文字に変換する機能であるSTT(Speech To Text)を使うためにはユーザの音声がどんな言語か設定する必要があります。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ja-JP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のリストは言語を設定するための言語-国家コードです。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ar-SA cs-CZ da-DK de-DE el-GR en-AU en-GB en-IE en-US en-ZA es-ES es-MX &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-FI&lt;/span&gt; fr-CA fr-FR he-IL hi-IN hu-HU id-ID it-IT ja-JP ko-KR nl-BE nl-NL no-NO pl-PL pt-BR pt-PT ro-RO ru-RU sk-SK sv-SE th-TH tr-TR zh-CN zh-HK zh-TW &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-voice公式サイト: &lt;a href=&quot;https://github.com/wenkesj/react-native-voice&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/wenkesj/react-native-voice&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)プロジェクトでユーザ音声を認識して文字に変換する機能(STT, Speech To Text)が必要な時react-native-voiceライブラリを使うことをお勧めします。このブログではreact-native-voiceを使ってユーザの音声を文字で変換する機能(STT, Speech To Text)を追加する方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-voice.jpg"/></entry><entry xml:lang="ja"><title type="html">BlaBooアプリ開発日誌(RN, React Native)</title><link href="https://dev-yakuza.github.io/blaboo/development-journal/" rel="alternate" type="text/html" title="BlaBooアプリ開発日誌(RN, React Native)"/><published>2019-01-15T00:00:00+09:00</published><updated>2019-01-31T21:47:05+09:00</updated><id>https://dev-yakuza.github.io/blaboo/development-journal-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/blaboo/development-journal/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;今までRN(React Native)を勉強しましたが、アプリを最初から最後まで開発した経験がありませんでした。それでRN(React Native)を使って可能な限り早くアプリを最初から最後まで開発してみようかと思ってこのプロジェクトを実行しました。&lt;/p&gt; &lt;h2 id=&quot;blabooとは&quot;&gt;BlaBooとは?&lt;/h2&gt; &lt;p&gt;BlaBoo(ブラブー)は英語の&lt;code class=&quot;highlighter-rouge&quot;&gt;blah blah(ブラブラ)&lt;/code&gt;の単語と赤ちゃんが良く出す&lt;code class=&quot;highlighter-rouge&quot;&gt;boo(ブー)&lt;/code&gt;の単語を合わせた意味で、赤ちゃん/子供向けの単語アプリです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;BlaBoo紹介ページ: &lt;a href=&quot;https://dev-yakuza.github.io/app/blaboo/&quot; target=&quot;_blank&quot;&gt;BlaBoo&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記はBlaBooアプリのダウンロードリンクです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://itunes.apple.com/jp/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;アップルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;グーグルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;赤ちゃん/子供がイラストを見てそのイラストをタッチしたら音声でその単語を読んでくれるとてもシンプルなアプリです。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/app_concept.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;なぜ作るようになったか&quot;&gt;なぜ作るようになったか？&lt;/h2&gt; &lt;p&gt;実際赤ちゃん/子供向けの単語アプリは既にいっぱいあります。このアプリを作った主な目的は下記のようです。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;赤ちゃん/子供向けで多言語を勉強できる単語アプリを作る。&lt;/li&gt; &lt;li&gt;今まで勉強したRN(React Naitve)でアプリを開発して正式リリースする。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;外国に住んでいるので子供に外国語と母国語を教えたくて色々アプリを探したが、一つのアプリで多言語を勉強できる機能があるアプリがあまりありませんでした。問題も発見したしそれを解決する技術もあるから作ってみようと思って開発することにしました。&lt;/p&gt; &lt;h2 id=&quot;アプリ企画&quot;&gt;アプリ企画&lt;/h2&gt; &lt;p&gt;しかしアプリを自ら全て作ることは時間が十分ありませんでした。それでいった一旦赤ちゃん/子供向けのアプリをベンチマーキングして、MVP(Minimum Vaiable Product: 最小機能製品)を決めました。BlaBooのMVP(Minimum Vaiable Product: 最小機能製品)は下記のようです。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;単語のカテゴリー：カテゴリーを定義してその中に該当する単語を表示する。(ex&amp;gt; 車、果物、野菜)&lt;/li&gt; &lt;li&gt;単語をイラストで表示する：単語をイラストで表示して赤ちゃん/子供に興味を誘発させる&lt;/li&gt; &lt;li&gt;イラスト選択すると単語の音声を提供：イラストをタッチしたら単語を音声で読んで赤ちゃん/子供が自然にイラストと単語を勉強できるようにする。&lt;/li&gt; &lt;li&gt;多言語対応：多言語を対応して一つの単語を色んな国の言語で勉強できるようにする。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;これでMVP(Minimum Vaiable Production: 最小機能製品)を定義して簡単なスケッチでアプリの動線を企画しました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/hand_sketch.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - スケッチ&quot; /&gt;&lt;/p&gt; &lt;p&gt;スケッチテンプレートは下記のサイトでダウンロードしました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://sneakpeekit.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;http://sneakpeekit.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;一人でアプリを趣味で作るので企画がそんなすごくしょぼいですね。目標、ターゲット、ビジネスモデル。。。このようなものはいったん折っといておおよその機能とおおよそのスケッチをする程度だけしました。だけど、それなり仮説も立てて、することも一覧で出したり頑張りましたが、これを企画と呼べるかはちょっと恥ずかしですね。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/plan_trello.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - 企画&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;アプリデザイン&quot;&gt;アプリデザイン&lt;/h2&gt; &lt;p&gt;上で企画した内容をベースで基本的なデザインをしました。やはりデザイン専門家ではないのでデザインがそんなにきれいではないです。それでもデザインを通じてアプリの基本的な色やコンセプトなどを具体化ができました。&lt;/p&gt; &lt;p&gt;基本デザインは&lt;a href=&quot;https://www.sketchapp.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;sketchapp&lt;/a&gt;を使って簡単なデザインをしてイラストは&lt;a href=&quot;https://www.freepik.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;freepik&lt;/a&gt;と言うサイトでダウンロードしました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/sketch_design.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - デザイン&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;アプリ開発&quot;&gt;アプリ開発&lt;/h2&gt; &lt;p&gt;開発はRN(React Native)を使いました。開発者一人でiOS/Androidを同時に開発ができるしjavascriptなので参入障壁もswiftやkotlinより高くありませんでした。BlaBooは基本的RN(&lt;code class=&quot;highlighter-rouge&quot;&gt;React Native&lt;/code&gt;)とタイプスクリプト(&lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;)を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)のインストール方法：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/installation/&quot; target=&quot;_blank&quot;&gt;RNインストール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)にtypescriptを適用する: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;また、RN(React Native)の基本UIは&lt;code class=&quot;highlighter-rouge&quot;&gt;NativeBase&lt;/code&gt;をスタイルは&lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;を使ってました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)にNativeBaseを適用する：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/nativebase/&quot; target=&quot;_blank&quot;&gt;nativebase&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Navtive)でstyled-componentsを使う：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;RN(React Native)は基本的ナビゲーションシステムがありません。BlaBooは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-navigation&lt;/code&gt;を使ってナビゲーションシステムを実装しました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-navigationの使い方：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-navigation/&quot; target=&quot;_blank&quot;&gt;react-navigation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;MVP(Minimum Vaiable Product：最小機能製品)の機能中一つである音声機能は&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt;を使って&lt;code class=&quot;highlighter-rouge&quot;&gt;tts(Text To Speech)&lt;/code&gt;の機能を実行しました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-ttsの使い方：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-tts/&quot; target=&quot;_blank&quot;&gt;react-native-tts&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;また、ユーザーの端末の地域情報を使ってアプリと&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt;の基本言語を設定しています。ユーザーの端末情報を取得するため&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-device-info&lt;/code&gt;を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-device-infoの使い方：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-device-info/&quot; target=&quot;_blank&quot;&gt;react-native-device-info&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;そしてイラストをタッチするとイラストが動くアニメーションがありますが、&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;を使って実装しました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-animatableの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-animatable/&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;最後にアプリの広告や分析のためあグーグルのファイアベース(Google Firebase)とグーグルのアドモブ(Google Admob)を使ってます。このアプリの実装のため&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-firebase admobの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-admob&lt;/a&gt;&lt;/li&gt; &lt;li&gt;react-native-firebase analyticsの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-analytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-analytics&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;こうやってまとめたらほとんどオープンソースを持って来て実装しただけであまりやったものがないに見えますね。素敵なオープンソースを作ってくれてありがとうございます。素敵なオープンソースでメインの機能を開発してRN(React Native)を使って再利用可能なコンポーネント(Component)を使って開発は容易に進めました。ただ、画面へ表示するイラストや音声のための単語をまとめる作業がもっと時間がかかりました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/resource.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - リソースコード&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;アプリ登録&quot;&gt;アプリ登録&lt;/h2&gt; &lt;p&gt;これでBlabooのMVP(Minimun Vaiable Product：最小機能製品)が完成させました。開発が終わったらすぐアプリを登録してダウンロードできると思いましたが、アプリの登録手続きにも結構時間がかかりました。&lt;/p&gt; &lt;p&gt;アップルのアプリ審査(App Review)が結構時間がかかることは事前に知っていましたのでまずiOSアプリを登録してiOSのアプリ登録が完了した時点でアンドロイドの登録手続きを進めました。アップルのアプリ登録は2ヶ月以上かかてアンドロイドは2日かかりました。&lt;/p&gt; &lt;p&gt;アップルはやはり色んな理由でアプリ審査がリジェクト(App Review reject)が多くて時間がかかりました。アンドロイドは赤ちゃん/子供向けのアプリだけど&lt;code class=&quot;highlighter-rouge&quot;&gt;Designed for Families program&lt;/code&gt;を選択しなかったので一回リジェクト(Reject)されました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/google_reject.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - グーグルのアプリ審査リジェクト&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリを登録するためにはアップル開発者プログラム(Apple Developer Program)登録とアンドロイド開発者登録(Google Play Developer)が必要です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;アップル開発者プログラム登録方法：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-enroll-developer-program/&quot; target=&quot;_blank&quot;&gt;iOS開発者登録&lt;/a&gt;&lt;/li&gt; &lt;li&gt;アンドロイド開発者(Google Play Developer)登録：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/&quot; target=&quot;_blank&quot;&gt;アンドロイド開発者登録&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;また、アプリを登録する時色んな情報が必要でした。その情報を作成する時も考えたより時間がかかりました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;iOSアプリ登録方法：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-app-store/&quot; target=&quot;_blank&quot;&gt;iOS App store登録&lt;/a&gt;&lt;/li&gt; &lt;li&gt;アンドロイドアプリ登録方法：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-google-play/&quot; target=&quot;_blank&quot;&gt;アンドロイドアプリストア登録&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;そしてやはり厳しなアップルのアプリ審査(App Review)。5回くらいアプリ審査(App Review)がリジェクト(Reject)されました。本当に登録をやめったくなりましたね。結局最後のリジェクト(Reject)の理由はアプリがユーザーと適切な相互作用がないからアップルのアプリストアにはいらないアプリですと言いました。&lt;/p&gt; &lt;p&gt;最初は腹立って企画する時ベンチマーキングしたアプリと比較してここよりカテゴリが多いです、ここより単語量が多いです、ここにはない多言語機能がありますとアピールしましたが、簡単に承認してくれませんでした。逆に私が考えて他のアプリがアプリストアの違反されると思ったら申告してくださいと言われました。。。他の開発者が頑張って作ったものをどうやって申告しますかね。。。それで結局最初企画したものとは全然別の機能を追加しました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/add_card_mode.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - 復習機能&quot; /&gt;&lt;/p&gt; &lt;p&gt;カードタイプでカテゴリで勉強した単語を復習する機能を追加しました。20枚のカードがランダムで表示されてそのカードを左や右に渡し復習する機能です。&lt;/p&gt; &lt;p&gt;最初企画にはなかったもので緊急にアプリ審査(App Review)の承認のため一日でデザインして1日で機能を作ってので前のアプリ機能と合わんない気持ちがあります。今までも一つのアプリに二つのアプリが入ってる気持ちです。だけど、この機能を追加して無事にアプリ審査(App Review)を通過することができました。&lt;/p&gt; &lt;p&gt;最初はアップルのアプリ審査(App Review)が厳しすぎるじゃないと思いましたが、この審査があるおかげでiOSのアプリのUI/UXが用意かなと思いました。また、アップルのアプリ審査(App Reivew)の経験で次のアプリはもっとユーザを考えて作ると思いました。アプルのアプリ審査者(Apple App Reviewer)様だちに本当にありがとございます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://itunes.apple.com/jp/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;アップルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;グーグルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;アプリの開発の振り返え&quot;&gt;アプリの開発の振り返え&lt;/h2&gt; &lt;p&gt;色んなことがありましたが、無地に最初のアプリをリリースしました。しょぼいアプリかもしれないですが、このアプリはユーザーをたくさん増えさせて広告の収入を狙えうより自分自身が使うため、それと今まで勉強したRN(React Native)を活用してアプリの登録手続きを確認するため開発しました。&lt;/p&gt; &lt;p&gt;振り返えてみたら、開発よりデザイン、特にイラストをまとめった時間が結構かかりました。開発は一週間ぐらいかな。。。やはりRN(React Native)の開発パフォーマンスを確認しました。(オープンソース開発者たちに心から感謝します。)&lt;/p&gt; &lt;p&gt;アップルの厳しアプリ審査(App Review).そのせいで急なアプリコンセプトの変更、しかしそれのおかげでもっとユーザを考えて開発すると思う心構えを持ってるようになりました。もう一度アップルの審査者(App Review)様に感謝します。&lt;/p&gt; &lt;p&gt;BlaBooで検証したかった無料リソスでアプリの開発が出来る仮説は検証できました。皆さんも無料リソスを活用してアプリを開発してみてください。&lt;/p&gt; &lt;h2 id=&quot;最後に&quot;&gt;最後に&lt;/h2&gt; &lt;p&gt;やはり&lt;code class=&quot;highlighter-rouge&quot;&gt;TTS(Text To Speech)&lt;/code&gt;の音声は抵抗感がありました。そして読み間違い時もありました。韓国語で&lt;code class=&quot;highlighter-rouge&quot;&gt;スパゲティ&lt;/code&gt;は発音できなかったので&lt;code class=&quot;highlighter-rouge&quot;&gt;パスタ&lt;/code&gt;で変更しました。もし声を寄付してくれう方がいったら大歓迎です。(&lt;a href=&quot;https://dev-yakuza.github.io/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;イラストも無料イラストを使ったので一つのスタイルになってないです。やはり、これも寄付してくれる方がいったら大歓迎です。(&lt;a href=&quot;https://dev-yakuza.github.io/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;多言語は日本語、英語、韓国語を基本提供しましたが、中国とイタリアでアプリダウンロードがあって中国ごとイタリア語を追加しました。しかし中国語、イタリア語はできないので翻訳機を使いました。間違ってる中国、イタリア語があったら、フィドバックお願いします。また、他の言語を寄付してくれる方がいったら大歓迎です。(&lt;a href=&quot;https://dev-yakuza.github.io/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://itunes.apple.com/jp/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;アップルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;グーグルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 今までRN(React Native)を勉強しましたが、アプリを最初から最後まで開発した経験がありませんでした。それでRN(React Native)を使って可能な限り早くアプリを最初から最後まで開発してみようかと思ってこのプロジェクトを実行しました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/blaboo/background.png"/></entry><entry xml:lang="ja"><title type="html">アンドロイドアプリストア登録</title><link href="https://dev-yakuza.github.io/react-native/android-google-play/" rel="alternate" type="text/html" title="アンドロイドアプリストア登録"/><published>2019-01-12T00:00:00+09:00</published><updated>2019-01-15T09:49:44+09:00</updated><id>https://dev-yakuza.github.io/react-native/android-google-play-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/android-google-play/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発したアンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)に登録してみようかと思います。アンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)に登録するためにはアンドロイド開発者登録(グーグルプレイ開発者登録)が必要です。アンドロイド開発者登録(グーグルプレイ開発者登録)をしてない方は以前のブログを参考して登録してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/&quot; target=&quot;_blank&quot;&gt;アンドロイド開発者登録&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;準備&quot;&gt;準備&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発したアンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)に灯篭するためRN(React Native)をアンドロイド用にビルドする必要があります。RN(React Native)にアンドロイド署名キー(Android Signing Key)を登録してアンドロイド用にビルドする方法については以前のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;アンドロイドビルドやテスト&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;ビルドファイルサイズ最適化&quot;&gt;ビルドファイルサイズ最適化&lt;/h2&gt; &lt;p&gt;以前のブログである&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;アンドロイドビルドやテスト&lt;/a&gt;でアンドロイド用にビルドされたファイルはファイルサイズの最適化がされてないです。RN(React Native)で開発したアンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)にアップロードするためにはビルドファイルサイズを最適化する必要があります。&lt;/p&gt; &lt;p&gt;RN(React Native)プロジェクトフォルダで&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt;を開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... defaultConfig { ... // ndk { // abiFilters &quot;armeabi-v7a&quot;, &quot;x86&quot; // } } ... def enableSeparateBuildPerCPUArchitecture = true &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして下記のコマンドを使ってRN(React Native)をアンドロイド用にビルドします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# cd android&lt;/span&gt; ./gradlew assembleRelease &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ビルドされたファイルは下記の位置で確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;android/app/build/outputs/apk/release/app-armeabi-v7a-release.apk android/app/build/outputs/apk/release/app-x86-release.apk &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;アプリ登録&quot;&gt;アプリ登録&lt;/h2&gt; &lt;p&gt;下記のリンクを押してグーグルプレイコンソル(Google Play Console)に移動します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;グーグルプレイコンソル(Google Play Console): &lt;a href=&quot;https://play.google.com/apps/publish/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://play.google.com/apps/publish/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;グーグルプレイコンソル(Google Play Console)に移動したら下記の画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/google-play-console-home.png&quot; alt=&quot;グーグルプレイコンソルホーム&quot; /&gt;&lt;/p&gt; &lt;p&gt;画面の上にある&lt;code class=&quot;highlighter-rouge&quot;&gt;PUBLISH AN ANDROID APP ON GOOGLE PLAY&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-title.png&quot; alt=&quot;グーグルプレイコンソルアプリタイトル&quot; /&gt;&lt;/p&gt; &lt;p&gt;アンドロイドアプリストア(Google Play)に表示される名前と基本言語を選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-info.png&quot; alt=&quot;グーグルプレイコンソルアプリ情報&quot; /&gt;&lt;/p&gt; &lt;p&gt;アンドロイドアプリストア(Google Play)に表示される情報を入力します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;タイトル(title): 50文字&lt;/li&gt; &lt;li&gt;要約説明(short description): 80文字&lt;/li&gt; &lt;li&gt;全体説明(full description): 4000文字&lt;/li&gt; &lt;li&gt;アプリイメージ(Screenshots)&lt;/li&gt; &lt;li&gt;アプリアイコン(App icon): 512x512(32-bit PNG, alpha), 1024x500(JPG or 24-bit PNG), 180x120(JPG or 24-bit PNG), 1280x720(JPG or 24-bit PNG), 4096x4096(JPG or 24-bit PNG)&lt;/li&gt; &lt;li&gt;プロモーションビデオ(Promo Video)&lt;/li&gt; &lt;li&gt;アプリカテゴリ(Category)&lt;/li&gt; &lt;li&gt;開発者連絡先(Contact details)&lt;/li&gt; &lt;li&gt;個人情報ポリシー(Privacy Policy)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;全ての情報を入力したらapkファイルを登録する方法について説明します。&lt;/p&gt; &lt;p&gt;左上にある&lt;code class=&quot;highlighter-rouge&quot;&gt;App release&lt;/code&gt;メニューを押したら下記の画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-register.png&quot; alt=&quot;グーグルプレイアプリ登録&quot; /&gt;&lt;/p&gt; &lt;p&gt;画面に見える&lt;code class=&quot;highlighter-rouge&quot;&gt;Production track&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;Production&lt;/code&gt;項目の&lt;code class=&quot;highlighter-rouge&quot;&gt;MANAGE&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-production.png&quot; alt=&quot;グーグルプレイアプリproduction生成&quot; /&gt;&lt;/p&gt; &lt;p&gt;上のような画面が見えたら下の&lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE RELEASE&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/register-signing-key.png&quot; alt=&quot;グーグルプレイアプリ署名キー登録&quot; /&gt;&lt;/p&gt; &lt;p&gt;グーグルプレイ(Google Play)を使ってアプリ署名(App Signing)をするため&lt;code class=&quot;highlighter-rouge&quot;&gt;FINISH&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/accept-agreement.png&quot; alt=&quot;グーグルプレイ利用規約同意&quot; /&gt;&lt;/p&gt; &lt;p&gt;上のような利用規約が表示されたら下にある&lt;code class=&quot;highlighter-rouge&quot;&gt;ACCEPT&lt;/code&gt;ボタンを押して同意します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_apk.png&quot; alt=&quot;グーグルプレイapkアップロード&quot; /&gt;&lt;/p&gt; &lt;p&gt;上でビルド下RN(React Native)の&lt;code class=&quot;highlighter-rouge&quot;&gt;apk&lt;/code&gt;ファイルをアップロードします。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_release_note.png&quot; alt=&quot;グーグルプレイapkリリースノート&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリの配布名前(Release Name)と配布ノート(Release Note)を作成して右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE&lt;/code&gt;ボタンを押します。そしたら右の&lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt;ボタンがアクティブになります。アクティブになった&lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/not_yet.png&quot; alt=&quot;グーグルプレイ登録不可&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリの登録手続きが終わってないので右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;START ROLLOUT TO PRODUCTION&lt;/code&gt;ボタンがアクティブになりません。左メニューの&lt;code class=&quot;highlighter-rouge&quot;&gt;Content rating&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating.png&quot; alt=&quot;グーグルプレイコンテンツ評価&quot; /&gt;&lt;/p&gt; &lt;p&gt;コンテンツ評価(Content Rating)を設定する画面です。&lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_insert_info.png&quot; alt=&quot;グーグルプレイコンテンツ評価情報入力&quot; /&gt;&lt;/p&gt; &lt;p&gt;メール情報やアプリのカテゴリを選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_agreement.png&quot; alt=&quot;グーグルプレイコンテンツ評価情報同意&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリのコンテンツ評価を決めるための情報を選択します。全て選択したら下の&lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE QUESTIONNAIRE&lt;/code&gt;ボタンを押してアクティブされた&lt;code class=&quot;highlighter-rouge&quot;&gt;CALCULATE RATING&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_completed.png&quot; alt=&quot;グーグルプレイコンテンツ評価情報選択完了&quot; /&gt;&lt;/p&gt; &lt;p&gt;入力した情報をベースでコンテンツ評価が計算されて出ます。内容を確認して下の&lt;code class=&quot;highlighter-rouge&quot;&gt;APPLYING RATING&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/calculated_content_rating.png&quot; alt=&quot;グーグルプレイコンテンツ評価完了&quot; /&gt;&lt;/p&gt; &lt;p&gt;コンテンツ評価の入力を完了しました。コンテンツ評価に影響があるアップデートがあったら、コンテンツ評価を再計算する必要がありますので、上の手続きをまたしてください。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/content_rating.png&quot; alt=&quot;グーグルプレイコンテンツ評価&quot; /&gt;&lt;/p&gt; &lt;p&gt;最後の手続きである料金の設定をするため左メニューの&lt;code class=&quot;highlighter-rouge&quot;&gt;Pricing &amp;amp; distribution&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_price_info.png&quot; alt=&quot;グーグルプレイアプリ料金情報&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリの料金を設定する画面です。私たちは無料でアプリを提供する予定なので、&lt;code class=&quot;highlighter-rouge&quot;&gt;FREE&lt;/code&gt;を設定して進めます。また、子供向け、アプリに広告が含まれてあるかなど情報を入力します。必須項目を全て入力したら下の&lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE DRAFT&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;h2 id=&quot;アプリ審査申請&quot;&gt;アプリ審査申請&lt;/h2&gt; &lt;p&gt;アプリ審査(App Review)のための準備が終わりました。メニューの&lt;code class=&quot;highlighter-rouge&quot;&gt;App release&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_review.png&quot; alt=&quot;グーグルプレイアプリ審査&quot; /&gt;&lt;/p&gt; &lt;p&gt;上で作成した&lt;code class=&quot;highlighter-rouge&quot;&gt;Production&lt;/code&gt;項目の横にある&lt;code class=&quot;highlighter-rouge&quot;&gt;EDIT RELEASE&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_review_info.png&quot; alt=&quot;グーグルプレイアプリ審査情報&quot; /&gt;&lt;/p&gt; &lt;p&gt;上で作成した情報が見えます。スクロールして下に移動して、&lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt;ボタンを選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/apply_app_review_info.png&quot; alt=&quot;グーグルプレイアプリ審査申請&quot; /&gt;&lt;/p&gt; &lt;p&gt;上のような画面が見えたらスクロールして下に移動して&lt;code class=&quot;highlighter-rouge&quot;&gt;START ROLLOUT TO PRODUCTION&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/register_app.png&quot; alt=&quot;グーグルプレイアプリ登録&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリ審査の準備が終わったら&lt;code class=&quot;highlighter-rouge&quot;&gt;CONFIRM&lt;/code&gt;ボタンを押してアプリ審査を申請します。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;アンドロイドアプリストア(Google Play)にアプリを登録するための手続きが終わりました。アプリ審査は2~3時間くらいかかります。アプリの審査が終わったら登録申請したアプリをアンドロイドアプリストア(Google Play)で検索やダウンロードができます。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)で開発したアンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)に登録してみようかと思います。アンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)に登録するためにはアンドロイド開発者登録(グーグルプレイ開発者登録)が必要です。アンドロイド開発者登録(グーグルプレイ開発者登録)をしてない方は以前のブログを参考して登録してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/android-google-play.jpg"/></entry><entry xml:lang="ja"><title type="html">アンドロイド開発者登録</title><link href="https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/" rel="alternate" type="text/html" title="アンドロイド開発者登録"/><published>2019-01-11T00:00:00+09:00</published><updated>2019-01-11T17:13:53+09:00</updated><id>https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発したアンドロイドアプリ(Android App)をグーグルプレイストア(Google Playstore)に登録するためアンドロイド開発者登録(グーグルプレイ開発者登録)をして見ようと思います。&lt;/p&gt; &lt;p&gt;アップル開発者登録(Apple Developer Program)に関しては以前のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-enroll-developer-program/&quot; target=&quot;_blank&quot;&gt;iOS開発者登録&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;準備&quot;&gt;準備&lt;/h2&gt; &lt;p&gt;アンドロイドアプリ(Android App)をグーグルプレイストア(Google Playstore)に登録するためには当然だがグーグルのアカウント(Google Account)が必要です。もしグーグルのアカウント(Google Account)が無い方はグーグルのアカウント(Google Account)を生成してください。また、アンドロイド開発者(グーグルプレイ開発者)は18歳以上でなければなら登録が可能です。この点は参考してください。&lt;/p&gt; &lt;p&gt;アンドロイド開発者登録(グーグルプレイ開発者登録)もiOS開発者登録みたいに登録手数料が発生します。登録手数料は25ドルで、毎年更新するiOS開発者とは違って一回のみで発生します。手数料は下のカードで決済が出来ます&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Mastercard&lt;/li&gt; &lt;li&gt;Visa&lt;/li&gt; &lt;li&gt;American Express&lt;/li&gt; &lt;li&gt;Discover(アメリカのみ)&lt;/li&gt; &lt;li&gt;Visa Electron(アメリカ以外)&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;アンドロイド開発者登録&quot;&gt;アンドロイド開発者登録&lt;/h2&gt; &lt;p&gt;アンドロイド開発者登録(グーグルプレイ開発者登録)をする準備が出来ました。アンドロイド開発者登録(グーグル開発者登録)のため下記のリンクを押して登録ページに移動します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;アンドロイド開発者登録(グーグルプレイ開発者登録): &lt;a href=&quot;https://play.google.com/apps/publish/signup/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://play.google.com/apps/publish/signup/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;グーグルのアカウント(Google Account)でログインした状態で上のリンクを押したら下のような画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/enroll-goole-play-developer.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者登録サイト&quot; /&gt;&lt;/p&gt; &lt;p&gt;スクロールして下に移動して左へ&lt;code class=&quot;highlighter-rouge&quot;&gt;開発者契約に同意(Accept developer agreement)&lt;/code&gt;して右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE TO PAYMENT&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/accept-developer-agreement.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者登録同意&quot; /&gt;&lt;/p&gt; &lt;p&gt;そしたら下記のような決済画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/purchase.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者手数料決済&quot; /&gt;&lt;/p&gt; &lt;p&gt;決済情報を入力して右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;BUY&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/purchase-completed.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者決済成功&quot; /&gt;&lt;/p&gt; &lt;p&gt;決済に成功したら上のような画面が見えます。&lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE REGISTRATION&lt;/code&gt;ボタンを押してアンドロイド開発者(グーグルプレイ開発者)登録を進めます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/developer-info.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者情報入力&quot; /&gt;&lt;/p&gt; &lt;p&gt;上のようなアンドロイド開発者(グーグルプレイ開発者)の情報を入力する画面が出たら、必須項目を全て入力して右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;COMPLETE REGISTRAION&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/completed-enroll.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者登録成功&quot; /&gt;&lt;/p&gt; &lt;p&gt;アンドロイド開発者(グーグルプレイ開発者)登録に成功したら上のような画面が見えます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発したアンドロイドアプリ(Android App)をグーグルプレイストア(Google Playstore)に登録するためアンドロイド開発者登録(グーグルプレイ開発者登録)をして見ました。次のブログではRN(React Native)で開発したアンドロイドアプリ(Android App)を実際登録して見ます。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://support.google.com/googleplay/android-developer/answer/6112435&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://support.google.com/googleplay/android-developer/answer/6112435&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)で開発したアンドロイドアプリ(Android App)をグーグルプレイストア(Google Playstore)に登録するためアンドロイド開発者登録(グーグルプレイ開発者登録)をして見ようと思います。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/android-enroll-google-play-developer.jpg"/></entry></feed>