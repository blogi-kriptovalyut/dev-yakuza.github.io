<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dev-yakuza.github.io/ko/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/ko/" rel="alternate" type="text/html"/><updated>2019-01-25T21:30:38+09:00</updated><id>https://dev-yakuza.github.io/</id><title type="html">Dreams the art through programming</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ko"><title type="html">사용자 음성 인식</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-voice/" rel="alternate" type="text/html" title="사용자 음성 인식"/><published>2019-01-25T00:00:00+09:00</published><updated>2019-01-25T21:30:07+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-voice-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-voice/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;RN(React Native) 프로젝트에서 사용자 음성을 인식하여 문자로 변경하는 기능(STT, Speech To Text)이 필요할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-voice&lt;/code&gt; 라이브러리를 사용하는 것을 추천합니다. 이 블로그에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-voice&lt;/code&gt;를 사용하여 사용자 음성을 인식하여 문자로 변경하는 기능(STT, Speech To Text)을 추가하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-voice 공식 사이트: &lt;a href=&quot;https://github.com/wenkesj/react-native-voice&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/wenkesj/react-native-voice&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt; &lt;p&gt;사용자 음성을 인식하여 문자로 변경하는 기능인 STT(Speech To Text)를 사용하기 위해 아래에 명령어로 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-voice&lt;/code&gt; 라이브러리를 RN(React Native) 프로젝트에 설치합니다&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-voice &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설치가 완료되면 아래에 명령어로 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-voice&lt;/code&gt;를 RN(React Native) 프로젝트와 연결합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-voice &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;권한-설정&quot;&gt;권한 설정&lt;/h2&gt; &lt;p&gt;사용자 음성을 인식하여 문자로 변경하는 기능인 STT(Speech To Text)를 사용하기 위해서 각 OS에 맞는 권한 설정이 필요합니다.&lt;/p&gt; &lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt; &lt;p&gt;iOS에서 권한 설정을 하기 위해 아래에 내용을 RN(React Native) 프로젝트 폴더의 &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/app_name/Info.plist&lt;/code&gt;에 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSMicrophoneUsageDescription&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Description of why you require the use of the microphone&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSSpeechRecognitionUsageDescription&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Description of why you require the use of the speech recognition&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;안드로이드미확인&quot;&gt;안드로이드(미확인)&lt;/h3&gt; &lt;p&gt;안드로이드(Android)에서 권한 설정을 하기 위해 아래에 내용을 RN(React Native) 프로젝트 폴더의 &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/AndroidManifest.xml&lt;/code&gt;에 추가합니다. (참고: 안드로이드에서 권한 문제가 없는지 아직 확인하지 않았습니다.)&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;manifest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;package=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;package_name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.SYSTEM_ALERT_WINDOW&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.RECORD_AUDIO&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;사용-방법&quot;&gt;사용 방법&lt;/h2&gt; &lt;p&gt;여기서 설명하는 RN(React Native) 코드는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;가 적용되어있습니다. RN(React Native)에 typescript와 styled-components를 적용하는 방법에 대해서는 이전 블로그를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;아래의 내용은 사용자 음성을 인식하여 문자로 변경하는 기능인 STT(Speech To Text)를 사용하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-voice&lt;/code&gt;를 사용하는 방법입니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeAllListeners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSpeechStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'onSpeechStart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSpeechEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'onSpeechEnd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSpeechResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'onSpeechResults'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSpeechError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'_onSpeechError'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onRecordVoice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'en-US'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 소스를 자세히 보겠습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSpeechError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSpeechError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;constructor에서 react-native-voice에서 사용할 이벤트 함수를 연결합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeAllListeners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;react-native-voice를 사용하는 컴포넌트(Component)가 제거(Unmount)될때 react-native-voice 라이브러리도 제거해 줍니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onRecordVoice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'en-US'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;특정 이벤트에서 사용자 음성을 인식하거나 중지하도록 연결하였습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSpeechResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'onSpeechResults'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;react-native-voice가 &lt;code class=&quot;highlighter-rouge&quot;&gt;Voice.start('en-US');&lt;/code&gt;로 시작되었다면, 마이크를 통해 인식된 사용자의 음성이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Voice.onSpeechResults = this._onSpeechResults;&lt;/code&gt;을 통해 계속적으로 갱신이 됩니다.&lt;/p&gt; &lt;p&gt;전체 소스코드는 아래에 링크에서 확인할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react native voice exercise 저장소(Repository): &lt;a href=&quot;https://github.com/dev-yakuza/react_native_voice_exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/react_native_voice_exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;지원-언어-설정&quot;&gt;지원 언어 설정&lt;/h2&gt; &lt;p&gt;사용자 음성을 인식하여 문자로 변경하는 기능인 STT(Speech To Text)를 사용하기 위해서는 사용자의 음성이 어떤 언어인지 설정할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Voice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ja-JP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래의 목록은 언어를 설정하기위한 언어-국가 코드입니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ar-SA cs-CZ da-DK de-DE el-GR en-AU en-GB en-IE en-US en-ZA es-ES es-MX &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-FI&lt;/span&gt; fr-CA fr-FR he-IL hi-IN hu-HU id-ID it-IT ja-JP ko-KR nl-BE nl-NL no-NO pl-PL pt-BR pt-PT ro-RO ru-RU sk-SK sv-SE th-TH tr-TR zh-CN zh-HK zh-TW &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-voice 공식 사이트: &lt;a href=&quot;https://github.com/wenkesj/react-native-voice&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/wenkesj/react-native-voice&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 RN(React Native) 프로젝트에서 사용자 음성을 인식하여 문자로 변경하는 기능(STT, Speech To Text)이 필요할 때 react-native-voice 라이브러리를 사용하는 것을 추천합니다. 이 블로그에서는 react-native-voice를 사용하여 사용자 음성을 인식하여 문자로 변경하는 기능(STT, Speech To Text)을 추가하는 방법에 대해서 알아보겠습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-voice.jpg"/></entry><entry xml:lang="ko"><title type="html">BlaBoo 앱 개발기(RN, React Native)</title><link href="https://dev-yakuza.github.io/ko/blaboo/development-journal/" rel="alternate" type="text/html" title="BlaBoo 앱 개발기(RN, React Native)"/><published>2019-01-15T00:00:00+09:00</published><updated>2019-01-20T15:22:37+09:00</updated><id>https://dev-yakuza.github.io/blaboo/development-journal-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/blaboo/development-journal/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;지금까지 RN(React Native)를 공부했지만 앱을 처음부터 끝까지 개발해본 적이 없었습니다. 그래서 RN(React Native)를 활용하고 최대한 빠르게 앱을 처음부터 끝가지 개발해보고자 이번 프로젝트를 진행하였습니다.&lt;/p&gt; &lt;h2 id=&quot;blaboo란&quot;&gt;BlaBoo란?&lt;/h2&gt; &lt;p&gt;BlaBoo(블라부)는 영어의 &lt;code class=&quot;highlighter-rouge&quot;&gt;blah blah(블라 블라)&lt;/code&gt;라는 단어와 아기들이 잘 내는 &lt;code class=&quot;highlighter-rouge&quot;&gt;boo(부)&lt;/code&gt;라는 단어를 합친 의미로, 유아/어린이를 대상으로 하는 단어 공부 앱입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;다운로드: &lt;a href=&quot;https://itunes.apple.com/kr/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;애플 앱 스토어&lt;/a&gt;&lt;/li&gt; &lt;li&gt;다운로드: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;구글 앱 스토어&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;유아/어린이가 그림을 보고 그 그림을 선택하면 음성으로 단어를 읽어주는 아주 간단한 앱입니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/app_concept.png&quot; alt=&quot;유아/어린이용 단어 공부 앱 BlaBoo 개발기&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;왜-만들게-되었나&quot;&gt;왜 만들게 되었나?&lt;/h2&gt; &lt;p&gt;사실 유아/어린이용 단어 공부 앱은 많이 나와있습니다. 이 앱을 만들게 된 주목적은 아래와 같습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;유아/어린이용으로 다국어를 배울 수 있는 단어 앱 만들기.&lt;/li&gt; &lt;li&gt;지금까지 공부한 RN(React Naitve)로 앱을 개발해 정식 배포해 보기.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;외국에 살다보니 아이에게 외국어와 모국어를 가르치고 싶은 마음에 여러 앱을 찾아보았지만 한 앱에서 다국어를 배우기 위한 기능을 제공하는 앱이 별로 없었습니다. 문제도 찾았고 그것을 해결할 기술도 있었으니 한번 만들어 보자는 생각에 만들게 되었습니다.&lt;/p&gt; &lt;h2 id=&quot;앱-기획&quot;&gt;앱 기획&lt;/h2&gt; &lt;p&gt;하지만 앱을 혼자 다 만들려니 시간이 충분하지 않았습니다. 그래서 일단 유아/어린이용으로 사용되는 여러 앱을 밴치마킹하였고, 그에 따른 MVP(Minimum Viable Product: 최소 기능 제품)를 정했습니다. BlaBoo의 MVP(Minimum Viable Production: 최소 기능 제품)은 아래와 같습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;단어의 카테고리: 카테고리를 정의하고 그 안에 해당 단어들을 표시하자(ex&amp;gt; 자동차, 과일, 야채)&lt;/li&gt; &lt;li&gt;단어를 그림/사진으로 표시: 단어를 그림/사진으로 표시하여 유아/어린이에게 흥미를 유발시키자.&lt;/li&gt; &lt;li&gt;그림/사진 선택시 단어의 음성 지원: 그림/사진을 선택하면 단어를 소리내어 읽어주어 유아/어린이가 자연스럽게 그림/사진과 단어를 공부하도록 하자.&lt;/li&gt; &lt;li&gt;다국어 지원: 다국어를 지원하여 한 단어를 여러 국가의 언어로 공부할 수 있게 하자.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;이렇게 MVP(Minimum Viable Production: 최소 기능 제품)를 정의하고 간단한 스케치로 앱의 동선을 기획하였습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/hand_sketch.png&quot; alt=&quot;유아/어린이용 단어 공부 앱 BlaBoo 개발기 - 스케치&quot; /&gt;&lt;/p&gt; &lt;p&gt;스케치 탬플릿은 아래에 사이트에서 다운로드하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://sneakpeekit.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;http://sneakpeekit.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;혼자 앱을 취미로 만들다 보니 기획이 그렇게 거창하지 않네요. 목표, 타겟, 비즈니스 모델… 이런건 넣어두고 대략적인 기능과 대략적인 스케치를 하는 정도만 했습니다. 그래도 나름 가설도 세워보고 할일을 나열하는 등 노력은 했지만 이걸 기획이라 불러야할지 민망하네요.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/plan_trello.png&quot; alt=&quot;유아/어린이용 단어 공부 앱 BlaBoo 개발기 - 기획&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;앱-디자인&quot;&gt;앱 디자인&lt;/h2&gt; &lt;p&gt;위에서 기획한 내용을 바탕으로 기본적인 디자인을 했습니다. 역시 디자인 전문가가 아니므로 디자인이 그렇게 이쁘지 않습니다. 그래도 디자인을 통해 앱의 기본적인 색상이나 컨셉 등을 구체화할 수 있었습니다.&lt;/p&gt; &lt;p&gt;기본 디자인은 &lt;a href=&quot;https://www.sketchapp.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;sketchapp&lt;/a&gt;을 사용하여 간단히 디자인 했고 일러스트는 &lt;a href=&quot;https://www.freepik.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;freepik&lt;/a&gt;이라는 사이트에서 다운로드받았습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/sketch_design.png&quot; alt=&quot;유아/어린이용 단어 공부 앱 BlaBoo 개발기 - 디자인&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;앱-개발&quot;&gt;앱 개발&lt;/h2&gt; &lt;p&gt;개발에는 RN(React Native)를 사용하였습니다. 개발자 한명이 iOS/Android를 동시에 개발할 수 있고 javascript이다보니 진입장벽도 Swift나 Kotlin처럼 높지 않았습니다. BlaBoo는 기본적으로 RN(&lt;code class=&quot;highlighter-rouge&quot;&gt;React Native&lt;/code&gt;)과 타입스크립트(&lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;)를 사용합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native) 설치 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/installation/&quot; target=&quot;_blank&quot;&gt;RN 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)에 typescript 적용하기: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;또한 RN(React Native)의 기본적인 UI는 &lt;code class=&quot;highlighter-rouge&quot;&gt;NativeBase&lt;/code&gt;를 스타일에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;을 사용하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)에 NativeBase 적용하기: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/nativebase/&quot; target=&quot;_blank&quot;&gt;nativebase&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Navtive)에서 styled-components 사용하기: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;RN(React Native)는 기본적으로 네비게이션 시스템이 없습니다. BlaBoo는 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-navigation&lt;/code&gt;을 사용하여 네비게이션 시스템을 구현하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-navigation 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-navigation/&quot; target=&quot;_blank&quot;&gt;react-navigation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;MVP(Minimum Viable Product: 최소 기능 제품)의 기능중 하나인 음성 지원은 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt;를 사용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;tts(Text To Speech)&lt;/code&gt; 기능을 구현하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-tts 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-tts/&quot; target=&quot;_blank&quot;&gt;react-native-tts&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;또한 유저의 단말기 지역 정보를 이용하여 앱과 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt;의 기본 언어를 설정하였습니다. 유저의 단말기 정보를 얻기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-device-info&lt;/code&gt;를 사용하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-device-info 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-device-info/&quot; target=&quot;_blank&quot;&gt;react-native-device-info&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그리고 이미지 선택시 이미지가 움직이는 애니메이션이 있는데 이 애니메이션을 넣기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;을 사용하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-animatable 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-animatable/&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;최종적으로 앱의 광고와 분석을 위해 구글의 파이어베이스(Google Firebase)와 구글 애드몹(Google Admob)을 사용하였습니다. 이를 앱에 구현하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;를 사용하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-firebase admob 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-admob&lt;/a&gt;&lt;/li&gt; &lt;li&gt;react-native-firebase analytics 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-analytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-analytics&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이렇게 정리하다보니 거의 오픈소스를 가져다가 구현한 것 이외에는 한게 별로 없어보이네요. 다들 너무 훌륭한 오픈소스를 만들어 줘서 너무 감사합니다. 훌륭한 오픈소스로 주요 기능을 구현하고 RN(React Native)를 활용하여 재사용 가능한 컴포넌트(Component)를 사용하니 개발은 수월하게 진행할 수 있었습니다. 단지 화면에 표시하기 위한 일러스트와 음성을 위한 단어를 모으고 정리하는데 시간이 더 많이 걸렸습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/resource.png&quot; alt=&quot;유아/어린이용 단어 공부 앱 BlaBoo 개발기 - 리소스 코드&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;앱-등록&quot;&gt;앱 등록&lt;/h2&gt; &lt;p&gt;이렇게 BlaBoo의 MVP(Minimum Viable Product: 최소 기능 제품)가 완성되었습니다. 개발이 끝나면 금방 앱을 등록하고 다운로드를 받을 수 있을 줄 알았는데, 앱 등록 절차도 시간이 많이 걸리는 일이였습니다.&lt;/p&gt; &lt;p&gt;애플의 앱 심사(App Review)가 시간이 많이 걸린다는 사실을 알고 있었기 때문에 일단 iOS 앱 등록을 먼저 하였고, iOS 앱이 등록된 후 안드로이드를 진행하였습니다. 애플의 앱 등록이 2달 넘게 걸렸고 안드로이드 앱 등록은 2일 걸렸습니다.&lt;/p&gt; &lt;p&gt;애플은 역시 여러 이유로 앱 심사 거부(App Review reject)가 많아 기간이 많이 걸려고, 안드로이드는 유아/어린이용으로 앱이지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;Designed for Families program&lt;/code&gt;을 선택하지 않고 등록하여 거부(Reject) 당했습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/google_reject.png&quot; alt=&quot;유아/어린이용 단어 공부 앱 BlaBoo 개발기 - 구글 앱 심사 거부&quot; /&gt;&lt;/p&gt; &lt;p&gt;앱을 등록하기 위해 애플 개발자 프로그램(Apple Developer Program) 등록과 안드로이 개발자 등록(Google Play Developer)이 필요합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;애플 개발자 프로그램 등록 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-enroll-developer-program/&quot; target=&quot;_blank&quot;&gt;iOS 개발자 등록&lt;/a&gt;&lt;/li&gt; &lt;li&gt;안드로이드 개발자(Google Play Developer) 등록: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/&quot; target=&quot;_blank&quot;&gt;안드로이드 개발자 등록&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;또한 앱을 등록할 때 여러 정보가 필요했습니다. 이 정보를 제작하는데도 생각보다 많은 시간이 걸렸습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;iOS 앱 등록 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-app-store/&quot; target=&quot;_blank&quot;&gt;iOS App store 등록&lt;/a&gt;&lt;/li&gt; &lt;li&gt;안드로이드 앱 등록 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-google-play/&quot; target=&quot;_blank&quot;&gt;안드로이드 앱 스토어 등록&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그리고 역시나 무서운 애플의 앱 심사(App Review). 5차례 정도 앱 심사(App Review)가 거부(Reject)되었습니다. 정말 등록하기 싫어지더군요. 결국 최종 거부(Recject) 이유는 앱이 사용자와 적절한 상호 작용을 하지 않아 애플 앱 스토어에는 필요없는 앱이라고 하더군요.&lt;/p&gt; &lt;p&gt;처음엔 열이 받아 기획할 때 벤치마킹한 앱과 비교하여 여기보다 카테고리, 단어량이 많고 저기에는 없는 다국어 기능이 있다 등을 어필했지만, 쉽게 승인해 주지 않았습니다. 오히려 제가 생각하는 다른 앱들이 앱 스토어의 위반된다고 생각되면 신고해달라고…다른 개발자들이 힘들게 만든 앱을 어떻게 신고하겠습니까…그래서 결국 처음 기획과는 달리 엉뚱한 기능이 추가되었습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/add_card_mode.png&quot; alt=&quot;유아/어린이용 단어 공부 앱 BlaBoo 개발기 - 복습 기능&quot; /&gt;&lt;/p&gt; &lt;p&gt;카드 형태로 카테고리에서 공부한 단어들을 복습하는 기능을 추가하였습니다. 20장의 카드가 렌덤으로 표시되고 그 카드를 왼쪽 또는 오른쪽으로 넘겨 복습하는 기능입니다.&lt;/p&gt; &lt;p&gt;처음 기획에 있던 기능도 아니고, 급하게 앱 심사(App Review)를 통과하기 위해 하루만에 디자인하고 하루만에 기능을 만들다 보니 이전 앱 기능에 잘 녹아 들어가지 못했습니다. 아직도 한 앱에 두 앱이 들어가 있는 기분입니다. 그래도 이 기능을 추가하고 무사히 앱 심사(App Review)를 통과할 수 있었습니다.&lt;/p&gt; &lt;p&gt;처음엔 애플의 앱 심사(App Review)가 너무 심하고 화가 났지만, 이 심사가 있기에 iOS의 앱들의 UI/UX가 뛰어나구나 생각이 들었습니다. 또한 애플 앱 심사(App Review)를 거치다 보니 다음 앱을 좀 더 사용자 친화적으로 만들어야겠다는 생각이 들었습니다. 애플 앱 심사자(Apple App Reviewer)님들께 진심으로 감사드립니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;다운로드: &lt;a href=&quot;https://itunes.apple.com/kr/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;애플 앱 스토어&lt;/a&gt;&lt;/li&gt; &lt;li&gt;다운로드: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;구글 앱 스토어&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;앱-개발기를-마치며&quot;&gt;앱 개발기를 마치며&lt;/h2&gt; &lt;p&gt;이런 저런 일들이 있었지만 무사히 첫 앱을 릴리스할 수 있었습니다. 보잘것 없는 앱으로 보실 수 있지만, 이 앱은 유저를 많이 늘리고 광고 수익을 내기 위함보다는 자신이 사용하기 위해, 그리고 지금까지 공부한 RN(React Native)를 활용하여 앱을 최종적으로 등록하는 프로세스를 확인하기 위해 제작하였습니다.&lt;/p&gt; &lt;p&gt;뒤돌아 보면, 개발보다는 디자인, 특히 일러스트를 수집하는데 시간이 많이 걸렸습니다. 개발은 1주일 정도했나…역시 RN(React Native)의 개발 퍼포먼스를 확인할 수 있었습니다. (많은 오픈소스를 만들고 계신 분들께 진심으로 감사드립니다.)&lt;/p&gt; &lt;p&gt;애플의 꼼꼼한 앱 심사(App Review). 그로인해 급하게 앱 컨셉 변경, 하지만 이로인해 유저 친화적 앱을 개발해야 한다는 마음가짐을 갖게 되었습니다. 다시 한번 애플 심사자(App Reviewer)님께 감사드립니다.&lt;/p&gt; &lt;p&gt;BlaBoo에서 검증하고 싶던 무료 리소스로 앱을 개발할 수 있다는 가설은 검증되었습니다. 여러분도 무료 리소스를 활용하여 앱을 개발해 보세요.&lt;/p&gt; &lt;h2 id=&quot;마지막으로&quot;&gt;마지막으로&lt;/h2&gt; &lt;p&gt;역시 &lt;code class=&quot;highlighter-rouge&quot;&gt;TTS(Text To Speech)&lt;/code&gt;는 목소리에 거부감이 있네요. 그리고 잘못 읽어주는 경우도 많았습니다. 한국어로 &lt;code class=&quot;highlighter-rouge&quot;&gt;스파게티&lt;/code&gt;는 제대로 발음하지 못해 &lt;code class=&quot;highlighter-rouge&quot;&gt;파스타&lt;/code&gt;로 변경하였습니다. 혹시 목소리 기부해주실 분 대환영입니다.(&lt;a href=&quot;https://dev-yakuza.github.io/ko/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;일러스트도 무료 일러스트를 사용하다보니 하나의 스타일로 통일되지 않은 감이 있습니다. 역시 일러스트도 기부해주실 분, 대환영입니다.(&lt;a href=&quot;https://dev-yakuza.github.io/ko/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;다국어는 일본어, 영어, 한국어를 기본으로 제공했고 중국과 이탈리아에서 앱 다운로드가 발생하여 중국어와 이탈리아어를 추가하였습니다. 하지만 중국어, 이탈리아어를 할 수 없기 때문에 번역기를 돌렸습니다. 틀릭 중국어, 이탈리아어가 있다면 피드백 부탁드립니다. 또한 다른 언어 번역을 기부해주실 분들도 환영합니다.(&lt;a href=&quot;https://dev-yakuza.github.io/ko/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;ul&gt; &lt;li&gt;다운로드: &lt;a href=&quot;https://itunes.apple.com/kr/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;애플 앱 스토어&lt;/a&gt;&lt;/li&gt; &lt;li&gt;다운로드: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;구글 앱 스토어&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 지금까지 RN(React Native)를 공부했지만 앱을 처음부터 끝까지 개발해본 적이 없었습니다. 그래서 RN(React Native)를 활용하고 최대한 빠르게 앱을 처음부터 끝가지 개발해보고자 이번 프로젝트를 진행하였습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/blaboo/development-journal.png"/></entry><entry xml:lang="ko"><title type="html">안드로이드 앱 스토어 등록</title><link href="https://dev-yakuza.github.io/ko/react-native/android-google-play/" rel="alternate" type="text/html" title="안드로이드 앱 스토어 등록"/><published>2019-01-12T00:00:00+09:00</published><updated>2019-01-15T09:49:44+09:00</updated><id>https://dev-yakuza.github.io/react-native/android-google-play-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/android-google-play/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;RN(React Native)로 개발한 안드로이드 앱(Android App)을 안드로이드 앱 스토어(Google Play)에 등록하려고 합니다. 안드로이드 앱(Android App)을 안드로이드 앱 스토어(Google Play)에 등록하기 위해서는 안드로이드 개발자 등록(구글 플레이 개발자 등록)이 필요합니다. 안드로이드 개발자 등록(구글 플레이 개발자 등록)을 하지 않으신 분은 이전 블로그를 참고하여 등록하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/&quot; target=&quot;_blank&quot;&gt;안드로이드 개발자 등록&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;준비&quot;&gt;준비&lt;/h2&gt; &lt;p&gt;RN(React Native)로 개발한 안드로이드 앱(Android App)을 안드로이드 앱 스토어(Google Play)에 등록하기 위해서는 RN(React Native)를 안드로이드용으로 빌드할 필요가 있습니다. RN(React Native)에 안드로이드 서명키(Android Signing Key)를 등록하고 안드로이드용으로 빌드하는 방법에 대해서는 이전 블로그를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;안드로이드 빌드 및 테스트&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;빌드-파일-사이즈-최적화&quot;&gt;빌드 파일 사이즈 최적화&lt;/h2&gt; &lt;p&gt;이전 블로그인 &lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;안드로이드 빌드 및 테스트&lt;/a&gt;에서 안드로이드용으로 빌드된 파일은 파일 사이즈의 최적화가 되어있지 않습니다. RN(React Native)로 개발한 안드로이드 앱(Android App)을 안드로이드 앱 스토어(Google Play)에 업로드하기 위해서 빌드 파일 사이즈를 최적화할 필요가 있습니다.&lt;/p&gt; &lt;p&gt;RN(React Native) 프로젝트 폴더에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt;을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... defaultConfig { ... // ndk { // abiFilters &quot;armeabi-v7a&quot;, &quot;x86&quot; // } } ... def enableSeparateBuildPerCPUArchitecture = true &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 아래의 명령어를 통해 RN(React Native)를 안드로이드용으로 빌드합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# cd android&lt;/span&gt; ./gradlew assembleRelease &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;빌드된 파일은 아래의 경로에서 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;android/app/build/outputs/apk/release/app-armeabi-v7a-release.apk android/app/build/outputs/apk/release/app-x86-release.apk &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;앱-등록&quot;&gt;앱 등록&lt;/h2&gt; &lt;p&gt;아래의 링크를 선택하여 구글 플레이 콘솔(Google Play Console)로 이동합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;구글 플레이 콘솔(Google Play Console): &lt;a href=&quot;https://play.google.com/apps/publish/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://play.google.com/apps/publish/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;구글 플레이 콘솔(Google Play Console)에 이동하면 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/google-play-console-home.png&quot; alt=&quot;구글 플레이 콘솔 홈&quot; /&gt;&lt;/p&gt; &lt;p&gt;화면 상단에 보이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;PUBLISH AN ANDROID APP ON GOOGLE PLAY&lt;/code&gt; 버튼을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-title.png&quot; alt=&quot;구글 플레이 콘솔 앱 타이틀&quot; /&gt;&lt;/p&gt; &lt;p&gt;안드로이드 앱 스토어(Google Play)에 표시될 이름과 기본 언어를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-info.png&quot; alt=&quot;구글 플레이 콘솔 앱 정보&quot; /&gt;&lt;/p&gt; &lt;p&gt;안드로이드 앱 스토어(Google Play)에 표시될 정보들을 입력합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;제목(title): 50자&lt;/li&gt; &lt;li&gt;요약 설명(short description): 80자&lt;/li&gt; &lt;li&gt;전체 설명(full description): 4000자&lt;/li&gt; &lt;li&gt;앱 이미지(Screenshots)&lt;/li&gt; &lt;li&gt;앱 아이콘(App icon): 512x512(32-bit PNG, alpha), 1024x500(JPG or 24-bit PNG), 180x120(JPG or 24-bit PNG), 1280x720(JPG or 24-bit PNG), 4096x4096(JPG or 24-bit PNG)&lt;/li&gt; &lt;li&gt;프로모션 비디오(Promo Video)&lt;/li&gt; &lt;li&gt;앱 카테고리(Category)&lt;/li&gt; &lt;li&gt;개발자 연락처(Contact details)&lt;/li&gt; &lt;li&gt;개인 정보 정책(Privacy Policy)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;모든 정보 입력이 끝났다면 이제 apk 파일을 등록하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;p&gt;왼쪽 위에 &lt;code class=&quot;highlighter-rouge&quot;&gt;App release&lt;/code&gt; 메뉴를 선택하면 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-register.png&quot; alt=&quot;구글 플레이 앱 등록&quot; /&gt;&lt;/p&gt; &lt;p&gt;화면에서 보이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Production track&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Production&lt;/code&gt; 항목의 &lt;code class=&quot;highlighter-rouge&quot;&gt;MANAGE&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-production.png&quot; alt=&quot;구글 플레이 앱 production 생성&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같은 화면이 보이면 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE RELEASE&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/register-signing-key.png&quot; alt=&quot;구글 플레이 앱 서명키 등록&quot; /&gt;&lt;/p&gt; &lt;p&gt;구글 플레이(Google Play)를 이용하여 앱 서명(App Signing)을 하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;FINISH&lt;/code&gt; 버튼을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/accept-agreement.png&quot; alt=&quot;구글 플레이 약관 동의&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같이 약관이 표시되면 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;ACCEPT&lt;/code&gt; 버튼을 눌러 동의합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_apk.png&quot; alt=&quot;구글 플레이 apk 업로드&quot; /&gt;&lt;/p&gt; &lt;p&gt;위에서 빌드한 RN(React Native)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;apk&lt;/code&gt; 파일을 업로드합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_release_note.png&quot; alt=&quot;구글 플레이 apk 릴리스 노트&quot; /&gt;&lt;/p&gt; &lt;p&gt;앱의 배포 이름(Release Name)과 배포 노트(Relase Note)를 작성하고 오른쪽 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE&lt;/code&gt; 버튼을 누릅니다. 그러면 오른쪽의 &lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt; 버튼이 활성화됩니다. 활성화된 &lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt; 버튼을 누릅니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/not_yet.png&quot; alt=&quot;구글 플레이 등록 불가&quot; /&gt;&lt;/p&gt; &lt;p&gt;앱 등록에 필요한 절차가 끝나지 않았기 때문에 오른쪽 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;START ROLLOUT TO PRODUCTION&lt;/code&gt; 버튼이 활성화되지 않았습니다. 왼쪽 메뉴의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Content rating&lt;/code&gt;을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating.png&quot; alt=&quot;구글 플레이 콘텐츠 등급&quot; /&gt;&lt;/p&gt; &lt;p&gt;콘텐츠 등급(Content Rating)을 설정하는 화면입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE&lt;/code&gt;를 선택합니다&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_insert_info.png&quot; alt=&quot;구글 플레이 콘텐츠 등급 정보 입력&quot; /&gt;&lt;/p&gt; &lt;p&gt;이메일 정보와 앱의 카테고리를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_agreement.png&quot; alt=&quot;구글 플레이 콘텐츠 등급 정보 동의&quot; /&gt;&lt;/p&gt; &lt;p&gt;앱에 콘텐츠 등급을 정하기 위한 정보를 선택합니다. 전부 선택하였다면 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE QUESTIONNAIRE&lt;/code&gt; 버튼을 선택하고 활성화된 &lt;code class=&quot;highlighter-rouge&quot;&gt;CALCULATE RATING&lt;/code&gt;을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_completed.png&quot; alt=&quot;구글 플레이 콘텐츠 등급 정보 선택 완료&quot; /&gt;&lt;/p&gt; &lt;p&gt;입력한 정보에 의해 콘텐츠 등급이 계산되어 나옵니다. 내용을 확인하고 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;APPLYING RATING&lt;/code&gt;을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/calculated_content_rating.png&quot; alt=&quot;구글 플레이 콘텐츠 등급 완료&quot; /&gt;&lt;/p&gt; &lt;p&gt;콘텐츠 등급 입력이 완료되었습니다. 콘텐츠 등급에 영향이 있는 업데이트가 있다면 콘텐츠 등급을 다시 계산하여 등록하셔야합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/content_rating.png&quot; alt=&quot;구글 플레이 콘텐츠 등급&quot; /&gt;&lt;/p&gt; &lt;p&gt;이제 마지막 절차인 가격 설정으로 이동합니다. 왼쪽 메뉴의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Pricing &amp;amp; distribution&lt;/code&gt;을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_price_info.png&quot; alt=&quot;구글 플레이 앱 가격 정보&quot; /&gt;&lt;/p&gt; &lt;p&gt;앱의 가격을 설정하는 화면입니다. 우리는 무료로 앱을 제공할 예정이므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;FREE&lt;/code&gt;를 설정하고 진행합니다. 또한 어린이 대상인지, 앱에 광고가 포함되었는지 등 정보를 입력합니다. 필수 항목을 전부 진행하였다면 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE DRAFT&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;h2 id=&quot;앱-심사-신청&quot;&gt;앱 심사 신청&lt;/h2&gt; &lt;p&gt;드디어 앱 심사(App Review)를 위한 준비가 끝났습니다. 다시 메뉴의 &lt;code class=&quot;highlighter-rouge&quot;&gt;App release&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_review.png&quot; alt=&quot;구글 플레이 앱 심사&quot; /&gt;&lt;/p&gt; &lt;p&gt;위에서 작성한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Production&lt;/code&gt; 항목 옆에 &lt;code class=&quot;highlighter-rouge&quot;&gt;EDIT RELEASE&lt;/code&gt; 버튼을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_review_info.png&quot; alt=&quot;구글 플레이 앱 심사 정보&quot; /&gt;&lt;/p&gt; &lt;p&gt;위에서 작성한 내용이 보입니다. 스크롤하여 하단으로 이동한 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt; 버튼을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/apply_app_review_info.png&quot; alt=&quot;구글 플레이 앱 심사 신청&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같은 화면이 보인다면 스크롤하여 하단으로 이동한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;START ROLLOUT TO PRODUCTION&lt;/code&gt; 버튼을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/register_app.png&quot; alt=&quot;구글 플레이 앱 등록&quot; /&gt;&lt;/p&gt; &lt;p&gt;앱 심사 준비가 끝났다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;CONFIRM&lt;/code&gt; 버튼을 눌러 앱 심사를 신청합니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;안드로이드 앱 스토어(Google Play)에 앱 등록을 위한 모든 절차가 끝났습니다. 앱 심사는 2~3시간 정도 걸리며 앱 심사가 끝나면 등록 신청을 한 앱을 안드로이드 앱 스토어(Google Play)에서 검색 및 다운로드 할 수 있습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 RN(React Native)로 개발한 안드로이드 앱(Android App)을 안드로이드 앱 스토어(Google Play)에 등록하려고 합니다. 안드로이드 앱(Android App)을 안드로이드 앱 스토어(Google Play)에 등록하기 위해서는 안드로이드 개발자 등록(구글 플레이 개발자 등록)이 필요합니다. 안드로이드 개발자 등록(구글 플레이 개발자 등록)을 하지 않으신 분은 이전 블로그를 참고하여 등록하시기 바랍니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/android-google-play.jpg"/></entry><entry xml:lang="ko"><title type="html">안드로이드 개발자 등록</title><link href="https://dev-yakuza.github.io/ko/react-native/android-enroll-google-play-developer/" rel="alternate" type="text/html" title="안드로이드 개발자 등록"/><published>2019-01-11T00:00:00+09:00</published><updated>2019-01-11T17:13:53+09:00</updated><id>https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;RN(React Native)로 개발한 안드로이드 앱(Android App)을 구글 플레이스토어(Google Playstore)에 등록하기 위해 안드로이드 개발자 등록(구글 플레이 개발자 등록)을 하려고 합니다.&lt;/p&gt; &lt;p&gt;애플 개발자 등록(Apple Developer Program)에 관해서는 이전 블로그를 참고해 주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-enroll-developer-program/&quot; target=&quot;_blank&quot;&gt;iOS 개발자 등록&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;준비&quot;&gt;준비&lt;/h2&gt; &lt;p&gt;안드로이드 앱(Android App)을 구글 플레이스토어(Google Playstore)에 등록하기 위해서는 당연하지만 구글 계정(Google Account)가 필요합니다. 혹시 구글 계정(Google Account)가 없는 분은 구글 계정(Google Account)를 생성해 주세요. 또한 안드로이드 개발자(구글 플레이 개발자)는 만 18세 이상이어야 등록이 가능합니다. 이점 참고하시기 바랍니다.&lt;/p&gt; &lt;p&gt;안드로이드 개발자 등록(구글 플레이 개발자 등록)도 iOS 개발자 등록처럼 등록 수수료가 발생합니다. 등록 수수료는 미화 25달러이며, 매년 갱신해야 하는 iOS 개발자 등록과는 달리 한번만 발생합니다. 수수료는 아래의 카드로 결제가 가능합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Mastercard&lt;/li&gt; &lt;li&gt;Visa&lt;/li&gt; &lt;li&gt;American Express&lt;/li&gt; &lt;li&gt;Discover(미국만 해당)&lt;/li&gt; &lt;li&gt;Visa Electron(미국 이외의 지역만 해당)&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;안드로이드-개발자-등록&quot;&gt;안드로이드 개발자 등록&lt;/h2&gt; &lt;p&gt;이제 안드로이드 개발자 등록(구글 플레이 개발자 등록)을 할 준비가 되었습니다. 안드로이드 개발자 등록(구글 플레이 개발자 등록)을 위해 아래에 링크로 이동합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;안드로이드 개발자 등록(구글 플레이 개발자 등록): &lt;a href=&quot;https://play.google.com/apps/publish/signup/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://play.google.com/apps/publish/signup/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;구글 계정(Google Account)로 로그인 한 상태에서 위에 링크를 클릭하면 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/enroll-goole-play-developer.png&quot; alt=&quot;안드로이드 개발자, 구글 플레이 개발자 등록 사이트&quot; /&gt;&lt;/p&gt; &lt;p&gt;스크롤하여 하단으로 이동하여 왼쪽에 &lt;code class=&quot;highlighter-rouge&quot;&gt;개발자 계약에 동의(Accept developer agreement)&lt;/code&gt;이하고 오른쪽 하단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE TO PAYMENT&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/accept-developer-agreement.png&quot; alt=&quot;안드로이드 개발자, 구글 플레이 개발자 등록 동의&quot; /&gt;&lt;/p&gt; &lt;p&gt;그럼 아래와 같이 결제 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/purchase.png&quot; alt=&quot;안드로이드 개발자, 구글 플레이 개발자 수수료 결제&quot; /&gt;&lt;/p&gt; &lt;p&gt;결제 정보를 입력하고 오른쪽 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;BUY&lt;/code&gt; 버튼을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/purchase-completed.png&quot; alt=&quot;안드로이드 개발자, 구글 플레이 개발자 수수료 결제 성공&quot; /&gt;&lt;/p&gt; &lt;p&gt;결제에 성공하면 위와 같은 화면을 볼 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE REGISTRATION&lt;/code&gt; 버튼을 눌러 안드로이드 개발자(구글 플레이 개발자) 등록을 계속 진행합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/developer-info.png&quot; alt=&quot;안드로이드 개발자, 구글 플레이 개발자 정보 입력&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같이 안드로이드 개발자(구글 플레이 개발자) 정보를 입력하는 화면이 나오면 필수 항목을 전부 입력하고 오른쪽 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;COMPLETE REGISTRAION&lt;/code&gt;을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/completed-enroll.png&quot; alt=&quot;안드로이드 개발자, 구글 플레이 개발자 등록 성공&quot; /&gt;&lt;/p&gt; &lt;p&gt;안드로이드 개발자(구글 플레이 개발자) 등록에 성공하였다면 위와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;RN(React Native)로 개발한 안드로이드 앱(Android App)을 구글 플레이스토어(Google Playstore)에 등록하기 위한 안드로이드 개발자 등록(구글 플레이 개발자 등록)을 해보았습니다. 다음 블로그에서는 RN(React Native)로 개발한 안드로이드 앱(Android App)을 실제로 등록해 보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://support.google.com/googleplay/android-developer/answer/6112435&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://support.google.com/googleplay/android-developer/answer/6112435&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 RN(React Native)로 개발한 안드로이드 앱(Android App)을 구글 플레이스토어(Google Playstore)에 등록하기 위해 안드로이드 개발자 등록(구글 플레이 개발자 등록)을 하려고 합니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/android-enroll-google-play-developer.jpg"/></entry><entry xml:lang="ko"><title type="html">jwt:로그아웃</title><link href="https://dev-yakuza.github.io/ko/laravel/jwt-logout/" rel="alternate" type="text/html" title="jwt:로그아웃"/><published>2019-01-05T00:00:00+09:00</published><updated>2019-01-06T16:27:20+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-logout-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-logout/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템에 로그아웃 기능을 추가하는 방법에 대해서 알아보겠습니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입, 로그인, 사용자 정보 얻기, jwt 토큰 갱신 기능에 관해서는 이전 블로그를 참고해주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt 설치 및 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:회원가입&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:로그인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-user-info&quot; target=&quot;_blank&quot;&gt;jwt:사용자 정보&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-refresh-token&quot; target=&quot;_blank&quot;&gt;jwt:토큰 갱신&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;저장소repository&quot;&gt;저장소(Repository)&lt;/h2&gt; &lt;p&gt;우리는 jwt 인증 시스템을 구현한 저장소(Repository)를 만들었습니다. 아래에 링크를 클릭해서 저장소(Repository)를 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;여기서 설명할 내용은 라라독(Laradock)과 앤서블(Ansible)을 이용하여 만든 라라벨(Laravel) 개발 환경에서 작업합니다. 라라독(Laradock)과 앤서블(Ansible)을 이용한 라라벨(Laravel) 개발 환경에 관해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;컨트롤러-수정&quot;&gt;컨트롤러 수정&lt;/h2&gt; &lt;p&gt;라라벨(Laravel) 프로젝트 폴더의 &lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt; 컨트롤러(Controller) 파일을 열고 아래의 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'message'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'logout'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;라우트-수정&quot;&gt;라우트 수정&lt;/h2&gt; &lt;p&gt;로그아웃을 위한 URL을 추가하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt; 파일을 열고 아래의 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;테스트&quot;&gt;테스트&lt;/h2&gt; &lt;p&gt;지금까지 개발한 로그아웃 기능을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;을 통해 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/logout &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;jwt 토큰이 유효하다면 아래와 같이 성공적으로 로그아웃할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-logout/logout.png&quot; alt=&quot;logout&quot; /&gt;&lt;/p&gt; &lt;p&gt;jwt 토큰의 유효기간이 끝났거나, 이전의 jwt 토큰을 사용하면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; 에러의 응답(Response)을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-logout/fail_to_logout.png&quot; alt=&quot;fail to logout&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 라라벨(Laravel)에 jwt 인증 시스템을 추가하여 토큰 기반 인증 시스템을 구현하였습니다. 우리는 이 jwt 인증 시스템을 사용하여 RN(React Native) 앱을 개발할 예정입니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 jwt 인증 시스템에 로그아웃 기능을 추가하는 방법에 대해서 알아보겠습니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입, 로그인, 사용자 정보 얻기, jwt 토큰 갱신 기능에 관해서는 이전 블로그를 참고해주세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-logout.jpg"/></entry><entry xml:lang="ko"><title type="html">jwt:토큰 갱신</title><link href="https://dev-yakuza.github.io/ko/laravel/jwt-refresh-token/" rel="alternate" type="text/html" title="jwt:토큰 갱신"/><published>2019-01-04T00:00:00+09:00</published><updated>2019-01-06T15:44:04+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-refresh-token-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-refresh-token/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템을 통해 로그인후 얻은 jwt 토큰을 갱신(Refresh)하는 방법에 대해서 알아보도록 하겠습니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입, 로그인, 사용자 정보 얻기 기능에 관해서는 이전 블로그를 참고해주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt 설치 및 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:회원가입&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:로그인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-user-info&quot; target=&quot;_blank&quot;&gt;jwt:사용자 정보&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;저장소repository&quot;&gt;저장소(Repository)&lt;/h2&gt; &lt;p&gt;우리는 jwt 인증 시스템을 구현한 저장소(Repository)를 만들었습니다. 아래에 링크를 클릭해서 저장소(Repository)를 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;여기서 설명할 내용은 라라독(Laradock)과 앤서블(Ansible)을 이용하여 만든 라라벨(Laravel) 개발 환경에서 작업합니다. 라라독(Laradock)과 앤서블(Ansible)을 이용한 라라벨(Laravel) 개발 환경에 관해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;컨트롤러-수정&quot;&gt;컨트롤러 수정&lt;/h2&gt; &lt;p&gt;라라벨(Laravel) 프로젝트 폴더의 &lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt; 컨트롤러(Controller) 파일을 열고 아래의 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;라우트-수정&quot;&gt;라우트 수정&lt;/h2&gt; &lt;p&gt;jwt 토큰을 갱신(Refresh)하기 위한 URL을 추가하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt; 파일을 열고 아래의 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;테스트&quot;&gt;테스트&lt;/h2&gt; &lt;p&gt;지금까지 개발한 jwt 토큰 갱신(Refresh) 기능을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;을 통해 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/refresh &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;jwt 토큰이 유효하다면 아래와 같이 jwt 토큰을 갱신(Refresh)하여 새로운 토큰을 발급받을 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-refresh-token/refresh_token.png&quot; alt=&quot;refresh token&quot; /&gt;&lt;/p&gt; &lt;p&gt;jwt 토큰의 유효기간이 끝났거나, 이전의 jwt 토큰을 사용하면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; 에러의 응답(Response)을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-refresh-token/fail_to_refresh_token.png&quot; alt=&quot;fail to refresh token&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 jwt 인증 시스템을 이용하여 로그인후 얻은 jwt 토큰을 갱신(Refresh)하는 방법에 대해서 알아보았습니다. 다음 블로그에서는 jwt 인증 시스템의 마지막 기능인 로그아웃 기능을 추가하는 방법에 대해서 알아보겠습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 jwt 인증 시스템을 통해 로그인후 얻은 jwt 토큰을 갱신(Refresh)하는 방법에 대해서 알아보도록 하겠습니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입, 로그인, 사용자 정보 얻기 기능에 관해서는 이전 블로그를 참고해주세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-refresh-token.jpg"/></entry><entry xml:lang="ko"><title type="html">jwt:사용자 정보</title><link href="https://dev-yakuza.github.io/ko/laravel/jwt-user-info/" rel="alternate" type="text/html" title="jwt:사용자 정보"/><published>2018-12-28T00:00:00+09:00</published><updated>2019-01-06T15:44:04+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-user-info-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-user-info/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템을 통해 로그인한 사용자의 정보를 얻는 방법에 대해서 알아보려고 합니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입, 로그인 구현에 관해서는 이전 블로그를 참고해주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt 설치 및 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:회원가입&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:로그인&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;저장소repository&quot;&gt;저장소(Repository)&lt;/h2&gt; &lt;p&gt;우리는 jwt 인증 시스템을 구현한 저장소(Repository)를 만들었습니다. 아래에 링크를 클릭해서 저장소(Repository)를 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;여기서 설명할 내용은 라라독(Laradock)과 앤서블(Ansible)을 이용하여 만든 라라벨(Laravel) 개발 환경에서 작업합니다. 라라독(Laradock)과 앤서블(Ansible)을 이용한 라라벨(Laravel) 개발 환경에 관해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;컨트롤러-수정&quot;&gt;컨트롤러 수정&lt;/h2&gt; &lt;p&gt;라라벨(Laravel) 프로젝트 폴더의 &lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt; 파일을 열고 아래의 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;클라이언트(Client, 브라우저)의 요청(Request)으로 로그인한 유저의 정보를 얻어 응답(Response)하는 함수입니다.&lt;/p&gt; &lt;h2 id=&quot;라우트-수정&quot;&gt;라우트 수정&lt;/h2&gt; &lt;p&gt;컨트롤러(Controller)에 추가한 함수를 URL과 연결하기 위해 라우트(Route)를 수정합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt; 파일을 열고 아래의 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'message'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;사용자 정보를 얻기 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 라우트(Route)는 미들웨어(Middleware)로 &lt;code class=&quot;highlighter-rouge&quot;&gt;auth:api&lt;/code&gt;를 사용합니다. 이 미들웨어(Middleware)에 의해 로그인한 사용자와 로그인하지 않은 사용자가 판단되며 로그인한 사용자만 사용자 정보를 얻을 수 있습니다. 로그인하지 않은 사용자는 &lt;code class=&quot;highlighter-rouge&quot;&gt;unauthorized&lt;/code&gt; 라우트(Route)로 리다이렉트(Redirect)를 시키고 그에 따라 &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt;를 응답(Response)할 예정입니다.&lt;/p&gt; &lt;h2 id=&quot;리다이렉트&quot;&gt;리다이렉트&lt;/h2&gt; &lt;p&gt;라라벨(Laravel)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Auth&lt;/code&gt; 미들웨어(Middleware)는 기본적으로 리다이렉트(Redirect) 기능을 가지고 있습니다. 우리는 여기에 &lt;code class=&quot;highlighter-rouge&quot;&gt;api&lt;/code&gt;용 리다이렉트(Redirect)를 설정하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; 에러를 응답(Response)하도록 설정하려 합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;app/Http/Middleware/Authenticate.php&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;redirectTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expectsJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api/*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;테스트&quot;&gt;테스트&lt;/h2&gt; &lt;p&gt;지금까지 개발한 사용자 정보 보기 기능을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;을 통해 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/user &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;jwt 토큰이 유효하다면 아래와 같이 사용자의 정보를 얻을 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-user-info/get_user_info.png&quot; alt=&quot;get user info&quot; /&gt;&lt;/p&gt; &lt;p&gt;jwt 토큰의 유효기간이 끝났거나, 로그인하지 않은 사용자가 정보를 요청(Request)하면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; 에러의 응답(Response)을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-user-info/fail_to_get_user_info.png&quot; alt=&quot;fail to get user info&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 jwt 인증 시스템을 이용하여 로그인한 사용자의 정보를 얻는 api를 개발하였습니다. 다음 블로그에서는 로그인 후 api를 통해 얻은 jwt 토큰을 갱신(Refresh)하는 기능을 추가하도록 하겠습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 jwt 인증 시스템을 통해 로그인한 사용자의 정보를 얻는 방법에 대해서 알아보려고 합니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입, 로그인 구현에 관해서는 이전 블로그를 참고해주세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-user-info.jpg"/></entry><entry xml:lang="ko"><title type="html">jwt:로그인</title><link href="https://dev-yakuza.github.io/ko/laravel/jwt-signin/" rel="alternate" type="text/html" title="jwt:로그인"/><published>2018-12-25T00:00:00+09:00</published><updated>2019-01-06T15:44:04+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-signin-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-signin/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템을 통해 로그인 절차를 구현해 보려고합니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입 구현에 관해서는 이전 블로그를 참고해주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt 설치 및 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:회원가입&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;저장소repository&quot;&gt;저장소(Repository)&lt;/h2&gt; &lt;p&gt;우리는 jwt 인증 시스템을 구현한 저장소(Repository)를 만들었습니다. 아래에 링크를 클릭해서 저장소(Repository)를 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;여기서 설명할 내용은 라라독(Laradock)과 앤서블(Ansible)을 이용하여 만든 라라벨(Laravel) 개발 환경에서 작업합니다. 라라독(Laradock)과 앤서블(Ansible)을 이용한 라라벨(Laravel) 개발 환경에 관해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;모델-수정&quot;&gt;모델 수정&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템의 인증에 사용되는 모델(Model)을 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Foundation\Auth\User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Authenticatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tymon\JWTAuth\Contracts\JWTSubject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Authenticatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JWTSubject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라라벨(Laravle)의 인증 기능을 사용하기 위해 모델(Model)을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Authenticatable&lt;/code&gt;에서 상속받았습니다. 또한 jwt 미들웨어(Middleware)의 인터페이스를 &lt;code class=&quot;highlighter-rouge&quot;&gt;JWTSubject&lt;/code&gt;를 통해 구현합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 함수는 jwt 미들웨어(Middleware)의 인터페이스를 구현한 부분입니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 부분은 jwt의 토큰을 습득하기 위한 함수입니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 함수를 설명하기 위해 jwt 토큰을 잠시 설명하겠습니다. jwt는 크게 &lt;code class=&quot;highlighter-rouge&quot;&gt;헤더(header).내용(payload).서명(signature)&lt;/code&gt;으로 구성되어 있습니다. 그중 &lt;code class=&quot;highlighter-rouge&quot;&gt;내용(Payload)&lt;/code&gt;에 사용될 정보의 일부를 &lt;code class=&quot;highlighter-rouge&quot;&gt;Claim&lt;/code&gt;이라고 하며, &lt;code class=&quot;highlighter-rouge&quot;&gt;key-value&lt;/code&gt; 형식으로 구성되어있습니다. jwt는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;내용(Payload)&lt;/code&gt;에 아래와 같은 정보(&lt;code class=&quot;highlighter-rouge&quot;&gt;Claim&lt;/code&gt;)를 가지고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;iss(Issuer): 토큰 발급자&lt;/li&gt; &lt;li&gt;sub(Subject): 토큰 제목(기본값은 user id)&lt;/li&gt; &lt;li&gt;iat(Issued At): 토큰 발행일(unix timestamp)&lt;/li&gt; &lt;li&gt;exp(Expiry): 토큰의 만료시간&lt;/li&gt; &lt;li&gt;nbf(Not Before): 토큰을 사용할 수 있는 시작 시간&lt;/li&gt; &lt;li&gt;jti(JWT Id): JWT의 고유 식별자. 주로 중복적인 처리를 방지하기 위하여 사용.&lt;/li&gt; &lt;li&gt;prv: 사용자 공급자 클래스(User Provider class)의 해쉬값. 다중 guard를 사용하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;tymondesigns/jwt-auth&lt;/code&gt;에 추가한 특별한 코드.(&lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/pull/1167&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;자세한 설명&lt;/a&gt;)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이 정보 이외에 추가적으로 jwt토큰에 정보를 추가하고 싶다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;getJWTCustomClaims()&lt;/code&gt; 함수에 반환값(Return value)을 수정하면 됩니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'firstname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lastname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lastname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;guard-수정&quot;&gt;guard 수정&lt;/h2&gt; &lt;p&gt;라라벨(Laravel)의 인증을 담당하고 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;config/auth.php&lt;/code&gt; 파일의 &lt;code class=&quot;highlighter-rouge&quot;&gt;guard&lt;/code&gt;를 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;'guards'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'web'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'session'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'provider'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'jwt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'provider'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;컨트롤러-수정&quot;&gt;컨트롤러 수정&lt;/h2&gt; &lt;p&gt;이전 블로그에서 생성한 &lt;code class=&quot;highlighter-rouge&quot;&gt;app/Http/Controllers/JWTAuthController.php&lt;/code&gt; 컨트롤러에 로그인 함수를 추가합니다&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'token_type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bearer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expires_in'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;우선 요청(Request)의 입력 데이터를 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 사용자의 &lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;로 로그인 시킵니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;로그인에 성공하면 요청(Request)에 대한 jwt 토큰을 반환(Response)합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'token_type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bearer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expires_in'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;라우트-연결&quot;&gt;라우트 연결&lt;/h2&gt; &lt;p&gt;컨트롤러(Controller)에서 생성한 로그인 함수를 &lt;code class=&quot;highlighter-rouge&quot;&gt;routes/api.php&lt;/code&gt;에서 URL과 연결합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;테스트&quot;&gt;테스트&lt;/h2&gt; &lt;p&gt;이제 지금까지 만든 jwt 인증 시스템의 로그인 기능을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;을 통해 확인합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost/api/login&lt;/code&gt; URL에 &lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;를 입력하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt;로 요청(Request)을 보내면 아래와 같은 결과를 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signin/login.png&quot; alt=&quot;postman login api test&quot; /&gt;&lt;/p&gt; &lt;p&gt;응답(Response)으로 받은 &lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt;키를 &lt;a href=&quot;https://jwt.io/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://jwt.io/&lt;/a&gt;에서 확인해보면 아래와 같은 결과를 얻을 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signin/check_access_key.png&quot; alt=&quot;check access_key&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 jwt 인증 시스템을 이용하여 로그인 기능을 구현해보았습니다. 다음 블로그에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;access token&lt;/code&gt;을 이용한 사용자 정보를 얻는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;JSON Web Token (JWT): &lt;a href=&quot;https://tools.ietf.org/html/rfc7519#section-4.1&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://tools.ietf.org/html/rfc7519#section-4.1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;jwt-auth prv: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/issues/1344&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth/issues/1344&lt;/a&gt;&lt;/li&gt; &lt;li&gt;jwt-auth Creating Tokens: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/wiki/Creating-Tokens&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth/wiki/Creating-Tokens&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 jwt 인증 시스템을 통해 로그인 절차를 구현해 보려고합니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입 구현에 관해서는 이전 블로그를 참고해주세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-signin.png"/></entry><entry xml:lang="ko"><title type="html">jwt:회원가입</title><link href="https://dev-yakuza.github.io/ko/laravel/jwt-signup/" rel="alternate" type="text/html" title="jwt:회원가입"/><published>2018-12-22T00:00:00+09:00</published><updated>2019-01-05T15:22:47+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-siginup-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-signup/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;토큰 기반 인증 시스템인 jwt(Json Web Token)을 사용하여 회원가입 기능을 구현하려고 합니다. 이 블로그에서는 jwt 토큰 시스템을 &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;tymon/jwt-auth&lt;/a&gt; 미들웨어(Middleware)로 사용하여 라라벨(Laravel)에 적용하였습니다. 라라벨(Laravel) 프로젝트에 jwt 미들웨어(Middleware)인 &lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;을 설치하고 설정하는 방법에 대해서는 이전 블로그를 참고해 주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt 설치 및 설정&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;저장소repository&quot;&gt;저장소(Repository)&lt;/h2&gt; &lt;p&gt;우리는 jwt 인증 시스템을 구현한 저장소(Repository)를 만들었습니다. 아래에 링크를 클릭해서 저장소(Repository)를 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;여기서 설명할 내용은 라라독(Laradock)과 앤서블(Ansible)을 이용하여 만든 라라벨(Laravel) 개발 환경에서 작업합니다. 라라독(Laradock)과 앤서블(Ansible)을 이용한 라라벨(Laravel) 개발 환경에 관해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;데이터베이스-연결&quot;&gt;데이터베이스 연결&lt;/h2&gt; &lt;p&gt;지금부터 구현할 회원가입 기능은 회원의 정보를 기록할 데이터베이스(Database)가 필요합니다. 라라벨(Laravel)과 데이터베이스를 연결하는 방법에 대해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;테이블-생성&quot;&gt;테이블 생성&lt;/h2&gt; &lt;p&gt;라라벨(Laravel)은 기본적으로 사용자에 관한 마이그레이션(Migration - DB 테이블을 생성하기 위한 파일)과 모델(Model)를 제공합니다. 따라서 아래에 명령어를 사용하여 라라벨(Laravel)이 제공하는 기본 사용자 테이블을 사용할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan migrate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;컨트롤러-생성&quot;&gt;컨트롤러 생성&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템을 구현할 컨트롤러(Controller)를 아래와 같이 artisan 명령어로 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan make:controller JWTAuthController &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;생성된 &lt;code class=&quot;highlighter-rouge&quot;&gt;app/http/Controllers/JWTAuthController.php&lt;/code&gt;를 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Support\Facades\Validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JWTAuthController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|max:100'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255|unique:users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255|confirmed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password_confirmation'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bcrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;수정한 컨트롤러(Controller)를 자세히 살펴보겠습니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|max:100'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255|unique:users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255|confirmed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password_confirmation'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;클라이언트(Client, 브라우저)에서 들어온 요청(&lt;code class=&quot;highlighter-rouge&quot;&gt;$request&lt;/code&gt;)을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Validator&lt;/code&gt;를 이용하여 값을 검증합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에서 요청(Request)을 검증하여 실패한 경우, 실패 메세지와 함께 요청(Requst)에 대한 응답(Response)을 클라이언트(Client, 브라우저)에 보냅니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bcrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;클라이언트(Client, 브라우저)에서 온 요청(Request)의 검증이 성공한 경우, 새로운 유저를 생성하여 데이터베이스에 저장합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이때, 모델(Model)에서 설정한 &lt;code class=&quot;highlighter-rouge&quot;&gt;fillable&lt;/code&gt; 기능을 사용하여 클라이언트(Client, 브라우저)가 보낸 요청(Request)중 필요한 내용으로 데이터를 채웁니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;데이터를 성공적으로 생성한 경우 해당 데이터와 함께 클라이언트(Client, 브라우저)의 요청(Request)에 대한 응답(Response)를 보냅니다.&lt;/p&gt; &lt;h2 id=&quot;라우트-연결&quot;&gt;라우트 연결&lt;/h2&gt; &lt;p&gt;지금까지 생성한 컨트롤러(Controller)를 라우트 설정을 통해 URL을 연결시킵니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;routes/api.php&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라라벨(Laravel)에 &lt;code class=&quot;highlighter-rouge&quot;&gt;register&lt;/code&gt;라는 URL에 &lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt; 요청(Request)이 오면 &lt;code class=&quot;highlighter-rouge&quot;&gt;JWTAuthController&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;register&lt;/code&gt;라는 함수를 호출하도록 연결하였습니다.&lt;/p&gt; &lt;h2 id=&quot;테스트&quot;&gt;테스트&lt;/h2&gt; &lt;p&gt;우리는 API 테스트를 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;을 사용합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;이 없는 경우 아래에 링크를 눌러 설치해 주세요. 테스트는 Postman이 아니라 &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt;을 사용하셔도 됩니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Postman: &lt;a href=&quot;https://www.getpostman.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;을 열고 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost/api/register&lt;/code&gt;의 URL로 &lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt; 요청(Request)을 보냅니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signup/register_api_test.png&quot; alt=&quot;postman register api test&quot; /&gt;&lt;/p&gt; &lt;p&gt;데이터가 성공적으로 등록이 되어 우리가 설정한 형식으로 응답(Response)이 오는 것을 확인할 수 있습니다. 실패한 경우 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signup/register_api_test_fail.png&quot; alt=&quot;postman register api test fail&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;지금까지 토큰 기반 인증 시스템인 jwt 인증 시스템을 사용하여 회원가입 부분을 개발하였습니다. 다음 블로그에서는 jwt 인증 시스템을 이용하여 로그인 절차를 처리하는 부분에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;tymon/jwt-auth: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Postman: &lt;a href=&quot;https://www.getpostman.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 토큰 기반 인증 시스템인 jwt(Json Web Token)을 사용하여 회원가입 기능을 구현하려고 합니다. 이 블로그에서는 jwt 토큰 시스템을 tymon/jwt-auth 미들웨어(Middleware)로 사용하여 라라벨(Laravel)에 적용하였습니다. 라라벨(Laravel) 프로젝트에 jwt 미들웨어(Middleware)인 tymon/jwt-auth을 설치하고 설정하는 방법에 대해서는 이전 블로그를 참고해 주세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-signup.jpg"/></entry><entry xml:lang="ko"><title type="html">react-native-animatable</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-animatable/" rel="alternate" type="text/html" title="react-native-animatable"/><published>2018-12-19T00:00:00+09:00</published><updated>2018-12-19T14:36:13+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-animatable-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-animatable/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;기본적으로 많이 사용되는 애니메이션을 모아둔 &lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt; 라이브러리를 사용하여 애니메이션을 구현하는 방법에 대해서 설명합니다.&lt;/p&gt; &lt;p&gt;이 블로그에서는 RN(react native)에 &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;가 적용된 프로젝트를 가지고 설명합니다. RN(react native)에 &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;를 적용하는 방법에 대해서는 이전 블로그를 확인해 주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;라이브러리-설치&quot;&gt;라이브러리 설치&lt;/h2&gt; &lt;p&gt;react-native-animatable 라이브러리를 사용하기 위해 아래에 명령어로 라이브러리를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install react-native-animatable &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;기본-사용법&quot;&gt;기본 사용법&lt;/h2&gt; &lt;p&gt;아래와 같이 애니메이션을 추가하고 싶은 부분에 소스를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;zoomInUp&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Zoom&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Scotty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Animatable.Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;이벤트를-통한-사용법&quot;&gt;이벤트를 통한 사용법&lt;/h2&gt; &lt;p&gt;RN(react native)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt;를 사용하여 사용자 이벤트가 발생할 때, 애니메이션을 진행할 수 있게 만들 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TouchableWithoutFeedback&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bounce&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Animatable.View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/TouchableWithoutFeedback&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onPress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bounce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;styled-components&quot;&gt;styled-components&lt;/h2&gt; &lt;p&gt;styled-components로 만든 컴포넌트(component)에 애니메이션을 적용하는 방법입니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'styled-components/native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyledImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createAnimatableComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StyledImage&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bounceIn&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useNativeDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;사용-가능한-애니메이션&quot;&gt;사용 가능한 애니메이션&lt;/h2&gt; &lt;p&gt;사용 가능한 애니메이션은 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;의 공식 저장소(Repository)에서 예제와 함께 확인할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/oblador/react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;아래는 사용 가능한 애니메이션 리스트입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;bounce&lt;/li&gt; &lt;li&gt;flash&lt;/li&gt; &lt;li&gt;jello&lt;/li&gt; &lt;li&gt;pulse&lt;/li&gt; &lt;li&gt;rotate&lt;/li&gt; &lt;li&gt;rubberBand&lt;/li&gt; &lt;li&gt;shake&lt;/li&gt; &lt;li&gt;swing&lt;/li&gt; &lt;li&gt;tada&lt;/li&gt; &lt;li&gt;wobble&lt;/li&gt; &lt;li&gt;bounceIn&lt;/li&gt; &lt;li&gt;bounceInDown&lt;/li&gt; &lt;li&gt;bounceInUp&lt;/li&gt; &lt;li&gt;bounceInLeft&lt;/li&gt; &lt;li&gt;bounceInRight&lt;/li&gt; &lt;li&gt;bounceOut&lt;/li&gt; &lt;li&gt;bounceOutDown&lt;/li&gt; &lt;li&gt;bounceOutUp&lt;/li&gt; &lt;li&gt;bounceOutLeft&lt;/li&gt; &lt;li&gt;bounceOutRight&lt;/li&gt; &lt;li&gt;fadeIn&lt;/li&gt; &lt;li&gt;fadeInDown&lt;/li&gt; &lt;li&gt;fadeInDownBig&lt;/li&gt; &lt;li&gt;fadeInUp&lt;/li&gt; &lt;li&gt;fadeInUpBig&lt;/li&gt; &lt;li&gt;fadeInLeft&lt;/li&gt; &lt;li&gt;fadeInLeftBig&lt;/li&gt; &lt;li&gt;fadeInRight&lt;/li&gt; &lt;li&gt;fadeInRightBig&lt;/li&gt; &lt;li&gt;fadeOut&lt;/li&gt; &lt;li&gt;fadeOutDown&lt;/li&gt; &lt;li&gt;fadeOutDownBig&lt;/li&gt; &lt;li&gt;fadeOutUp&lt;/li&gt; &lt;li&gt;fadeOutUpBig&lt;/li&gt; &lt;li&gt;fadeOutLeft&lt;/li&gt; &lt;li&gt;fadeOutLeftBig&lt;/li&gt; &lt;li&gt;fadeOutRight&lt;/li&gt; &lt;li&gt;fadeOutRightBig&lt;/li&gt; &lt;li&gt;flipInX&lt;/li&gt; &lt;li&gt;flipInY&lt;/li&gt; &lt;li&gt;flipOutX&lt;/li&gt; &lt;li&gt;flipOutY&lt;/li&gt; &lt;li&gt;lightSpeedIn&lt;/li&gt; &lt;li&gt;lightSpeedOut&lt;/li&gt; &lt;li&gt;slideInDown&lt;/li&gt; &lt;li&gt;slideInUp&lt;/li&gt; &lt;li&gt;slideInLeft&lt;/li&gt; &lt;li&gt;slideInRight&lt;/li&gt; &lt;li&gt;slideOutDown&lt;/li&gt; &lt;li&gt;slideOutUp&lt;/li&gt; &lt;li&gt;slideOutLeft&lt;/li&gt; &lt;li&gt;slideOutRight&lt;/li&gt; &lt;li&gt;zoomIn&lt;/li&gt; &lt;li&gt;zoomInDown&lt;/li&gt; &lt;li&gt;zoomInUp&lt;/li&gt; &lt;li&gt;zoomInLeft&lt;/li&gt; &lt;li&gt;zoomInRight&lt;/li&gt; &lt;li&gt;zoomOut&lt;/li&gt; &lt;li&gt;zoomOutDown&lt;/li&gt; &lt;li&gt;zoomOutUp&lt;/li&gt; &lt;li&gt;zoomOutLeft&lt;/li&gt; &lt;li&gt;zoomOutRight&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;간단한 애니메이션을 빠르게 도입하고 싶을 때, &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt; 라이브러리를 사용하는 것을 추천합니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/oblador/react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 기본적으로 많이 사용되는 애니메이션을 모아둔 react-native-animatable 라이브러리를 사용하여 애니메이션을 구현하는 방법에 대해서 설명합니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-animatable.jpg"/></entry></feed>