<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dev-yakuza.github.io/ko/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/ko/" rel="alternate" type="text/html"/><updated>2019-01-06T15:40:41+09:00</updated><id>https://dev-yakuza.github.io/</id><title type="html">Dreams the art through programming</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ko"><title type="html">jwt:토큰 갱신</title><link href="https://dev-yakuza.github.io/ko/laravel/jwt-refresh-token/" rel="alternate" type="text/html" title="jwt:토큰 갱신"/><published>2019-01-04T00:00:00+09:00</published><updated>2019-01-05T15:22:47+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-refresh-token-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-refresh-token/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템을 통해 로그인후 얻은 jwt 토큰을 갱신(Refresh)하는 방법에 대해서 알아보도록 하겠습니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입, 로그인, 사용자 정보 얻기 기능에 관해서는 이전 블로그를 참고해주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt 설치 및 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:회원가입&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:로그인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-user-info&quot; target=&quot;_blank&quot;&gt;jwt:사용자 정보&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;저장소repository&quot;&gt;저장소(Repository)&lt;/h2&gt; &lt;p&gt;우리는 jwt 인증 시스템을 구현한 저장소(Repository)를 만들었습니다. 아래에 링크를 클릭해서 저장소(Repository)를 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;여기서 설명할 내용은 라라독(Laradock)과 앤서블(Ansible)을 이용하여 만든 라라벨(Laravel) 개발 환경에서 작업합니다. 라라독(Laradock)과 앤서블(Ansible)을 이용한 라라벨(Laravel) 개발 환경에 관해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;컨트롤러-수정&quot;&gt;컨트롤러 수정&lt;/h2&gt; &lt;p&gt;라라벨(Laravel) 프로젝트 폴더의 &lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt; 컨트롤러(Controller) 파일을 열고 아래의 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;라우트-수정&quot;&gt;라우트 수정&lt;/h2&gt; &lt;p&gt;jwt 토큰을 갱신(Refresh)하기 위한 URL을 추가하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt; 파일을 열고 아래의 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;테스트&quot;&gt;테스트&lt;/h2&gt; &lt;p&gt;지금까지 개발한 jwt 토큰 갱신(Refresh) 기능을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;을 통해 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/refresh &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;jwt 토큰이 유효하다면 아래와 같이 jwt 토큰을 갱신(Refresh)하여 새로운 토큰을 발급받을 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-refresh-token/refresh_token.png&quot; alt=&quot;refresh token&quot; /&gt;&lt;/p&gt; &lt;p&gt;jwt 토큰의 유효기간이 끝났거나, 이전의 jwt 토큰을 사용하면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; 에러의 응답(Response)을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-refresh-token/fail_to_refresh_token.png&quot; alt=&quot;fail to refresh token&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 jwt 인증 시스템을 이용하여 로그인후 얻은 jwt 토큰을 갱신(Refresh)하는 방법에 대해서 알아보았습니다. 다음 블로그에서는 jwt 인증 시스템의 마지막 기능인 로그아웃 기능을 추가하는 방법에 대해서 알아보겠습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 jwt 인증 시스템을 통해 로그인후 얻은 jwt 토큰을 갱신(Refresh)하는 방법에 대해서 알아보도록 하겠습니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입, 로그인, 사용자 정보 얻기 기능에 관해서는 이전 블로그를 참고해주세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-refresh-token.jpg"/></entry><entry xml:lang="ko"><title type="html">jwt:사용자 정보</title><link href="https://dev-yakuza.github.io/ko/laravel/jwt-user-info/" rel="alternate" type="text/html" title="jwt:사용자 정보"/><published>2018-12-28T00:00:00+09:00</published><updated>2019-01-06T14:52:36+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-user-info-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-user-info/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템을 통해 로그인한 사용자의 정보를 얻는 방법에 대해서 알아보려고 합니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입, 로그인 구현에 관해서는 이전 블로그를 참고해주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt 설치 및 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:회원가입&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:로그인&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;저장소repository&quot;&gt;저장소(Repository)&lt;/h2&gt; &lt;p&gt;우리는 jwt 인증 시스템을 구현한 저장소(Repository)를 만들었습니다. 아래에 링크를 클릭해서 저장소(Repository)를 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;여기서 설명할 내용은 라라독(Laradock)과 앤서블(Ansible)을 이용하여 만든 라라벨(Laravel) 개발 환경에서 작업합니다. 라라독(Laradock)과 앤서블(Ansible)을 이용한 라라벨(Laravel) 개발 환경에 관해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;컨트롤러-수정&quot;&gt;컨트롤러 수정&lt;/h2&gt; &lt;p&gt;라라벨(Laravel) 프로젝트 폴더의 &lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt; 파일을 열고 아래의 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;클라이언트(Client, 브라우저)의 요청(Request)으로 로그인한 유저의 정보를 얻어 응답(Response)하는 함수입니다.&lt;/p&gt; &lt;h2 id=&quot;라우트-수정&quot;&gt;라우트 수정&lt;/h2&gt; &lt;p&gt;컨트롤러(Controller)에 추가한 함수를 URL과 연결하기 위해 라우트(Route)를 수정합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt; 파일을 열고 아래의 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'message'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;사용자 정보를 얻기 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 라우트(Route)는 미들웨어(Middleware)로 &lt;code class=&quot;highlighter-rouge&quot;&gt;auth:api&lt;/code&gt;를 사용합니다. 이 미들웨어(Middleware)에 의해 로그인한 사용자와 로그인하지 않은 사용자가 판단되며 로그인한 사용자만 사용자 정보를 얻을 수 있습니다. 로그인하지 않은 사용자는 &lt;code class=&quot;highlighter-rouge&quot;&gt;unauthorized&lt;/code&gt; 라우트(Route)로 리다이렉트(Redirect)를 시키고 그에 따라 &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt;를 응답(Response)할 예정입니다.&lt;/p&gt; &lt;h2 id=&quot;리다이렉트&quot;&gt;리다이렉트&lt;/h2&gt; &lt;p&gt;라라벨(Laravel)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Auth&lt;/code&gt; 미들웨어(Middleware)는 기본적으로 리다이렉트(Redirect) 기능을 가지고 있습니다. 우리는 여기에 &lt;code class=&quot;highlighter-rouge&quot;&gt;api&lt;/code&gt;용 리다이렉트(Redirect)를 설정하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; 에러를 응답(Response)하도록 설정하려 합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;app/Http/Middleware/Authenticate.php&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;redirectTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expectsJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api/*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;테스트&quot;&gt;테스트&lt;/h2&gt; &lt;p&gt;지금까지 개발한 사용자 정보 보기 기능을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;을 통해 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/user &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;jwt 토큰이 유효하다면 아래와 같이 사용자의 정보를 얻을 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-user-info/get_user_info.png&quot; alt=&quot;get user info&quot; /&gt;&lt;/p&gt; &lt;p&gt;jwt 토큰의 유효기간이 끝났거나, 로그인하지 않은 사용자가 정보를 요청(Request)하면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; 에러의 응답(Response)을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-user-info/fail_to_get_user_info.png&quot; alt=&quot;fail to get user info&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 jwt 인증 시스템을 이용하여 로그인한 사용자의 정보를 얻는 api를 개발하였습니다. 다음 블로그에서는 로그인 후 api를 통해 얻은 jwt 토큰을 갱신(Refresh)하는 기능을 추가하도록 하겠습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 jwt 인증 시스템을 통해 로그인한 사용자의 정보를 얻는 방법에 대해서 알아보려고 합니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입, 로그인 구현에 관해서는 이전 블로그를 참고해주세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-user-info.jpg"/></entry><entry xml:lang="ko"><title type="html">jwt:로그인</title><link href="https://dev-yakuza.github.io/ko/laravel/jwt-signin/" rel="alternate" type="text/html" title="jwt:로그인"/><published>2018-12-25T00:00:00+09:00</published><updated>2019-01-05T17:30:18+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-signin-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-signin/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템을 통해 로그인 절차를 구현해 보려고합니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입 구현에 관해서는 이전 블로그를 참고해주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt 설치 및 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:회원가입&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;저장소repository&quot;&gt;저장소(Repository)&lt;/h2&gt; &lt;p&gt;우리는 jwt 인증 시스템을 구현한 저장소(Repository)를 만들었습니다. 아래에 링크를 클릭해서 저장소(Repository)를 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;여기서 설명할 내용은 라라독(Laradock)과 앤서블(Ansible)을 이용하여 만든 라라벨(Laravel) 개발 환경에서 작업합니다. 라라독(Laradock)과 앤서블(Ansible)을 이용한 라라벨(Laravel) 개발 환경에 관해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;모델-수정&quot;&gt;모델 수정&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템의 인증에 사용되는 모델(Model)을 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Foundation\Auth\User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Authenticatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tymon\JWTAuth\Contracts\JWTSubject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Authenticatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JWTSubject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라라벨(Laravle)의 인증 기능을 사용하기 위해 모델(Model)을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Authenticatable&lt;/code&gt;에서 상속받았습니다. 또한 jwt 미들웨어(Middleware)의 인터페이스를 &lt;code class=&quot;highlighter-rouge&quot;&gt;JWTSubject&lt;/code&gt;를 통해 구현합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 함수는 jwt 미들웨어(Middleware)의 인터페이스를 구현한 부분입니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 부분은 jwt의 토큰을 습득하기 위한 함수입니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 함수를 설명하기 위해 jwt 토큰을 잠시 설명하겠습니다. jwt는 크게 &lt;code class=&quot;highlighter-rouge&quot;&gt;헤더(header).내용(payload).서명(signature)&lt;/code&gt;으로 구성되어 있습니다. 그중 &lt;code class=&quot;highlighter-rouge&quot;&gt;내용(Payload)&lt;/code&gt;에 사용될 정보의 일부를 &lt;code class=&quot;highlighter-rouge&quot;&gt;Claim&lt;/code&gt;이라고 하며, &lt;code class=&quot;highlighter-rouge&quot;&gt;key-value&lt;/code&gt; 형식으로 구성되어있습니다. jwt는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;내용(Payload)&lt;/code&gt;에 아래와 같은 정보(&lt;code class=&quot;highlighter-rouge&quot;&gt;Claim&lt;/code&gt;)를 가지고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;iss(Issuer): 토큰 발급자&lt;/li&gt; &lt;li&gt;sub(Subject): 토큰 제목(기본값은 user id)&lt;/li&gt; &lt;li&gt;iat(Issued At): 토큰 발행일(unix timestamp)&lt;/li&gt; &lt;li&gt;exp(Expiry): 토큰의 만료시간&lt;/li&gt; &lt;li&gt;nbf(Not Before): 토큰을 사용할 수 있는 시작 시간&lt;/li&gt; &lt;li&gt;jti(JWT Id): JWT의 고유 식별자. 주로 중복적인 처리를 방지하기 위하여 사용.&lt;/li&gt; &lt;li&gt;prv: 사용자 공급자 클래스(User Provider class)의 해쉬값. 다중 guard를 사용하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;tymondesigns/jwt-auth&lt;/code&gt;에 추가한 특별한 코드.(&lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/pull/1167&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;자세한 설명&lt;/a&gt;)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이 정보 이외에 추가적으로 jwt토큰에 정보를 추가하고 싶다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;getJWTCustomClaims()&lt;/code&gt; 함수에 반환값(Return value)을 수정하면 됩니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'firstname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lastname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lastname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;guard-수정&quot;&gt;guard 수정&lt;/h2&gt; &lt;p&gt;라라벨(Laravel)의 인증을 담당하고 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;config/auth.php&lt;/code&gt; 파일의 &lt;code class=&quot;highlighter-rouge&quot;&gt;guard&lt;/code&gt;를 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;'guards'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'web'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'session'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'provider'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'jwt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'provider'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;컨트롤러-수정&quot;&gt;컨트롤러 수정&lt;/h2&gt; &lt;p&gt;이전 블로그에서 생성한 &lt;code class=&quot;highlighter-rouge&quot;&gt;app/Http/Controllers/JWTAuthController.php&lt;/code&gt; 컨트롤러에 로그인 함수를 추가합니다&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'token_type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bearer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expires_in'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;우선 요청(Request)의 입력 데이터를 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 사용자의 &lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;로 로그인 시킵니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;로그인에 성공하면 요청(Request)에 대한 jwt 토큰을 반환(Response)합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'token_type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bearer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expires_in'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;라우트-연결&quot;&gt;라우트 연결&lt;/h2&gt; &lt;p&gt;컨트롤러(Controller)에서 생성한 로그인 함수를 &lt;code class=&quot;highlighter-rouge&quot;&gt;routes/api.php&lt;/code&gt;에서 URL과 연결합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;테스트&quot;&gt;테스트&lt;/h2&gt; &lt;p&gt;이제 지금까지 만든 jwt 인증 시스템의 로그인 기능을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;을 통해 확인합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost/api/login&lt;/code&gt; URL에 &lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;를 입력하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt;로 요청(Request)을 보내면 아래와 같은 결과를 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signin/login.png&quot; alt=&quot;postman login api test&quot; /&gt;&lt;/p&gt; &lt;p&gt;응답(Response)으로 받은 &lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt;키를 &lt;a href=&quot;https://jwt.io/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://jwt.io/&lt;/a&gt;에서 확인해보면 아래와 같은 결과를 얻을 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signin/check_access_key.png&quot; alt=&quot;check access_key&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 jwt 인증 시스템을 이용하여 로그인 기능을 구현해보았습니다. 다음 블로그에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;access token&lt;/code&gt;을 이용한 사용자 정보를 얻는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;JSON Web Token (JWT): &lt;a href=&quot;https://tools.ietf.org/html/rfc7519#section-4.1&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://tools.ietf.org/html/rfc7519#section-4.1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;jwt-auth prv: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/issues/1344&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth/issues/1344&lt;/a&gt;&lt;/li&gt; &lt;li&gt;jwt-auth Creating Tokens: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/wiki/Creating-Tokens&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth/wiki/Creating-Tokens&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 jwt 인증 시스템을 통해 로그인 절차를 구현해 보려고합니다. 이 블로그는 시리즈로 구성되어 있습니다. jwt 구현을 위한 미들웨어(Middleware) 설치나 회원가입 구현에 관해서는 이전 블로그를 참고해주세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-signin.png"/></entry><entry xml:lang="ko"><title type="html">jwt:회원가입</title><link href="https://dev-yakuza.github.io/ko/laravel/jwt-signup/" rel="alternate" type="text/html" title="jwt:회원가입"/><published>2018-12-22T00:00:00+09:00</published><updated>2019-01-05T15:22:47+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-siginup-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-signup/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;토큰 기반 인증 시스템인 jwt(Json Web Token)을 사용하여 회원가입 기능을 구현하려고 합니다. 이 블로그에서는 jwt 토큰 시스템을 &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;tymon/jwt-auth&lt;/a&gt; 미들웨어(Middleware)로 사용하여 라라벨(Laravel)에 적용하였습니다. 라라벨(Laravel) 프로젝트에 jwt 미들웨어(Middleware)인 &lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;을 설치하고 설정하는 방법에 대해서는 이전 블로그를 참고해 주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt 설치 및 설정&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;저장소repository&quot;&gt;저장소(Repository)&lt;/h2&gt; &lt;p&gt;우리는 jwt 인증 시스템을 구현한 저장소(Repository)를 만들었습니다. 아래에 링크를 클릭해서 저장소(Repository)를 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;여기서 설명할 내용은 라라독(Laradock)과 앤서블(Ansible)을 이용하여 만든 라라벨(Laravel) 개발 환경에서 작업합니다. 라라독(Laradock)과 앤서블(Ansible)을 이용한 라라벨(Laravel) 개발 환경에 관해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;데이터베이스-연결&quot;&gt;데이터베이스 연결&lt;/h2&gt; &lt;p&gt;지금부터 구현할 회원가입 기능은 회원의 정보를 기록할 데이터베이스(Database)가 필요합니다. 라라벨(Laravel)과 데이터베이스를 연결하는 방법에 대해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;테이블-생성&quot;&gt;테이블 생성&lt;/h2&gt; &lt;p&gt;라라벨(Laravel)은 기본적으로 사용자에 관한 마이그레이션(Migration - DB 테이블을 생성하기 위한 파일)과 모델(Model)를 제공합니다. 따라서 아래에 명령어를 사용하여 라라벨(Laravel)이 제공하는 기본 사용자 테이블을 사용할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan migrate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;컨트롤러-생성&quot;&gt;컨트롤러 생성&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템을 구현할 컨트롤러(Controller)를 아래와 같이 artisan 명령어로 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan make:controller JWTAuthController &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;생성된 &lt;code class=&quot;highlighter-rouge&quot;&gt;app/http/Controllers/JWTAuthController.php&lt;/code&gt;를 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Support\Facades\Validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JWTAuthController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|max:100'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255|unique:users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255|confirmed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password_confirmation'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bcrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;수정한 컨트롤러(Controller)를 자세히 살펴보겠습니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|max:100'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255|unique:users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255|confirmed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password_confirmation'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;클라이언트(Client, 브라우저)에서 들어온 요청(&lt;code class=&quot;highlighter-rouge&quot;&gt;$request&lt;/code&gt;)을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Validator&lt;/code&gt;를 이용하여 값을 검증합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에서 요청(Request)을 검증하여 실패한 경우, 실패 메세지와 함께 요청(Requst)에 대한 응답(Response)을 클라이언트(Client, 브라우저)에 보냅니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bcrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;클라이언트(Client, 브라우저)에서 온 요청(Request)의 검증이 성공한 경우, 새로운 유저를 생성하여 데이터베이스에 저장합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이때, 모델(Model)에서 설정한 &lt;code class=&quot;highlighter-rouge&quot;&gt;fillable&lt;/code&gt; 기능을 사용하여 클라이언트(Client, 브라우저)가 보낸 요청(Request)중 필요한 내용으로 데이터를 채웁니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;데이터를 성공적으로 생성한 경우 해당 데이터와 함께 클라이언트(Client, 브라우저)의 요청(Request)에 대한 응답(Response)를 보냅니다.&lt;/p&gt; &lt;h2 id=&quot;라우트-연결&quot;&gt;라우트 연결&lt;/h2&gt; &lt;p&gt;지금까지 생성한 컨트롤러(Controller)를 라우트 설정을 통해 URL을 연결시킵니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;routes/api.php&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라라벨(Laravel)에 &lt;code class=&quot;highlighter-rouge&quot;&gt;register&lt;/code&gt;라는 URL에 &lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt; 요청(Request)이 오면 &lt;code class=&quot;highlighter-rouge&quot;&gt;JWTAuthController&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;register&lt;/code&gt;라는 함수를 호출하도록 연결하였습니다.&lt;/p&gt; &lt;h2 id=&quot;테스트&quot;&gt;테스트&lt;/h2&gt; &lt;p&gt;우리는 API 테스트를 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;을 사용합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;이 없는 경우 아래에 링크를 눌러 설치해 주세요. 테스트는 Postman이 아니라 &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt;을 사용하셔도 됩니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Postman: &lt;a href=&quot;https://www.getpostman.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;을 열고 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost/api/register&lt;/code&gt;의 URL로 &lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt; 요청(Request)을 보냅니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signup/register_api_test.png&quot; alt=&quot;postman register api test&quot; /&gt;&lt;/p&gt; &lt;p&gt;데이터가 성공적으로 등록이 되어 우리가 설정한 형식으로 응답(Response)이 오는 것을 확인할 수 있습니다. 실패한 경우 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signup/register_api_test_fail.png&quot; alt=&quot;postman register api test fail&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;지금까지 토큰 기반 인증 시스템인 jwt 인증 시스템을 사용하여 회원가입 부분을 개발하였습니다. 다음 블로그에서는 jwt 인증 시스템을 이용하여 로그인 절차를 처리하는 부분에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;tymon/jwt-auth: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Postman: &lt;a href=&quot;https://www.getpostman.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 토큰 기반 인증 시스템인 jwt(Json Web Token)을 사용하여 회원가입 기능을 구현하려고 합니다. 이 블로그에서는 jwt 토큰 시스템을 tymon/jwt-auth 미들웨어(Middleware)로 사용하여 라라벨(Laravel)에 적용하였습니다. 라라벨(Laravel) 프로젝트에 jwt 미들웨어(Middleware)인 tymon/jwt-auth을 설치하고 설정하는 방법에 대해서는 이전 블로그를 참고해 주세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-signup.jpg"/></entry><entry xml:lang="ko"><title type="html">react-native-animatable</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-animatable/" rel="alternate" type="text/html" title="react-native-animatable"/><published>2018-12-19T00:00:00+09:00</published><updated>2018-12-19T14:36:13+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-animatable-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-animatable/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;기본적으로 많이 사용되는 애니메이션을 모아둔 &lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt; 라이브러리를 사용하여 애니메이션을 구현하는 방법에 대해서 설명합니다.&lt;/p&gt; &lt;p&gt;이 블로그에서는 RN(react native)에 &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;가 적용된 프로젝트를 가지고 설명합니다. RN(react native)에 &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;를 적용하는 방법에 대해서는 이전 블로그를 확인해 주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;라이브러리-설치&quot;&gt;라이브러리 설치&lt;/h2&gt; &lt;p&gt;react-native-animatable 라이브러리를 사용하기 위해 아래에 명령어로 라이브러리를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install react-native-animatable &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;기본-사용법&quot;&gt;기본 사용법&lt;/h2&gt; &lt;p&gt;아래와 같이 애니메이션을 추가하고 싶은 부분에 소스를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;zoomInUp&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Zoom&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Scotty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Animatable.Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;이벤트를-통한-사용법&quot;&gt;이벤트를 통한 사용법&lt;/h2&gt; &lt;p&gt;RN(react native)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt;를 사용하여 사용자 이벤트가 발생할 때, 애니메이션을 진행할 수 있게 만들 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TouchableWithoutFeedback&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bounce&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Animatable.View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/TouchableWithoutFeedback&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onPress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bounce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;styled-components&quot;&gt;styled-components&lt;/h2&gt; &lt;p&gt;styled-components로 만든 컴포넌트(component)에 애니메이션을 적용하는 방법입니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'styled-components/native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyledImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createAnimatableComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StyledImage&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bounceIn&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useNativeDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;사용-가능한-애니메이션&quot;&gt;사용 가능한 애니메이션&lt;/h2&gt; &lt;p&gt;사용 가능한 애니메이션은 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;의 공식 저장소(Repository)에서 예제와 함께 확인할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/oblador/react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;아래는 사용 가능한 애니메이션 리스트입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;bounce&lt;/li&gt; &lt;li&gt;flash&lt;/li&gt; &lt;li&gt;jello&lt;/li&gt; &lt;li&gt;pulse&lt;/li&gt; &lt;li&gt;rotate&lt;/li&gt; &lt;li&gt;rubberBand&lt;/li&gt; &lt;li&gt;shake&lt;/li&gt; &lt;li&gt;swing&lt;/li&gt; &lt;li&gt;tada&lt;/li&gt; &lt;li&gt;wobble&lt;/li&gt; &lt;li&gt;bounceIn&lt;/li&gt; &lt;li&gt;bounceInDown&lt;/li&gt; &lt;li&gt;bounceInUp&lt;/li&gt; &lt;li&gt;bounceInLeft&lt;/li&gt; &lt;li&gt;bounceInRight&lt;/li&gt; &lt;li&gt;bounceOut&lt;/li&gt; &lt;li&gt;bounceOutDown&lt;/li&gt; &lt;li&gt;bounceOutUp&lt;/li&gt; &lt;li&gt;bounceOutLeft&lt;/li&gt; &lt;li&gt;bounceOutRight&lt;/li&gt; &lt;li&gt;fadeIn&lt;/li&gt; &lt;li&gt;fadeInDown&lt;/li&gt; &lt;li&gt;fadeInDownBig&lt;/li&gt; &lt;li&gt;fadeInUp&lt;/li&gt; &lt;li&gt;fadeInUpBig&lt;/li&gt; &lt;li&gt;fadeInLeft&lt;/li&gt; &lt;li&gt;fadeInLeftBig&lt;/li&gt; &lt;li&gt;fadeInRight&lt;/li&gt; &lt;li&gt;fadeInRightBig&lt;/li&gt; &lt;li&gt;fadeOut&lt;/li&gt; &lt;li&gt;fadeOutDown&lt;/li&gt; &lt;li&gt;fadeOutDownBig&lt;/li&gt; &lt;li&gt;fadeOutUp&lt;/li&gt; &lt;li&gt;fadeOutUpBig&lt;/li&gt; &lt;li&gt;fadeOutLeft&lt;/li&gt; &lt;li&gt;fadeOutLeftBig&lt;/li&gt; &lt;li&gt;fadeOutRight&lt;/li&gt; &lt;li&gt;fadeOutRightBig&lt;/li&gt; &lt;li&gt;flipInX&lt;/li&gt; &lt;li&gt;flipInY&lt;/li&gt; &lt;li&gt;flipOutX&lt;/li&gt; &lt;li&gt;flipOutY&lt;/li&gt; &lt;li&gt;lightSpeedIn&lt;/li&gt; &lt;li&gt;lightSpeedOut&lt;/li&gt; &lt;li&gt;slideInDown&lt;/li&gt; &lt;li&gt;slideInUp&lt;/li&gt; &lt;li&gt;slideInLeft&lt;/li&gt; &lt;li&gt;slideInRight&lt;/li&gt; &lt;li&gt;slideOutDown&lt;/li&gt; &lt;li&gt;slideOutUp&lt;/li&gt; &lt;li&gt;slideOutLeft&lt;/li&gt; &lt;li&gt;slideOutRight&lt;/li&gt; &lt;li&gt;zoomIn&lt;/li&gt; &lt;li&gt;zoomInDown&lt;/li&gt; &lt;li&gt;zoomInUp&lt;/li&gt; &lt;li&gt;zoomInLeft&lt;/li&gt; &lt;li&gt;zoomInRight&lt;/li&gt; &lt;li&gt;zoomOut&lt;/li&gt; &lt;li&gt;zoomOutDown&lt;/li&gt; &lt;li&gt;zoomOutUp&lt;/li&gt; &lt;li&gt;zoomOutLeft&lt;/li&gt; &lt;li&gt;zoomOutRight&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;간단한 애니메이션을 빠르게 도입하고 싶을 때, &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt; 라이브러리를 사용하는 것을 추천합니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/oblador/react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 기본적으로 많이 사용되는 애니메이션을 모아둔 react-native-animatable 라이브러리를 사용하여 애니메이션을 구현하는 방법에 대해서 설명합니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-animatable.jpg"/></entry><entry xml:lang="ko"><title type="html">Firebase Crashlytics</title><link href="https://dev-yakuza.github.io/ko/react-native/firebase-crashlytics/" rel="alternate" type="text/html" title="Firebase Crashlytics"/><published>2018-12-12T00:00:00+09:00</published><updated>2018-12-14T13:19:15+09:00</updated><id>https://dev-yakuza.github.io/react-native/firebase-crashlytics-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/firebase-crashlytics/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;이전 블로그(&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-app-crash-debugging/&quot; target=&quot;_blank&quot;&gt;iOS App crash 분석&lt;/a&gt;)에서 앱 심사 거부(reject)에 첨부된 App crash log를 분석해 보았습니다. 하지만 심사중이 아니라 사용자가 사용하고 있는 환경에서 crash가 발생하면 알수가 없습니다. 그래서 파이어베이스(Firebase)의 Crashlytics를 사용해 앱 crash를 수집하고 분석해 보도록 하겠습니다. 이 블로그에서는 react-native-firebase 라이브러리를 사용할 예정입니다. react-native-firebase 라이브러리 설치 및 설정은 이전 블로그를 확인해 주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;Firebase Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;ios-설정&quot;&gt;iOS 설정&lt;/h2&gt; &lt;p&gt;파이어베이스(Firebase)의 Crashlytics를 사용하기 위해 react-native-firebase를 설정하겠습니다.&lt;/p&gt; &lt;h3 id=&quot;필요한-라이브러리-설정-및-설치&quot;&gt;필요한 라이브러리 설정 및 설치&lt;/h3&gt; &lt;p&gt;iOS에 필요한 라이브러리를 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Podfile&lt;/code&gt;에 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Firebase/Core'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Firebase/AdMob'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Fabric'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Crashlytics'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;추가한 라이브러리를 아래에 &lt;code class=&quot;highlighter-rouge&quot;&gt;pod&lt;/code&gt; 명령어로 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# cd ios&lt;/span&gt; pod update &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;crashlytics-실행-스크립트-추가&quot;&gt;Crashlytics 실행 스크립트 추가&lt;/h3&gt; &lt;p&gt;파이어베이스(Firebase)의 Crashlytics를 사용하기 위해 Crashlytics 실행 스크립트를 추가해야 합니다.&lt;/p&gt; &lt;p&gt;RN(react native) 프로젝트 폴더에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[AppName].xcworkspace&lt;/code&gt;를 선택하여 Xcode를 실행합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/execute_xcode.png&quot; alt=&quot;xcode 실행&quot; /&gt;&lt;/p&gt; &lt;p&gt;왼쪽에 있는 파일 탐색기와 &lt;code class=&quot;highlighter-rouge&quot;&gt;TARGETS&lt;/code&gt;에서 자신의 프로젝트를 선택합니다. 그리고 위쪽에 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Build Phases&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/build_phases.png&quot; alt=&quot;xcode build phases&quot; /&gt;&lt;/p&gt; &lt;p&gt;Build Phases 탭에서 왼쪽 위에 &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; 버튼을 누르고 &lt;code class=&quot;highlighter-rouge&quot;&gt;New Run Script Phase&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/new_run_script.png&quot; alt=&quot;new run script menu on build phases&quot; /&gt;&lt;/p&gt; &lt;p&gt;아래에 명령어를 &lt;code class=&quot;highlighter-rouge&quot;&gt;Run Script&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Shell&lt;/code&gt;하단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;# Type a script...&lt;/code&gt;가 있는 입력창에 입력합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PODS_ROOT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/Fabric/run&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/add_run_script.png&quot; alt=&quot;add Run Script&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;테스트&quot;&gt;테스트&lt;/h3&gt; &lt;p&gt;지금까지 설정한 파이어베이스(Firebase)의 Crashlytics를 테스트하기 위해 아래에 코드를 테스트 하고 싶은 위치에 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crashlytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 부분은 강제로 앱을 crash하게 만드는 코드입니다. 앱이 crash가 발생하여 종료되었다면 파이어베이스(Firebase)의 Crashlytics에 보고할 수 있도록 앱을 다시 실행시킵니다.&lt;/p&gt; &lt;p&gt;아래에 명령어 또는 xcode를 사용하여 시뮬레이터를 기동 시킵니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native run-ios &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;xcode를 이용하여 시뮬레이터를 기동하신 분들은 xcode를 종료하고 시뮬레이터에서 앱을 선택하여 다시 기동해야 합니다. xcode가 기동된 상태에서 crash가 날 경우 Crashlytics까지 보고가 들어가지 않고 xcode에서 crash를 처리하게 됩니다.&lt;/p&gt; &lt;p&gt;crash가 발생하고 앱을 다시 기동합니다. 조금 시간이 지나면 파이어베이스 콘솔(Firebase Console)의 Crashlytics에서 아래와 같은 내용을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/firebase_crashlytics.png&quot; alt=&quot;Firebase Console Crashlytics&quot; /&gt;&lt;/p&gt; &lt;p&gt;주의: 테스트 코드(&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.crashlytics().crash();&lt;/code&gt;)는 확인이 완료되면 꼭 삭제해 주시기 바랍니다.&lt;/p&gt; &lt;h2 id=&quot;안드로이드-설정&quot;&gt;안드로이드 설정&lt;/h2&gt; &lt;p&gt;안드로이드(Android)에서 파이어베이스(Firebase)의 Crashlytics를 사용하기 위해 react-native-firebase를 설정하겠습니다.&lt;/p&gt; &lt;h3 id=&quot;필요한-라이브러리-설정-및-설치-1&quot;&gt;필요한 라이브러리 설정 및 설치&lt;/h3&gt; &lt;p&gt;아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt; 파일을 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apply plugin: &quot;com.android.application&quot; apply plugin: 'io.fabric' ... dependencies { ... implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') { transitive = true } } ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;android/build.gradle&lt;/code&gt; 파일을 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... buildscript { ... dependencies { ... classpath 'com.google.gms:google-services:4.0.1' classpath 'io.fabric.tools:gradle:1.25.4' } ... repositories { ... jcenter() maven { url 'https://maven.fabric.io/public' } } ... } ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/main/java/com/[app name]/MainApplication.java&lt;/code&gt; 파일을 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.invertase.firebase.RNFirebasePackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.invertase.firebase.fabric.crashlytics.RNFirebaseCrashlyticsPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReactPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPackages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReactPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RNFirebasePackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RNFirebaseCrashlyticsPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;테스트-1&quot;&gt;테스트&lt;/h3&gt; &lt;p&gt;지금까지 설정한 파이어베이스(Firebase)의 Crashlytics를 테스트하기 위해 아래에 코드를 테스트 하고 싶은 위치에 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crashlytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;안드로이드(Android)에서는 에뮬레이터를 기동하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native run-android&lt;/code&gt;로 실행하여 crash를 발생하면 빨간 에러화면이 나와 실제로 crash가 보고되지 않습니다. 그래서 우리는 에뮬레이터에 빌드된 파일을 설치하여 테스트하였습니다. 안드로이드(Android) 빌드 및 테스트에 관해서는 &lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;안드로이드 빌드 및 테스트&lt;/a&gt;를 참고해 주세요.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native bundle &lt;span class=&quot;nt&quot;&gt;--platform&lt;/span&gt; android &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--entry-file&lt;/span&gt; index.js &lt;span class=&quot;nt&quot;&gt;--bundle-output&lt;/span&gt; android/app/src/main/assets/index.android.bundle &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 명령어를 사용하여 javascript를 빌드한 후, 아래에 명령어로 에뮬레이터에 빌드된 파일을 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native run-android &lt;span class=&quot;nt&quot;&gt;--variant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;release &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 테스트하면 아래와 같이 안드로이드(Android)에서도 crash 보고를 받을 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/firebase_crashlytics_android.png&quot; alt=&quot;Firebase Console Crashlytics android&quot; /&gt;&lt;/p&gt; &lt;p&gt;주의: 테스트 코드(&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.crashlytics().crash();&lt;/code&gt;)는 확인이 완료되면 꼭 삭제해 주시기 바랍니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/docs/crashlytics/get-started&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://firebase.google.com/docs/crashlytics/get-started&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://rnfirebase.io/docs/v5.x.x/crashlytics/ios&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://rnfirebase.io/docs/v5.x.x/crashlytics/ios&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 이전 블로그(iOS App crash 분석)에서 앱 심사 거부(reject)에 첨부된 App crash log를 분석해 보았습니다. 하지만 심사중이 아니라 사용자가 사용하고 있는 환경에서 crash가 발생하면 알수가 없습니다. 그래서 파이어베이스(Firebase)의 Crashlytics를 사용해 앱 crash를 수집하고 분석해 보도록 하겠습니다. 이 블로그에서는 react-native-firebase 라이브러리를 사용할 예정입니다. react-native-firebase 라이브러리 설치 및 설정은 이전 블로그를 확인해 주세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/firebase-crashlytics.jpg"/></entry><entry xml:lang="ko"><title type="html">iOS App crash 분석</title><link href="https://dev-yakuza.github.io/ko/react-native/ios-app-crash-debugging/" rel="alternate" type="text/html" title="iOS App crash 분석"/><published>2018-12-11T00:00:00+09:00</published><updated>2018-12-13T17:51:02+09:00</updated><id>https://dev-yakuza.github.io/react-native/ios-app-crash-debugging-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/ios-app-crash-debugging/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;앱 심사를 위해 앱을 제출했지만 App crash 이유로 거절(reject)되었습니다. 친절하게 거절(reject) 이유와 함께 crash 로그(log) 파일을 함께 보내주었습니다. 이렇게 받은 crash 로그(log) 파일을 분석하여 어떤 부분에서 에러가 발생했는지 찾는 방법에 대해서 설명하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;앱-심사-거절&quot;&gt;앱 심사 거절&lt;/h2&gt; &lt;p&gt;애플의 앱 심사가 거절(reject)되면 메일을 발송해줍니다. 메일을 받았다면 앱스토어 커넥트(Appstore connect)로 이동하여 앱 심사 거절(reject) 이유를 확인합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-app-crash-debugging/app_reject.png&quot; alt=&quot;앱 심사 거절&quot; /&gt;&lt;/p&gt; &lt;p&gt;특히 앱 심사 거절(reject) 이유가 App crash라면 아래와 같이 App crash log도 함께 보내줍니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Guideline 2.1 - Performance - App Completeness We were unable to review your app as it crashed on launch. We have attached detailed crash logs to help troubleshoot this issue. Next Steps To resolve this issue, please revise your app and test it on a device to ensure it will launch without crashing. Resources For information on how to symbolicate and read a crash log, please review Tech Note TN2151 Understanding and Analyzing Application Crash Reports. crashlog-CDDAD5F8-F56A-470D-94BA-55149F76E390.txt crashlog-D75B7641-0AF7-4DF4-8702-2E6665172390.txt crashlog-3A0F07E3-874D-462F-9FFF-BCE88C98D224.txt &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;앱 심사 거절(reject) 내용에 첨부되어있는 &lt;a href=&quot;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Tech Note TN2151 Understanding and Analyzing Application Crash Reports&lt;/a&gt; 링크를 확인해보면, App crash log를 확인하는 방법에 대해서 자세히 나와있습니다.&lt;/p&gt; &lt;p&gt;우선 보내준 로그(log) 파일을 다운로드 받습니다.&lt;/p&gt; &lt;h2 id=&quot;심볼-파일-다운로드&quot;&gt;심볼 파일 다운로드&lt;/h2&gt; &lt;p&gt;App crash log를 분석하기 위해서는 앱의 심볼 파일(&lt;code class=&quot;highlighter-rouge&quot;&gt;dSYM&lt;/code&gt;)이 필요합니다. 앱스토어 커넥트(Appstore connect)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Activity&lt;/code&gt;탭으로 이동합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-app-crash-debugging/appstoreconnect_activity.png&quot; alt=&quot;앱스토어 커넥트 Activity 탭&quot; /&gt;&lt;/p&gt; &lt;p&gt;왼쪽에 &lt;code class=&quot;highlighter-rouge&quot;&gt;All Builds&lt;/code&gt;를 선택하고 앱 심사에 제출한 빌드의 버전을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-app-crash-debugging/appstoreconnect_download_symbol.png&quot; alt=&quot;심볼 파일 다운로드&quot; /&gt;&lt;/p&gt; &lt;p&gt;오른쪽 하단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Download dSYM&lt;/code&gt; 링크를 눌러 심볼 파일을 다운로드하고 압축을 해제합니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;7ED9CAAD-F7F7-31E6-8480-2D358FBEF9C7.dSYM E3430BAD-2EB8-3B8D-8E04-4BB66E2A4E58.dSYM &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;로그-파일-분석&quot;&gt;로그 파일 분석&lt;/h2&gt; &lt;p&gt;이제 애플에서 보내준 App crash log 파일을 분석해 보겠습니다. 모든 로그(log) 파일은 아래와 같이 헤더(header)를 가지고 있습니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Incident Identifier: 3A0F07E3-874D-462F-9FFF-BCE88C98D224 CrashReporter Key: 28b54437587b1ef1e81059e98250b166b0d343c8 Hardware Model: xxx Process: blaboo [2012] Path: /private/var/containers/Bundle/Application/488E158A-64B5-439E-82BC-F702CF26E5DA/blaboo.app/blaboo Identifier: io.github.dev-yakuza.blaboo Version: 1 (1.0.6) AppStoreTools: 10B63 Code Type: ARM-64 (Native) Role: Non UI Parent Process: launchd [1] Coalition: io.github.dev-yakuza.blaboo [661] Date/Time: 2018-12-10 17:20:22.0217 -0800 Launch Time: 2018-12-10 17:20:01.9857 -0800 OS Version: iPhone OS 12.1 (16B92) Baseband Version: 7.21.00 Report Version: 104 Exception Type: EXC_CRASH (SIGKILL) Exception Codes: 0x0000000000000000, 0x0000000000000000 Exception Note: EXC_CORPSE_NOTIFY Termination Reason: Namespace SPRINGBOARD, Code 0x8badf00d Termination Description: SPRINGBOARD, scene-create watchdog transgression: io.github.dev-yakuza.blaboo exhausted real (wall clock) time allowance of 19.94 seconds | ProcessVisibility: Foreground | ProcessState: Running | WatchdogEvent: scene-create | WatchdogVisibility: Foreground | WatchdogCPUStatistics: ( | &quot;Elapsed total CPU time (seconds): 24.600 (user 24.600, system 0.000), 41% CPU&quot;, | &quot;Elapsed application CPU time (seconds): 0.237, 0% CPU&quot; | ) Triggered by Thread: 0 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;헤더(header)에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Exception Type&lt;/code&gt;을 &lt;a href=&quot;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&lt;/a&gt; 사이트에서 확인하는 것으로 대략적인 정보를 얻을 수 있습니다.&lt;/p&gt; &lt;p&gt;예를 들어 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bad Memory Access [EXC_BAD_ACCESS // SIGSEGV // SIGBUS]&lt;/code&gt;인 경우는 프로세스가 유효하지 않은 메모리에 접근하려했거나 read-only 메모리에 쓰기 동작을 수행할 때 발생합니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Exception Type: EXC_CRASH (SIGKILL) Exception Codes: 0x0000000000000000, 0x0000000000000000 Exception Note: EXC_CORPSE_NOTIFY Termination Reason: Namespace SPRINGBOARD, Code 0x8badf00d Termination Description: SPRINGBOARD, scene-create watchdog transgression: io.github.dev-yakuza.blaboo exhausted real (wall clock) time allowance of 19.94 seconds | ProcessVisibility: Foreground | ProcessState: Running | WatchdogEvent: scene-create | WatchdogVisibility: Foreground | WatchdogCPUStatistics: ( | &quot;Elapsed total CPU time (seconds): 24.600 (user 24.600, system 0.000), 41% CPU&quot;, | &quot;Elapsed application CPU time (seconds): 0.237, 0% CPU&quot; | ) Triggered by Thread: 0 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;우리 앱은 &lt;code class=&quot;highlighter-rouge&quot;&gt;EXC_CRASH (SIGKILL)&lt;/code&gt;이네요. 이 타입은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Termination Reason&lt;/code&gt;까지 확인해야 알 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Termination Reason&lt;/code&gt; 코드가 &lt;code class=&quot;highlighter-rouge&quot;&gt;0x8badf00d&lt;/code&gt;입니다. 위에 링크에서 확인해보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;The exception code 0x8badf00d indicates that an application has been terminated by iOS because a watchdog timeout occurred.&lt;/code&gt;으로 타임아웃이 떨어져 에러가 발생한것으로 추정됩니다.&lt;/p&gt; &lt;p&gt;그럼 어디에서 crash가 발생했는지 찾아보기 위해 터미널(terminal)을 이용해서 심볼 파일(dSYM)이 존재하는 폴더로 이동합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 다운로드한 파일이 존재하는 폴더로 이동합니다.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Desktop/crash/ &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 애플이 보내준 App crash log 파일을 열고 제일 상단에 내용을 확인합니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{ ... &quot;slice_uuid&quot;:&quot;7ed9caad-f7f7-31e6-8480-2d358fbef9c7&quot;, ... } ... Thread 0 name: Dispatch queue: com.apple.main-thread Thread 0 Crashed: ... 10 Security 0x00000001e938b6d8 0x1e9314000 + 489176 11 Security 0x00000001e938944c 0x1e9314000 + 480332 12 Security 0x00000001e938bcd0 0x1e9314000 + 490704 13 blaboo 0x0000000100969608 0x10093c000 + 185864 14 blaboo 0x000000010096ddf0 0x10093c000 + 204272 15 blaboo 0x000000010097190c 0x10093c000 + 219404 ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;여기에 표시된 &lt;code class=&quot;highlighter-rouge&quot;&gt;slice_uuid&lt;/code&gt;와 매칭이되는 심볼 파일(dSYM)을 이용해서 App crash log를 분석합니다. 또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread 0 Crashed&lt;/code&gt;에서 자신의 앱 이름가 보이는 부분을 찾습니다.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Tech Note TN2151 Understanding and Analyzing Application Crash Reports&lt;/a&gt; 사이트에서 소개된 아래에 명령어를 통해 분석을 할 예정입니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;atos &lt;span class=&quot;nt&quot;&gt;-arch&lt;/span&gt; arm64 &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; TheElements.app.dSYM/Contents/Resources/DWARF/TheElements &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; 0x1000e4000 0x00000001000effdc &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 명령어를 위에서 조사한 내용으로 변경하면 아래와 같습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# &quot;slice_uuid&quot;:&quot;7ed9caad-f7f7-31e6-8480-2d358fbef9c7&quot;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 13 blaboo 0x0000000100969608 0x10093c000 + 185864&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# atos -arch arm64 -o [slice_uuid].dSYM/Contents/Resources/DWARF/[AppName] -l [4번째 문자열: 0x10093c000] [3번째 문자열: 0x0000000100969608]&lt;/span&gt; atos &lt;span class=&quot;nt&quot;&gt;-arch&lt;/span&gt; arm64 &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; 7ED9CAAD-F7F7-31E6-8480-2D358FBEF9C7.dSYM/Contents/Resources/DWARF/blaboo &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; 0x10093c000 0x0000000100969608 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위와 같이 명령어를 입력하면 아래와 같은 결과를 볼 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-[FIRInstanceIDAuthKeychain removeItemsMatchingService:account:error:] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;blaboo&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; + 136 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위와 같이 앱의 crash가 발생한 부분을 대략적으로 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;애플이 보내준 App crash log를 분석하는 방법에 대해서 알아봤습니다. 우리 앱의 App crash log를 분석해본 결과 Admob에서 문제가 발생하는 것 같아 확인해 본 결과 파이어베이스(Firebase)에서 다운받은 파일(&lt;code class=&quot;highlighter-rouge&quot;&gt;GoogleService-Info.plist&lt;/code&gt;)에 &lt;code class=&quot;highlighter-rouge&quot;&gt;ADMOB_APP_ID&lt;/code&gt;가 포함되어 있지 않았었습니다. 그래서 파이어베이스(Firebase)에서 새롭게 &lt;code class=&quot;highlighter-rouge&quot;&gt;GoogleService-Info.plist&lt;/code&gt; 파일을 다운로드받아 적용했습니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Tech Note TN2151 Understanding and Analyzing Application Crash Reports: &lt;a href=&quot;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 앱 심사를 위해 앱을 제출했지만 App crash 이유로 거절(reject)되었습니다. 친절하게 거절(reject) 이유와 함께 crash 로그(log) 파일을 함께 보내주었습니다. 이렇게 받은 crash 로그(log) 파일을 분석하여 어떤 부분에서 에러가 발생했는지 찾는 방법에 대해서 설명하겠습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/ios-app-crash-debugging.jpg"/></entry><entry xml:lang="ko"><title type="html">jwt 설치 및 설정</title><link href="https://dev-yakuza.github.io/ko/laravel/jwt/" rel="alternate" type="text/html" title="jwt 설치 및 설정"/><published>2018-12-07T00:00:00+09:00</published><updated>2019-01-05T15:22:47+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;라라벨(Laravel)에서 토큰 기반 인증 시스템을 구현하기 위해 jwt(Json Web Token)을 사용하려고 합니다. jwt 인증 시스템을 처음부터 다 구현하려면 어렵고 시간이 많이 걸립니다. 그래서 우리는 &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;tymon/jwt-auth&lt;/a&gt; 미들웨어(Middleware)를 사용하여 jwt 인증 시스템을 개발하려고 합니다.&lt;/p&gt; &lt;p&gt;이 블로그에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;를 설치하고 설정하는 방법에 대해서 알아보겠습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;에 관한 자세한 내용은 아래에 링크를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;tymon/jwt-auth: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;tymon/jwt-auth document: &lt;a href=&quot;https://jwt-auth.readthedocs.io/en/develop/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://jwt-auth.readthedocs.io/en/develop/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;저장소repository&quot;&gt;저장소(Repository)&lt;/h2&gt; &lt;p&gt;우리는 jwt 인증 시스템을 구현한 저장소(Repository)를 만들었습니다. 아래에 링크를 클릭해서 저장소(Repository)를 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;여기서 설명할 내용은 라라독(Laradock)과 앤서블(Ansible)을 이용하여 만든 라라벨(Laravel) 개발 환경에서 작업합니다. 라라독(Laradock)과 앤서블(Ansible)을 이용한 라라벨(Laravel) 개발 환경에 관해서는 아래에 블로그를 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라벨&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;미들웨어middleware-설치&quot;&gt;미들웨어(Middleware) 설치&lt;/h2&gt; &lt;p&gt;jwt 인증 시스템을 개발하기 위해 아래에 composer 명령어로 &lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt; 미들웨어(Middleware)를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; composer require tymon/jwt-auth &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;프로바이더-설정&quot;&gt;프로바이더 설정&lt;/h2&gt; &lt;p&gt;라라벨(Laravel) 프로젝트 폴더에 &lt;code class=&quot;highlighter-rouge&quot;&gt;config/app.php&lt;/code&gt; 파일을 열고 아래와 같이 프로바이더(Provider)를 설정합니다.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'providers'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tymon\JWTAuth\Providers\LaravelServiceProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설정이 완료되었다면 아래의 artisan 명령어로 미들웨어(Middleware)를 적용합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan vendor:publish &lt;span class=&quot;nt&quot;&gt;--provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tymon&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\J&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;WTAuth&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;roviders&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aravelServiceProvider&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래와 같이 에러가 발생한다면&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In ProviderRepository.php line 208: Class &lt;span class=&quot;s1&quot;&gt;'Tymon\JWTAuth\Providers\LaravelServiceProvider'&lt;/span&gt; not found &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설치한 &lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt; 미들웨어(Middleware)의 버전을 업데이트할 필요가 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;composer.json&lt;/code&gt; 파일을 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;require&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tymon/jwt-auth&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^1.0.0-rc.3&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;버전을 수정하였다면 아래에 composer 명령어로 버전을 업데이트 합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer update &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 다시 artisan 명령어로 미들웨어(Middleware)를 적용합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan vendor:publish &lt;span class=&quot;nt&quot;&gt;--provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tymon&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\J&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;WTAuth&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;roviders&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aravelServiceProvider&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;비밀키-생성&quot;&gt;비밀키 생성&lt;/h2&gt; &lt;p&gt;설치한 &lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt; 미들웨어(Middleware)가 사용할 비밀키(secret key)를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan jwt:secret &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;환경 설정 파일인 &lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt;를 열어 하단에 아래와 같은 내용이 추가되었는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;JWT_SECRET=******* &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;jwt(Json Web Token) 기반 인증 시스템을 개발하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt; 미들웨어(Middleware) 설치 및 설정에 대해서 알아보았습니다. 다음 블로그에서는 실제 jwt를 사용하여 인증 시스템을 개발하는 방법에 대해서 소개하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;tymon/jwt-auth: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;tymon/jwt-auth document: &lt;a href=&quot;https://jwt-auth.readthedocs.io/en/develop/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://jwt-auth.readthedocs.io/en/develop/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 라라벨(Laravel)에서 토큰 기반 인증 시스템을 구현하기 위해 jwt(Json Web Token)을 사용하려고 합니다. jwt 인증 시스템을 처음부터 다 구현하려면 어렵고 시간이 많이 걸립니다. 그래서 우리는 tymon/jwt-auth 미들웨어(Middleware)를 사용하여 jwt 인증 시스템을 개발하려고 합니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt.jpg"/></entry><entry xml:lang="ko"><title type="html">앤서블&amp;amp;라라벨</title><link href="https://dev-yakuza.github.io/ko/environment/ansible-laravel/" rel="alternate" type="text/html" title="앤서블&amp;라라벨"/><published>2018-12-06T00:00:00+09:00</published><updated>2018-12-19T17:58:34+09:00</updated><id>https://dev-yakuza.github.io/environment/ansible-laravel-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/environment/ansible-laravel/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;지난 시간에 앤서블(Ansible)을 이용하여 라라독(Laradock)을 설치하였습니다. 이제 라라벨(Laravel)을 개발하기 위해 라라벨(Laravel)을 설치하고 라라벨(Laravel) 프로젝트를 생성해 보겠습니다.&lt;/p&gt; &lt;p&gt;이 블로그는 아래에 있는 블로그에 연재물입니다. 이해를 돕기 위해 아래에 블로그 리스트를 먼저 진행하시는걸 추천합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/vagrant-install-and-usage/&quot; target=&quot;_blank&quot;&gt;vagrant 설치 및 사용법&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/install-ansible/&quot; target=&quot;_blank&quot;&gt;앤서블 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-playbook/&quot; target=&quot;_blank&quot;&gt;앤서블 플레이북&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-docker/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;도커&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laradock/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라독&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;php와-composer-설정&quot;&gt;php와 composer 설정&lt;/h2&gt; &lt;p&gt;자신의 로컬 머신(host system)에 php와 composer가 설치되어있다면 이 단계는 추가하지 않으셔도 됩니다. 라라벨(Laravel) 프로젝트를 생성하기 위해 php와 composer를 가상 머신(guest system)에 설치할 예정입니다.&lt;/p&gt; &lt;p&gt;지금까지 만든 폴더에 php와 composer를 설치하는 앤서블 플레이북(Ansible Playbook)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- docker | | |-- tasks | | | |-- main.yml | |-- laradock | | |-- tasks | | | |-- main.yml | |-- php | | |-- tasks | | | |-- main.yml | |-- playbook.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;앤서블 플레이북(Ansible Playbook) 파일에도 새롭게 추가한 php의 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;laradock&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;추가한 앤서블 플레이북(Ansible Playbook)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt; 파일인 &lt;code class=&quot;highlighter-rouge&quot;&gt;php/tasks/main.yml&lt;/code&gt; 파일을 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Add php7.2 repo&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apt_repository&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ppa:ondrej/php'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install php&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2-mbstring&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2-xml&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;present&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update_cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;yes&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;check composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stat&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;path=/usr/local/bin/composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;composer_bin&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;download composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;get_url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://getcomposer.org/installer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tmp/installer&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cat /tmp/installer | php -- --install-dir=/usr/local/bin&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rename composer.phar to composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mv /usr/local/bin/composer.phar /usr/local/bin/composer&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;make composer executable&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/local/bin/composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;a+x&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;not composer_bin.stat.exists&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stop apache2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;update-rc.d apache2 disable&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;추가한 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;task&lt;/code&gt;를 하나하나 살펴봅시다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Add php7.2 repo&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apt_repository&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ppa:ondrej/php'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;php 7.2를 설치하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;apt&lt;/code&gt;에 php7.2의 저장소(repository)를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install php&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2-mbstring&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2-xml&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;present&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update_cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;yes&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;php7.2와 라라벨(Laravel) 설치 및 실행에 필요한 php모듈들을 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;check composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stat&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;path=/usr/local/bin/composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;composer_bin&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;composer 설치에 앞서 composer의 실행 파일이 존재하는지 체크한 후 그 결과를 &lt;code class=&quot;highlighter-rouge&quot;&gt;composer_bin&lt;/code&gt;에 저장합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;not composer_bin.stat.exists&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;여러 &lt;code class=&quot;highlighter-rouge&quot;&gt;task&lt;/code&gt;를 블록(block)으로 묶습니다. 또한 이 블록은 우리가 위에서 저장한 &lt;code class=&quot;highlighter-rouge&quot;&gt;composer_bin&lt;/code&gt;이 존재하지 않을 경우에만 실행합니다.&lt;/p&gt; &lt;p&gt;블록(block)안을 하나하나 살펴보겠습니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;download composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;get_url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://getcomposer.org/installer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tmp/installer&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;composer 설치 스크립트를 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/installer&lt;/code&gt; 파일로 다운로드 합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install composer&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cat /tmp/installer | php -- --install-dir=/usr/local/bin&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;composer 설치 스크립트를 이용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin&lt;/code&gt;에 composer를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rename composer.phar to composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mv /usr/local/bin/composer.phar /usr/local/bin/composer&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설치된 composer 파일(&lt;code class=&quot;highlighter-rouge&quot;&gt;composer.phar&lt;/code&gt;)의 이름을 &lt;code class=&quot;highlighter-rouge&quot;&gt;composer&lt;/code&gt;로 변경합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;make composer executable&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/local/bin/composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;a+x&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;composer가 실행 가능하도록 권한을 변경합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stop apache2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;update-rc.d apache2 disable&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;php 설치이후 가상 머신(guest system)을 재시작할시 &lt;code class=&quot;highlighter-rouge&quot;&gt;apache2&lt;/code&gt; 서버가 기동하여 같은 포트(port)를 사용하는 도커(Docker)가 기동되지 않는 문제가 생깁니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;apache2&lt;/code&gt; 서버가 가상 머신(guest system)이 재시작될때 재실행되지 않도록 설정합니다.&lt;/p&gt; &lt;h2 id=&quot;php와-composer-설치&quot;&gt;php와 composer 설치&lt;/h2&gt; &lt;p&gt;위에서 만든 앤서블 플레이북(Ansible Playbook)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;을 실행하여 php와 composer를 설치합니다. 우리는 이 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;만 실행할 수 있도록 태그(tag)를 지정했으므로 태크(tag) 옵션을 추가한 앤서블 플레이북(Ansible Playbook) 명령어를 아래와 같이 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#vagrant ssh&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ansible-playbook /vagrant/ansible/playbook.yml &lt;span class=&quot;nt&quot;&gt;--tags&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'php'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 명령어로 설치가 잘 되었는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#vagrant ssh&lt;/span&gt; php &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; composer &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;라라벨-프로젝트-생성&quot;&gt;라라벨 프로젝트 생성&lt;/h2&gt; &lt;p&gt;아래에 명령어로 라라벨(Laravel) 프로젝트를 생성합니다. 기존에 라라벨(Laravel) 프로젝트를 가지고 있는 분들은 이 부분을 건너뛰셔도 좋습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#vagrant ssh&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /vagrant composer create-project laravel/laravel app &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;라라벨-프로젝트-설정&quot;&gt;라라벨 프로젝트 설정&lt;/h2&gt; &lt;p&gt;우리는 이전 블로그(&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laradock/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;라라독&lt;/a&gt;)에서 라라독(Laradock) 설치 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;을 아래와 같이 작성하였습니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;change project folder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/lib/laradock/.env&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=*.*'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=/vagrant/app'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;replace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 부분에서 라라독(Laradock)의 workspace 도커(Docker)가 생성될 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant/app&lt;/code&gt; 폴더와 동기화되도록 설정하였습니다. 따라서 우리는 새로운 프로젝트를 &lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant&lt;/code&gt; 폴더에 &lt;code class=&quot;highlighter-rouge&quot;&gt;/app&lt;/code&gt;이라는 폴더명으로 생성하였습니다. 여러분이 기존에 라라벨(Laravel) 프로젝트를 가지고 계신다면 해당 프로젝트를 &lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant/app&lt;/code&gt; 폴더로 복사하거나 이전 시간에 만든 라라독(Laradock)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;중에 위에 해당하는 부분을 여러분의 라라벨(Laravel) 프로젝트 폴더로 지정하여 사용하시기 바랍니다.&lt;/p&gt; &lt;h2 id=&quot;라라벨-프로젝트-확인&quot;&gt;라라벨 프로젝트 확인&lt;/h2&gt; &lt;p&gt;이제 다시 localhost에 접속하면 아래와 같이 라라벨(Laravel)의 기본 화면이 보이는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/laravel.png&quot; alt=&quot;laravel first page&quot; /&gt;&lt;/p&gt; &lt;p&gt;라라벨(Laravel) 설정이 제대로 되지 않았다면 아래와 같은 500 에러 화면이 나옵니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/laravel_error.png&quot; alt=&quot;laravel 500 error page&quot; /&gt;&lt;/p&gt; &lt;p&gt;라라벨(Laravel) 설정중 아래에 항목들을 빼먹었는지 확인해봅니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;composer create-project laravel/laravel app&lt;/code&gt; 명령어로 라라벨(Laravel) 프로젝트를 새로 생성하였다면 아래에 설정은 자동으로 진행됩니다.&lt;/p&gt; &lt;p&gt;라라벨(Laravel) 프로젝트가 필요한 라이브러리를 설치했는가?&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer install &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라라벨(Laravel)의 환경 파일을 생성하였는가?&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp .env.example .env &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라라벨(Laravel)의 키를 생성하였는가?&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan key:generate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;phpmyadmin&quot;&gt;phpmyadmin&lt;/h2&gt; &lt;p&gt;데이터베이스를 다루기 위해 설치한 &lt;code class=&quot;highlighter-rouge&quot;&gt;phpmyadmin&lt;/code&gt;에 접속해 봅니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:8080&lt;/code&gt;으로 접속하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;phpmyadmin&lt;/code&gt;화면이 보입니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/phpmyadmin_login.png&quot; alt=&quot;phpmyadmin login&quot; /&gt;&lt;/p&gt; &lt;p&gt;아무 설정도 하지 않았으므로 아래에 정보를 입력하여 접속합니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server: mysql username: root password: root &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 접속한 후 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/phpmyadmin_change_password.png&quot; alt=&quot;phpmyadmin change password&quot; /&gt;&lt;/p&gt; &lt;p&gt;화면 가운데에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Change password&lt;/code&gt;를 눌러 자신이 원하는 패스워드로 변경합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/phpmyadmin_new_password.png&quot; alt=&quot;phpmyadmin new password&quot; /&gt;&lt;/p&gt; &lt;p&gt;상단 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Database&lt;/code&gt;를 눌러 라라벨(Laravel)과 연결하고자 하는 데이터베이스를 생성합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/phpmyadmin_new_database.png&quot; alt=&quot;phpmyadmin new database&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;라라벨-db-설정&quot;&gt;라라벨 DB 설정&lt;/h2&gt; &lt;p&gt;위에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;phpmyadmin&lt;/code&gt;을 사용해 만든 데이터베이스(Database)를 라라벨(Laravel) 프로젝트에 연결할 필요가 있습니다. 라라벨(Laravel) 프로젝트의 환경 파일인 &lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt;를 열면 아래와 같은 내용을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... &lt;span class=&quot;nv&quot;&gt;DB_CONNECTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mysql &lt;span class=&quot;nv&quot;&gt;DB_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;127.0.0.1 &lt;span class=&quot;nv&quot;&gt;DB_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3306 &lt;span class=&quot;nv&quot;&gt;DB_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;homestead &lt;span class=&quot;nv&quot;&gt;DB_USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;homestead &lt;span class=&quot;nv&quot;&gt;DB_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;secret ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 부분을 아래와 같이 수정합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;DB_DATABASE&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;DB_PASSWORD&lt;/code&gt; 부분은 여러분이 설정한 내용을 입력합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... &lt;span class=&quot;nv&quot;&gt;DB_CONNECTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mysql &lt;span class=&quot;nv&quot;&gt;DB_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mysql &lt;span class=&quot;nv&quot;&gt;DB_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3306 &lt;span class=&quot;nv&quot;&gt;DB_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;app &lt;span class=&quot;nv&quot;&gt;DB_USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root &lt;span class=&quot;nv&quot;&gt;DB_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*******&lt;/span&gt; ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 수정하였다면 아래에 라라벨(Laravel) 명령어를 통해 라라벨(Laravel)이 기본적으로 제공하는 사용자 테이블(User Table)을 생성해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan migrate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라라벨(Laravel)이 기본적으로 제공하는 사용자 테이블(User Table)을 사용하지 않을 예정이라면 라라벨(Laravel) 명령어를 통해 생성한 테이블을 제거합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan migrate:rollback &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;vagrant, 앤서블(Ansible), 라라독(Laradock)을 이용하여 라라벨(Laravel) 개발 환경을 구축해보았습니다. 또한 이번 개발 환경 구축을 통해 앤서블(Ansible)과 도커(Docker)를 살짝 맛보았습니다. 앤서블(Ansible)과 도커(Docker)를 잘 활용하면 말로만 듣던 &lt;code class=&quot;highlighter-rouge&quot;&gt;DevOps&lt;/code&gt;를 할 수 있는 개발자가 되는게 아닌가 싶습니다.&lt;/p&gt; &lt;p&gt;앞으로도 이 &lt;a href=&quot;https://dev-yakuza.github.io/environment/&quot; target=&quot;_blank&quot;&gt;개발 환경&lt;/a&gt; 카테고리에는 개발 환경 구축, 도커(Docker), 앤서블(Ansible)과 관련된 내용을 추가할 예정입니다. 또한 라라벨(Laravel) 개발에 관련한 블로그는 &lt;a href=&quot;https://dev-yakuza.github.io/laravel/&quot; target=&quot;_blank&quot;&gt;라라벨&lt;/a&gt; 카테고리에 작성할 예정이니 많이 참고하시기 바랍니다.&lt;/p&gt; &lt;p&gt;지금까지 만든 라라벨(Laravel) 개발 환경을 아래에 저장소(Repository)에서 확인하실 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dev-yakuza/laravel-devtool&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-devtool&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://laradock.io/documentation/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://laradock.io/documentation/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 지난 시간에 앤서블(Ansible)을 이용하여 라라독(Laradock)을 설치하였습니다. 이제 라라벨(Laravel)을 개발하기 위해 라라벨(Laravel)을 설치하고 라라벨(Laravel) 프로젝트를 생성해 보겠습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/environment/ansible-laravel.jpg"/></entry><entry xml:lang="ko"><title type="html">앤서블&amp;amp;라라독</title><link href="https://dev-yakuza.github.io/ko/environment/ansible-laradock/" rel="alternate" type="text/html" title="앤서블&amp;라라독"/><published>2018-12-05T00:00:00+09:00</published><updated>2018-12-10T17:38:20+09:00</updated><id>https://dev-yakuza.github.io/environment/ansible-laradock-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/environment/ansible-laradock/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;요즘 세상은 정말 없는게 없는거 같습니다. 우리가 생각하는 것들은 이미 세상 어딘가에 존재하고 공유되고 있네요. 라라독(Laradock)은 라라벨(Laravel)의 개발 환경에 필요한 요소들을 도커(Docker)로 만들고 관리하는 프로젝트입니다. 자세한 내용은 공식 사이트를 참고해주세요(&lt;a href=&quot;https://github.com/laradock/laradock/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/laradock/laradock/&lt;/a&gt;). 이 블로그에서는 라라독(Laradock)을 이용하여 라라벨(laravel) 개발 환경을 구성하는 방법에 대해서 설명하겠습니다.&lt;/p&gt; &lt;p&gt;이 블로그는 아래에 있는 블로그에 연재물입니다. 이해를 돕기 위해 아래에 블로그 리스트를 먼저 진행하시는걸 추천합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/vagrant-install-and-usage/&quot; target=&quot;_blank&quot;&gt;vagrant 설치 및 사용법&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/install-ansible/&quot; target=&quot;_blank&quot;&gt;앤서블 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-playbook/&quot; target=&quot;_blank&quot;&gt;앤서블 플레이북&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-docker/&quot; target=&quot;_blank&quot;&gt;앤서블&amp;amp;도커&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;라라독(Laradock)은 개발 환경을 구성하기 위해 다양한 도커(Docker)를 제공합니다. 따라서 자신이 개발하고자 하는 환경에 맞는 도커(Docker)를 선택하고 설치해야합니다. 우리는 아래에 항목으로 개발 환경을 구성할 예정입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;nginx&lt;/li&gt; &lt;li&gt;mysql&lt;/li&gt; &lt;li&gt;phpmyadmin&lt;/li&gt; &lt;li&gt;workspace&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;가상-머신-설정-수정&quot;&gt;가상 머신 설정 수정&lt;/h2&gt; &lt;p&gt;가상 머신(guest system) 설정을 수정하기 위해 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Vagrantfile&lt;/code&gt;을 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# -*- mode: ruby -*-&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# vi: set ft=ruby :&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:virtualbox&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;laravel-dev&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;forwarded_port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;guest: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;host: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;forwarded_port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;guest: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;host: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;after&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:up&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;trigger Docker after Vagrant Up&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run_remote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;inline: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sudo ansible-playbook /vagrant/ansible/playbook.yml --tags 'docker'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;가상 머신(guest system)에 virtualbox에서 표시되는 이름을 &lt;code class=&quot;highlighter-rouge&quot;&gt;vb.name&lt;/code&gt;을 사용하여 특정한 이름(&lt;code class=&quot;highlighter-rouge&quot;&gt;laravel-dev&lt;/code&gt;)를 부여했습니다. 이 부분은 실제 개발 환경 구성과는 무관하며 단지 virtualbox에 표시되는 이름을 알기 쉽게 하기 위함입니다.&lt;/p&gt; &lt;p&gt;vagrant의 &lt;code class=&quot;highlighter-rouge&quot;&gt;config.vm.network &quot;forwarded_port&quot;&lt;/code&gt;을 사용하여 로컬 머신(host system)의 포트를 가상 머신(guest system)의 포트로 포트포워드(port-forward)시켰습니다. 이제 로컬 머신(host system)의 포트를 통해 가상 머신(guest system)의 포트에 접근할 수 있습니다. 80 포트는 라라벨(Laravel) 프로젝트를 위해, 8080은 phpmyadmin에 접근하기 위해 연결하였습니다.&lt;/p&gt; &lt;p&gt;가상 머신(guest system)을 vagrant 명령어(&lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant halt&lt;/code&gt;)로 중지 시키고 다시 vagrant 명령어(&lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant up&lt;/code&gt;)으로 가상 머신(guest system)을 재시작 했을때, 이전 앤서블 플레이북(Ansible Playbook) 실행 스크립트는 프로비전 쉘(provision shell)에 있으므로 실행되지 않습니다. 또한 라라독(Laradock)의 도커(Docker)들은 항상 재시작(restart always)이 설정되어 있지 않아 가상 머신(guest system)이 재시작할시 도커(Docker)가 기동되지 않습니다. 그래서 우리는 Vagrantfile에 아래와 같이 추가하였습니다.&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;after&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:up&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;trigger Docker after Vagrant Up&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run_remote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;inline: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sudo ansible-playbook /vagrant/ansible/playbook.yml --tags 'docker'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 설정은 우리가 &lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant up&lt;/code&gt; 명령어로 가상 머신(guest system)을 시작한 후, 실행될 내용을 정의합니다. 이곳에 가상 머신(guest system)에서 앤서블 플레이북(Ansible Playbook)을 실행하도록 설정하였습니다. 앤서블 플레이북(Ansible Playbook) 명령어가 프로비전 쉘(provision shell)에 있는 명령어와 다르게 &lt;code class=&quot;highlighter-rouge&quot;&gt;--tags 'docker'&lt;/code&gt; 옵션을 사용하고 있습니다. 이 옵션을 사용하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt;로 태그(tag)된 명령어만 실행이 됩니다. 자세한 내용은 아래에 앤서블 플레이북(Ansible Playbook) 설정에서 다시 설명하도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;앤서블-플레이북에-라라독-설정&quot;&gt;앤서블 플레이북에 라라독 설정&lt;/h2&gt; &lt;p&gt;지난 시간에 이어 앤서블 플레이북(Ansible Playbook)을 사용하여 개발 환경 구성을 진행하겠습니다. 지금까지 구성한 폴더 구조는 아래와 같습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- docker | | |-- tasks | | | |-- main.yml | |-- playbook.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;여기에 라라독(Laradock)을 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;을 정의하기 위해 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;laradock/tasks/main.yml&lt;/code&gt; 파일을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- docker | | |-- tasks | | | |-- main.yml | |-- laradock | | |-- tasks | | | |-- main.yml | |-- playbook.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;앤서블 플레이북(Ansible Playbook)의 시작점인 &lt;code class=&quot;highlighter-rouge&quot;&gt;playbook.yml&lt;/code&gt; 파일을 열고 라라독(Laradock) &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;laradock&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;추가한 &lt;code class=&quot;highlighter-rouge&quot;&gt;laradock/tasks/main.yml&lt;/code&gt; 파일을 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git clone Laradock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;repo=https://github.com/Laradock/laradock.git dest=/vagrant/app/laradock/ version=master&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;copy Laradock environment file&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;src=/vagrant/app/laradock/env-example dest=/vagrant/app/laradock/.env&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;change mysql version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/app/laradock/.env&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;MYSQL_VERSION=*.*'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;MYSQL_VERSION=5.7'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;replace&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;change project folder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/lib/laradock/.env&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=*.*'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=/vagrant/app'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;replace&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dokcer compose Laradock(nginx, mysql, phpmyadmin, workspace)&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;docker_service&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;present&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;project_src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/app/laradock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nginx&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mysql&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;phpmyadmin&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;workspace&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;추가한 앤서블 플레이북(Ansible Playbook)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;을 살펴보겠습니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git clone Laradock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;repo=https://github.com/Laradock/laradock.git dest=/vagrant/app/laradock/ version=master&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;앤서블(Ansible)의 git 모듈을 사용하여 라라독(Laradock)의 저장소(repository)를 복사(clone)합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;copy Laradock environment file&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;src=/vagrant/app/laradock/env-example dest=/vagrant/app/laradock/.env&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라라독(Laradock)의 예제 설정 파일(&lt;code class=&quot;highlighter-rouge&quot;&gt;env-example&lt;/code&gt;)을 사용 가능한 설정 파일(&lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt;)로 복사합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;change mysql version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/app/laradock/.env&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;MYSQL_VERSION=*.*'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;MYSQL_VERSION=5.7'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;replace&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라라독(Laradock)의 환경 파일인 &lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 버전을 &lt;code class=&quot;highlighter-rouge&quot;&gt;5.7&lt;/code&gt;로 변경합니다. 최신 버전(&lt;code class=&quot;highlighter-rouge&quot;&gt;8.0&lt;/code&gt;)을 사용할 경우 라라벨(Laravel)에서 mysql에 접근시 아래와 같은 에러가 나옵니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;PDOException] SQLSTATE[HY000] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2054] The server requested authentication method unknown to the client &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;최신 mysql의 암호 인증 방식이 라라벨(Laravel)에서 지원이 안되는 문제가 있어 발생하는거 같습니다. 여러 해결책들이 있지만 mysql 8.0 기능을 딱히 쓰지 않는다면 5.7로 다운그레이드(Downgrade)하여 사용하시길 권장합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;change project folder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/lib/laradock/.env&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=*.*'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=/vagrant/app'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;replace&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라라독(Laradock)의 workspace 도커(Docker)는 우리가 만들 라라벨(Laravel) 프로젝트가 돌아갈 환경입니다. 이 도커(Docker)는 &lt;code class=&quot;highlighter-rouge&quot;&gt;APP_CODE_PATH_HOST&lt;/code&gt;를 참고하여 도커(Docker)를 빌드 및 기동시 해당 폴더를 동기화(sync)하여 라라벨(Laravel) 프로젝트를 기동시킵니다. 기본 설정은 &lt;code class=&quot;highlighter-rouge&quot;&gt;APP_CODE_PATH_HOST=../&lt;/code&gt;으로 라라독(Laradock)의 상위 폴더를 지칭하고 있습니다. 이 부분을 우리는 &lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant/app&lt;/code&gt; 부분으로 변경하였습니다. 여러분은 여러분의 라라벨(Laravel) 프로젝트의 폴더의 위치로 변경하거나 여러분의 라라벨(Laravel) 프로젝트의 폴더명을 app으로 변경하여 사용하시면 됩니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dokcer compose Laradock(nginx, mysql, phpmyadmin, workspace)&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;docker_service&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;present&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;restarted&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;project_src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/app/laradock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nginx&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mysql&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;phpmyadmin&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;workspace&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;앤서블(Ansible)의 도커 서비스(Docker Service) 모듈을 사용하여 우리가 필요한 도커(Docker)를 빌드하고 실행시킵니다. 또한 다른 명령어들과는 다르게 &lt;code class=&quot;highlighter-rouge&quot;&gt;tag&lt;/code&gt; 기능을 사용하고 있습니다. 앤서블 플레이북(Ansible Playbook)을 실행할때 &lt;code class=&quot;highlighter-rouge&quot;&gt;--tags&lt;/code&gt; 옵션을 사용하여 태그(tag)된 명령어중 실행하고 싶은 명령어들만을 실행할 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;--tags&lt;/code&gt; 옵션이 설정이 되지 않은 상태에서 앤서블 플레이북(Ansible Playbook) 명령어를 실행한다면 모든 명령어들이 전부 실행됩니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 모든 명령어 실행&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ansible-playbook /vagrant/ansible/playbook.yml &lt;span class=&quot;c&quot;&gt;# docker로 태그(tag)된 명령어만 실행&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ansible-playbook /vagrant/ansible/playbook.yml &lt;span class=&quot;nt&quot;&gt;--tags&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'docker'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;앤서블-플레이북-실행&quot;&gt;앤서블 플레이북 실행&lt;/h2&gt; &lt;p&gt;앤서블 플레이북(Ansible Playbook)에 라라독(Laradock)의 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt; 설정이 끝났습니다. 이제 앤서블 플레이북(Ansible Playbook)을 실행하여 라라독(Laradock)을 설치해 봅시다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ansible-playbook /vagrant/ansible/playbook.yml &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;라라독-설치-확인&quot;&gt;라라독 설치 확인&lt;/h2&gt; &lt;p&gt;앤서블 플레이북(Ansible Playbook)에 의해 라라독(Laradock)이 잘 설치되었는지 아래에 도커(Docker) 명령어를 통해 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker ps &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;또한, 로컬 머신(host system)에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost&lt;/code&gt;를 실행하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;404 Not Found&lt;/code&gt; 에러 화면이 표시됩니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;앤서블(Ansible)을 통해 라라독(Laradock)을 설치하여 라라벨(Laravel) 개발 환경을 준비하였습니다. 지금은 라라벨(Laravel) 프로젝트가 설정이 되어있지 않아 &lt;code class=&quot;highlighter-rouge&quot;&gt;404 Not Found&lt;/code&gt; 화면이 보이지만, 개발 환경은 성공적으로 설정하였습니다. 다음 시간에는 라라독(Laradock) 개발 환경에 라라벨(Laravel) 프로젝트를 설정해 보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://laradock.io/documentation/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://laradock.io/documentation/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 요즘 세상은 정말 없는게 없는거 같습니다. 우리가 생각하는 것들은 이미 세상 어딘가에 존재하고 공유되고 있네요. 라라독(Laradock)은 라라벨(Laravel)의 개발 환경에 필요한 요소들을 도커(Docker)로 만들고 관리하는 프로젝트입니다. 자세한 내용은 공식 사이트를 참고해주세요(https://github.com/laradock/laradock/). 이 블로그에서는 라라독(Laradock)을 이용하여 라라벨(laravel) 개발 환경을 구성하는 방법에 대해서 설명하겠습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/environment/ansible-laradock.jpg"/></entry></feed>