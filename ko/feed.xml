<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://dev-yakuza.github.io/ko/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/ko/" rel="alternate" type="text/html"/><updated>2019-04-23T18:37:26+09:00</updated><id>https://dev-yakuza.github.io/feed.xml</id><title type="html">Dreams the art through programming</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ko"><title type="html">장고(django) 설치하기</title><link href="https://dev-yakuza.github.io/ko/django/installation/" rel="alternate" type="text/html" title="장고(django) 설치하기"/><published>2019-04-23T00:00:00+09:00</published><updated>2019-04-23T18:31:19+09:00</updated><id>https://dev-yakuza.github.io/django/installation-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/django/installation/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;파이썬(python)의 장고(django)로 서버사이드를 개발해보려고 합니다. 이 블로그 포스트에서는 장고(django)로 개발하기 위한 설치와 설정에 대해서 설명합니다.&lt;/p&gt; &lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt; &lt;p&gt;장고(django)를 사용하기 위해서는 파이썬(python)을 설치해야합니다. 아래에 링크를 통해 자신의 OS에 맞는 파이썬(python)를 다운로드 받은 후 설치합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;파이썬(python) 다운로드: &lt;a href=&quot;https://www.python.org/downloads/&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;https://www.python.org/downloads/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;저는 주로 맥(Mac)을 사용하여 개발합니다. 또한 터미널로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;zsh&lt;/code&gt;를 사용하고 있습니다. 아래에 링크를 통해 맥(Mac)과 zsh를 사용하여 파이썬(python)을 설정하는 방법을 확인하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/mac-iterm-zsh/&quot; target=&quot;_blank&quot;&gt;맥(Mac) 개발 환경 구축(1) - iTerm과 zsh&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/mac-development-environment/&quot; target=&quot;_blank&quot;&gt;맥(Mac) 개발 환경 구축(3) - 개발 환경&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;위에 링크를 통해 zsh와 파이썬(python)을 설정하였다면 아래에 명령어로 버전을 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; Python 3.7.2 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 명령어를 통해 파이썬의 가상 환경(Virtual Environment)을 간단하게 사용할 수 있게 도와주는 &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt; 모듈을 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install virtualenv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 명령어를 통해 장고(django)를 사용하기 위한 환경을 만듭니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir server &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;server virtualenv venv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 명령어로 가상 환경(Virtual Environment)을 활성화시킵니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;venv/bin/activate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래 명령어로 장고(django)를 가상 환경(Virtual Environment)에 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install django &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설치가 완료되었다면 아래에 명령어로 장고(django)가 잘 설치되었는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;django-admin &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 2.2&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설치가 확인되었다면 아래에 명령어로 가상 환경(Virtual Environment)을 종료합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deactivate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;다시 아래에 명령어를 실행하여 가상 환경(Virtual Environment)가 정상적으로 종료되었는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;django-admin &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# zsh: command not found: django-admin&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 명령어를 통해 가상 환경(Virtual Environment)을 이해할 수 있을거 같습니다. 위에서 설치한 장고(django)는 가상 환경(Virtual Enviroment)에 설치하였습니다. 따라서 가상 환경(Virtual Environment)가 종료된 환경에서 장고(django) 명령어를 실행하면 장고(django)를 찾을 수 없다는 에러가 나옵니다. 이처럼 파이썬 가상 환경(python virtual environment)를 사용하여 파이썬(python) 개발 환경을 고립시킬 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;장고(django)를 사용하기 위해 파이썬(python)과 파이썬(python)의 가상 환경(Virtual Environment)을 구성하고 장고(django)를 설치해 보았습니다. 이로써 장고(django) 개발에 준비를 맞췄습니다. 앞으로는 장고를 사용하여 서버사이드를 개발하는 방법에 대해서 설명하도록 하겠습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 파이썬(python)의 장고(django)로 서버사이드를 개발해보려고 합니다. 이 블로그 포스트에서는 장고(django)로 개발하기 위한 설치와 설정에 대해서 설명합니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/django/2019/installation/background.png"/></entry><entry xml:lang="ko"><title type="html">특정 파일로 앱 열기</title><link href="https://dev-yakuza.github.io/ko/react-native/open-file-with-app/" rel="alternate" type="text/html" title="특정 파일로 앱 열기"/><published>2019-04-16T00:00:00+09:00</published><updated>2019-04-19T14:52:50+09:00</updated><id>https://dev-yakuza.github.io/react-native/open-file-with-app-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/open-file-with-app/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;웹이나 이메일에서 특정 파일을 다운로드 받아, 그 파일을 자신이 만든 앱으로 열고 싶을 때가 있습니다. 예를 들어 아래와 같이 pdf이나 엑셀 파일을 특정 앱으로 열도록 할 수 있습니다.&lt;/p&gt; &lt;p&gt;안드로이드인 경우&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/react-native/2019/open-file-with-app/android-open-with.png&quot; alt=&quot;안드로이드 - 파일과 함께 앱 열기&quot; /&gt; &lt;/div&gt; &lt;p&gt;iOS인 경우&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/react-native/2019/open-file-with-app/iphone-open-with.png&quot; alt=&quot;iOS - 파일과 함께 앱 열기&quot; /&gt; &lt;/div&gt; &lt;p&gt;위와 같이 특정 파일을 열때, 자신의 앱이 표시되도록 하는 방법과 그 파일을 활용하는 방법에 대해서 설명합니다. 이 블로그에서는 파일 확장자명이 &lt;code class=&quot;highlighter-rouge&quot;&gt;.temp&lt;/code&gt;인 경우 앱을 실행하는 방법을 다루겠습니다.&lt;/p&gt; &lt;h2 id=&quot;ios&quot;&gt;iOS&lt;/h2&gt; &lt;p&gt;iOS에서 파일이 앱으로 복사되었는지 확인하기 위해, 아래에 블로그를 통해 앱의 iTunes 파일 공유 기능을 활성화시킵니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-itunes-share-file/&quot; target=&quot;_blank&quot;&gt;iTunes 파일 공유 기능&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이제 iOS에서 특정 파일을 자신의 앱으로 열게 하기 위해, &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project name]/Info.plist&lt;/code&gt;를 열고 아래에 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;plist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- custom file start --&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UTExportedTypeDeclarations&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UTTypeConformsTo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;public.data&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UTTypeDescription&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Custom File&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UTTypeIdentifier&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- change custom file extension --&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;com.example.document.temp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UTTypeTagSpecification&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;public.filename-extension&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- change custom file extension --&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;temp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;CFBundleDocumentTypes&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;CFBundleTypeName&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Custom File&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;CFBundleTypeRole&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Editor&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;LSHandlerRank&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Owner&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;LSItemContentTypes&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- change custom file extension --&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;com.example.document.temp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- custom file end --&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;다시 한번 말씀 드리지만, 위에 내용은 &lt;code class=&quot;highlighter-rouge&quot;&gt;.temp&lt;/code&gt;로 끝나는 파일을 자신의 앱으로 열 경우에 사용하는 내용입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;!-- change custom file extension --&amp;gt;&lt;/code&gt;으로 주석이 달린 3곳을 자신이 원하는 파일로 수정하여 사용하시기 바랍니다.&lt;/p&gt; &lt;p&gt;우선 iTunes를 열어 파일 공유 기능이 활성화 되어 있는지 확인합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/open-file-with-app/itunes-no-file.png&quot; alt=&quot;iOS - itunes 파일 공유 기능 확인&quot; /&gt;&lt;/p&gt; &lt;p&gt;테스트를 위해 아무 파일이나 파일 확장자를 &lt;code class=&quot;highlighter-rouge&quot;&gt;.temp&lt;/code&gt;로 수정한 후 iOS에서 확인이 가능한 이메일 파일을 첨부하여 발송합니다. 이메일 앱을 열고 방금전 보낸 &lt;code class=&quot;highlighter-rouge&quot;&gt;.temp&lt;/code&gt;파일을 선택하고 오른쪽 위에 공유 버튼을 누르면 아래와 같이 자신의 앱으로 파일을 복사할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/react-native/2019/open-file-with-app/ios-copy-to.png&quot; alt=&quot;iOS - 파일과 함께 앱 열기&quot; /&gt; &lt;/div&gt; &lt;p&gt;위에서 자신의 앱을 선택하면 앱이 실행되며 파일이 복사됩니다.&lt;/p&gt; &lt;p&gt;다시 iTunes를 열어 자신의 앱을 선택하면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Inbox&lt;/code&gt; 폴더가 생성되어있는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/open-file-with-app/itunes-inbox-file.png&quot; alt=&quot;iOS - itunes 파일 복사 확인&quot; /&gt;&lt;/p&gt; &lt;p&gt;그 파일을 밖으로 복사하여 안에 내용을 확인하면 이메일로 보낸 파일과 동일함을 알 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/open-file-with-app/check-inbox-file.png&quot; alt=&quot;iOS - inbox 파일 확인&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;안드로이드&quot;&gt;안드로이드&lt;/h2&gt; &lt;p&gt;안드로이드는 iOS보다 조금 더 복잡합니다. 우선 &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/main/AndroidManifest.xml&lt;/code&gt;을 열고 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Intent Filter&lt;/code&gt;를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;manifest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;package=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.react_native_open_file_with&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.intent.action.MAIN&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;category&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.intent.category.LAUNCHER&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/intent-filter&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- custom file start --&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;intent-filter&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:icon=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@mipmap/ic_launcher&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:label=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/app_name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.intent.action.VIEW&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.intent.action.EDIT&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;category&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.intent.category.DEFAULT&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- change custom file extension --&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;data&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:mimeType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;*/*&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:host=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:pathPattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.*\\.temp&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/intent-filter&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- custom file end --&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;여기에서도 &lt;code class=&quot;highlighter-rouge&quot;&gt;.temp&lt;/code&gt;를 원하는 파일명으로 수정하여 사용하시기 바랍니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;MainActivity.java&lt;/code&gt; 파일을 열고 아래 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.ContentResolver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.pm.PackageInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.pm.PackageManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.database.Cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.net.Uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.provider.MediaStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.util.Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.FileOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.InputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.OutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ReactActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;importData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;File Import Error&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;importData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scheme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getScheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContentResolver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SCHEME_CONTENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContentResolver&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContentResolver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getContentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PackageManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getPackageManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getPackageName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PackageInfo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPackageInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;applicationInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dataDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStreamToFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/files/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;File Import Error&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getContentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContentResolver&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resolver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cursor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resolver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;moveToFirst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nameIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getColumnIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MediaStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MediaColumns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DISPLAY_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nameIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nameIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InputStreamToFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FileOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MainActivity&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;InputStreamToFile exception: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 내용은 파일을 선택하여 앱을 실행할 경우, 해당 파일을 자신의 앱 폴더로 복사하는 코드입니다. iOS에서는 자동으로 앱 폴더로 복사하지만, 안드로이드는 위와 같이 앱 폴더로 복사하도록 코딩해야 합니다.&lt;/p&gt; &lt;p&gt;iOS에서 테스트한 것과 동일하게 아무 파일이나 파일 확장자를 &lt;code class=&quot;highlighter-rouge&quot;&gt;.temp&lt;/code&gt;로 수정한 후 안드로이드에서 확인이 가능한 이메일 파일을 첨부하여 발송합니다. 이메일 앱을 열고 방금전 보낸 &lt;code class=&quot;highlighter-rouge&quot;&gt;.temp&lt;/code&gt;파일을 선택하거나, 다운로드 받은 파일을 선택하면 아래와 같이 자신의 앱으로 파일을 복사할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/react-native/2019/open-file-with-app/android-copy-to.png&quot; alt=&quot;안드로이드 - 파일과 함께 앱 열기&quot; /&gt; &lt;/div&gt; &lt;p&gt;위에서 자신의 앱을 선택하면 앱이 실행되며 파일이 복사됩니다. 파일은 &lt;code class=&quot;highlighter-rouge&quot;&gt;/data/user/0/[app package name]/files&lt;/code&gt;에 저장이 됩니다.&lt;/p&gt; &lt;h2 id=&quot;활용&quot;&gt;활용&lt;/h2&gt; &lt;p&gt;이렇게 자신에 앱으로 복사한 파일을 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;를 사용하여 활용하는 방법에 대해서 알아봅시다. 여기서 소개할 소스코드는 RN(React Native)에 아래에 내용이 설정된 프로젝트입니다. 각각에 대해 궁금하신 분들은 아래에 링크를 확인하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/root-import/&quot; target=&quot;_blank&quot;&gt;RN(React Native)에서 root import하기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-navigation/&quot; target=&quot;_blank&quot;&gt;react-navigation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/nativebase/&quot; target=&quot;_blank&quot;&gt;NativeBase&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;전체 소스는 아래에 저장소(Repository)에서 확인할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;github 저장소(Repository): &lt;a href=&quot;https://github.com/dev-yakuza/react_native_open_file_with&quot; target=&quot;_blank&quot;&gt;react_native_open_file_with&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;RN(React Native)에 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;를 설치하는 방법은 아래에 블로그를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-fs/&quot; target=&quot;_blank&quot;&gt;파일 시스템 사용&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;전체 소스에서 중요 부분만 설명하도록 하겠습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_DOCUMENT_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocumentDirectoryPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;복사된 파일은 &lt;code class=&quot;highlighter-rouge&quot;&gt;RNFS.DocumentDirectoryPath&lt;/code&gt;에 저장됩니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_loadFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Platform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ios'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_moveInboxFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_DOCUMENT_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;srcFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ReadDirItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ReadDirItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;srcFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ReadDirItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.temp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;해당 폴더에 파일을 읽고 파일인 경우 파일 리스트에 저장합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;iOS&lt;/code&gt;인 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;RNFS.DocumentDirectoryPath&lt;/code&gt;안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Inbox&lt;/code&gt; 폴더에 저장됩니다. 따라서 파일을 읽기 전에 아래와 같이 해당 파일들을 복사합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_moveInboxFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inboxFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_DOCUMENT_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/Inbox'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inboxFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inboxFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RNFS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_DOCUMENT_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 파일들은 아래와 같은 정보를 가지고 있습니다. 필요한 정보를 자유롭게 사용하시면 됩니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ios-시뮬레이터-테스트&quot;&gt;iOS 시뮬레이터 테스트&lt;/h3&gt; &lt;p&gt;지금까지 작업한 내용을 iOS 시뮬레이터에서 확인하는 방법에 대해서 설명합니다. 시뮬레이터가 기동중인 상태에서 아래에 명령어로 시뮬레이터 아이디를 얻습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun simctl list | egrep &lt;span class=&quot;s1&quot;&gt;'(Booted)'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;제가 작성한 저장소(Repository)에서는 npm 명령어로 만들어 두었습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;pacakage.json&lt;/code&gt;을 확인해 주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;github 저장소(Repository): &lt;a href=&quot;https://github.com/dev-yakuza/react_native_open_file_with&quot; target=&quot;_blank&quot;&gt;react_native_open_file_with&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run get-id iPhone X &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5C0277D7-12FA-42DE-AD6D-AC3C74324B4C&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Booted&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;명령어를 사용하면 위와 같이 시뮬레이터의 아이디를 얻을 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /Users/[user name]/Library/Developer/CoreSimulator/Devices/5C0277D7-12FA-42DE-AD6D-AC3C74324B4C/data/Containers/Data/Application/ open &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;해당 폴더로 이동하고 폴더안을 보면 아래와 같이 현재 날짜의 앱을 찾을 수 있습니다. 앱 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Documents&lt;/code&gt;에 파일을 복사합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/open-file-with-app/simulator-files.png&quot; alt=&quot;시뮬레이터 파일&quot; /&gt;&lt;/p&gt; &lt;p&gt;그리고 앱을 재실행 또는 제 저장소(Repository)로 테스트를 하시는 분은 오른쪽 위에 새로고침 버튼을 선택합니다.&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/react-native/2019/open-file-with-app/simulator-file-viewer.png&quot; alt=&quot;iOS - 시뮬레이터 파일 표시&quot; /&gt; &lt;/div&gt; &lt;p&gt;그러면 위와 같이 파일이 잘 표시되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;h3 id=&quot;안드로이드-테스트&quot;&gt;안드로이드 테스트&lt;/h3&gt; &lt;p&gt;저는 안드로이드는 디바이스에서 테스트했습니다. 안드로이드도 아래와 같이 파일이 표시되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/react-native/2019/open-file-with-app/android-file-viewer.png&quot; alt=&quot;안드로이드 - 디바이스 파일 표시&quot; /&gt; &lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;요즘은 모든 파일을 서버에 저장하고 활용하기 때문에 이와 같은 처리가 필요없는 경우가 많습니다. 그래도 잘 알아두면 유용하게 사용하실 수 있을거 같네요. 이로써 특정 파일로 앱을 실행하고 활용하는 방법에 대해서 알아보았습니다. 특정 파일로 앱 실행에 어려움을 겪는 분들에게 참고가 되면 좋겠습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 웹이나 이메일에서 특정 파일을 다운로드 받아, 그 파일을 자신이 만든 앱으로 열고 싶을 때가 있습니다. 예를 들어 아래와 같이 pdf이나 엑셀 파일을 특정 앱으로 열도록 할 수 있습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2019/open-file-with-app/background.jpg"/></entry><entry xml:lang="ko"><title type="html">RN(React Native)에서 root import하기</title><link href="https://dev-yakuza.github.io/ko/react-native/root-import/" rel="alternate" type="text/html" title="RN(React Native)에서 root import하기"/><published>2019-04-15T00:00:00+09:00</published><updated>2019-04-16T16:43:06+09:00</updated><id>https://dev-yakuza.github.io/react-native/root-import-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/root-import/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;이번 블로그는 RN(React Native)만의 문제는 아니고, React로 개발을 하다보면 격는 문제를 해결해 보려고 합니다. React로 개발할 때, 프로젝트 구조를 아무리 이쁘게 만들어도 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt;할 때, 길어지는 &lt;code class=&quot;highlighter-rouge&quot;&gt;../../../&lt;/code&gt; 폴더 참조 문제는 해결되지 않는거 같습니다. 이 블로그에서는 길어지는 이 폴더 참조 문제를 조금이라도 해결해 보고자 작성하였습니다. RN(React Native) 사용자뿐만 아니라 Reactjs 개발자분들도 참고가 되시면 좋겠습니다.&lt;/p&gt; &lt;h2 id=&quot;폴더-구조&quot;&gt;폴더 구조&lt;/h2&gt; &lt;p&gt;저는 RN(React Native)로 개발을 할 때, 아래와 같은 폴더 구조를 사용하고 있습니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- android/ |-- ios/ |-- src/ | |-- @types/ | |-- Assets/ | | |-- Images/ | |-- Component/ | | |-- BannerContainer/ | | | |-- index.tsx | | |-- LoadingContainer/ | | | |-- index.tsx | |-- Screen/ | | |-- Home/ | | | |-- SomeContainer/ | | | | |-- index.tsx | | | |-- SomeContainer2/ | | | | |-- SomeContainerItem/ | | | | | |-- index.tsx | | | | |-- index.tsx | | | |-- index.tsx | |-- Util/ |-- index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;처음에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Component&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Container&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Screen&lt;/code&gt;으로 나누어 쓰다가 &lt;code class=&quot;highlighter-rouge&quot;&gt;Container&lt;/code&gt;가 특정 &lt;code class=&quot;highlighter-rouge&quot;&gt;Screen&lt;/code&gt;에 종속적으로 사용되지, 여러 &lt;code class=&quot;highlighter-rouge&quot;&gt;Screen&lt;/code&gt;에서 사용되는 경우가 적었습니다. 그래서 여러 &lt;code class=&quot;highlighter-rouge&quot;&gt;Screen&lt;/code&gt;에서 공통적으로 사용되는 부분을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Component&lt;/code&gt;로 구분하고 종속적인 Container(Component)는 Screen폴더 하위에 두고 사용하고 있습니다. 물론 &lt;code class=&quot;highlighter-rouge&quot;&gt;Component&lt;/code&gt;하위에도 Component(Container)에 종속된 Component들이 하위에 존재할 수 있습니다.&lt;/p&gt; &lt;p&gt;이렇게 한 이유는 두가지 정도가 있는데 하나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Screen&lt;/code&gt;에 종속된 &lt;code class=&quot;highlighter-rouge&quot;&gt;Container&lt;/code&gt;를 찾기위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Container&lt;/code&gt; 폴더까지가서 찾아보고 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;Component&lt;/code&gt; 폴더까지 가서 찾아봐야하는 불편함이 있었습니다. 지금은 종속된 Container는 Screen폴더 하위에 있으므로 찾는 수고가 덜해졌습니다. 또 다른 하나는 복사 붙여넣기를 편하게 하기 위해서 입니다. 혼자 여러 앱을 취미로 개발하다보니 한 프로젝트에서 사용하는 Component를 복사해서 다른 프로젝트로 붙여넣는 경우가 많이 발생했습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Container&lt;/code&gt; 폴더를 따로 들고 있는 때는, &lt;code class=&quot;highlighter-rouge&quot;&gt;Screen&lt;/code&gt;을 복사하게 된다면 Screen 복사하고 포함된 Container 복사하고 Component를 복사했어야 했었습니다. 지금은 Screen 하나만 복사하면 포함되어 있는 Container들이 같이 복사가 되어 좀 더 편하게 복사-붙여넣기를 할 수 있게 되었습니다. 이런 불편함을 해소하고자 위와 같은 프로젝트 구조를 가지게 되었습니다. 참고로 Reactjs는 아래와 같은 폴더 구조를 사용하고 있습니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- android/ |-- ios/ |-- src/ | |-- @types/ | |-- Assets/ | | |-- Images/ | |-- Component/ | | |-- BannerContainer/ | | | |-- index.tsx | | |-- LoadingContainer/ | | | |-- index.tsx | |-- Feature/ | | |-- Login/ | | | |-- SomeContainer/ | | | | |-- index.tsx | | | |-- SomeContainer2/ | | | | |-- SomeContainerItem/ | | | | | |-- index.tsx | | | | |-- index.tsx | | | |-- index.tsx | |-- Util/ |-- index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Screen&lt;/code&gt;이라고 관리하던 폴더를 &lt;code class=&quot;highlighter-rouge&quot;&gt;Feature&lt;/code&gt;라는 폴더명으로 관리하고 있습니다. 여러분들은 어떤 폴더 구조들을 사용하고 계신가요? 많은 분들이 참고할 수 있게 제일 하단에 있는 코멘트에 여러분에 폴더 구조를 공유해 주세요!(저도 참고하고 싶어요ㅠㅠ)&lt;/p&gt; &lt;h2 id=&quot;문제점&quot;&gt;문제점&lt;/h2&gt; &lt;p&gt;이렇게 폴더 구조를 가지고 가다보니 &lt;code class=&quot;highlighter-rouge&quot;&gt;Screen&lt;/code&gt;(&lt;code class=&quot;highlighter-rouge&quot;&gt;Feature&lt;/code&gt;) 하위에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Container&lt;/code&gt;가 있고 이 Container가 다른 &lt;code class=&quot;highlighter-rouge&quot;&gt;Container&lt;/code&gt;를 가지고 있고 최종 Container가 &lt;code class=&quot;highlighter-rouge&quot;&gt;Component&lt;/code&gt;를 가지게 된다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt;를 할 때, &lt;code class=&quot;highlighter-rouge&quot;&gt;../../..&lt;/code&gt;가 한없이 길어지는 폴더 참조 문제가 발생하게 되었습니다. 요즘은 vscode가 자동으로 잘 작성해줘서 편해지긴 했지만, 여전히 끝도 없는 &lt;code class=&quot;highlighter-rouge&quot;&gt;../../../&lt;/code&gt;은 보기에도 불편하게 되었습니다.&lt;/p&gt; &lt;p&gt;또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Screen&lt;/code&gt;에 종속되어 있던 &lt;code class=&quot;highlighter-rouge&quot;&gt;Container&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Component&lt;/code&gt;가 공통적으로 사용되게 되어 &lt;code class=&quot;highlighter-rouge&quot;&gt;Component&lt;/code&gt; 폴더로 이동시키거나 반대로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Component&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;Screen&lt;/code&gt;에 종속되어 &lt;code class=&quot;highlighter-rouge&quot;&gt;Screen&lt;/code&gt; 하위 폴더로 이동시킬 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt;의 폴더 참조 위치가 변경되기 때문에 일일이 수정해주어야 하는 불편함이 있었습니다.&lt;/p&gt; &lt;h2 id=&quot;해결책&quot;&gt;해결책&lt;/h2&gt; &lt;p&gt;저는 이 문제를 해결하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;babel-plugin-root-import&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;의 설정으로 root폴더부터 참조하도록 수정하였습니다. 예를 들어 &lt;code class=&quot;highlighter-rouge&quot;&gt;../../../Component/BannerContainer&lt;/code&gt; 였던 부분이 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/Component/BannerContainer&lt;/code&gt;로 참조 가능하게 되었습니다. 아래에 설정하는 방법에 대해 설명합니다.&lt;/p&gt; &lt;h3 id=&quot;babel-plugin-root-import&quot;&gt;babel-plugin-root-import&lt;/h3&gt; &lt;p&gt;root 폴더부터 참조할 수 있게 하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;babel-plugin-root-import&lt;/code&gt;를 아래에 명령어로 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install babel-plugin-root-import &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;RN(React Native) 프로젝트의 &lt;code class=&quot;highlighter-rouge&quot;&gt;babel.config.js&lt;/code&gt;를 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;presets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'module:metro-react-native-babel-preset'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'babel-plugin-styled-components'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'babel-plugin-root-import'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rootPathPrefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rootPathSuffix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'src'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;제 폴더 구조를 보면 알수 있지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; 폴더에 모든 소스를 넣고 관리하고 있습니다. 따라서 저는 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; 폴더가 아닌 &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; 폴더를 기준으로 동작하도록 설정하였습니다.&lt;/p&gt; &lt;h3 id=&quot;typescript&quot;&gt;typescript&lt;/h3&gt; &lt;p&gt;typescript를 사용하지 않는다면 위에 설정만으로 해결됩니다. 저는 RN(React Native) 프로젝트에서 typescript를 사용하므로 typescript가 root 폴더를 인식하도록 설정해주어야 합니다. RN(React Native)에 typescript를 적용하는 방법은 아래에 블로그를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;RN(React Native) 프로젝트의 &lt;code class=&quot;highlighter-rouge&quot;&gt;tsconfig.json&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;baseUrl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;are&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;baseUrl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;paths&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;~/*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`~/foo/bar`&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&amp;lt;baseUrl&amp;gt;/foo/bar`&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이로써 RN(React Native) 프로젝트에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt;할 때, 길고 길던 &lt;code class=&quot;highlighter-rouge&quot;&gt;../../../../&lt;/code&gt;와 작별을 고하게 되었습니다. 좀 더 프로젝트를 깔끔하게 관리하게 된거 같아 기분이 좋네요. 여러분도 더 늦기 전에 이 부분을 추가하시길 권장합니다!&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 이번 블로그는 RN(React Native)만의 문제는 아니고, React로 개발을 하다보면 격는 문제를 해결해 보려고 합니다. React로 개발할 때, 프로젝트 구조를 아무리 이쁘게 만들어도 import할 때, 길어지는 ../../../ 폴더 참조 문제는 해결되지 않는거 같습니다. 이 블로그에서는 길어지는 이 폴더 참조 문제를 조금이라도 해결해 보고자 작성하였습니다. RN(React Native) 사용자뿐만 아니라 Reactjs 개발자분들도 참고가 되시면 좋겠습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2019/root-import/background.jpg"/></entry><entry xml:lang="ko"><title type="html">RN(Reacct Native)에서 커스텀 폰트 사용하기</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-custom-font/" rel="alternate" type="text/html" title="RN(Reacct Native)에서 커스텀 폰트 사용하기"/><published>2019-04-10T00:00:00+09:00</published><updated>2019-04-11T14:31:14+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-custom-font-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-custom-font/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;앱을 개발하다보면 특정 폰트를 적용할 경우가 발생합니다. 이 블로그에서는 RN(React Native)에 어떻게 특정 폰트를 적용하고 사용하는지 설명하려고 합니다. 저는 보통 구글의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Noto Sans&lt;/code&gt; 폰트를 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;구글 Noto KR 폰트: &lt;a href=&quot;https://fonts.google.com/specimen/Noto+Sans+KR&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://fonts.google.com/specimen/Noto+Sans+KR&lt;/a&gt;&lt;/li&gt; &lt;li&gt;구글 Noto JP 폰트: &lt;a href=&quot;https://fonts.google.com/specimen/Noto+Sans+JP&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://fonts.google.com/specimen/Noto+Sans+JP&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이 블로그에서는 폰트가 적용되었는지 확실하게 구분되게 하기 위해 아래에 폰트를 적용하고 사용하는 방법에 대해서 설명합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Dancing Script: &lt;a href=&quot;https://fonts.google.com/specimen/Dancing+Script&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://fonts.google.com/specimen/Dancing+Script&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;폰트-다운로드&quot;&gt;폰트 다운로드&lt;/h2&gt; &lt;p&gt;RN(React Native)에서 사용하고자 하는 폰트를 다운로드합니다. 여기에서는 개요에서 소개한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Dancing Script&lt;/code&gt; 폰트를 사용합니다. 아래에 링크를 눌러 폰트 페이지로 이동합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Dancing Script: &lt;a href=&quot;https://fonts.google.com/specimen/Dancing+Script&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://fonts.google.com/specimen/Dancing+Script&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;위에 링크를 선택하면 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/google-dancing-script-font-site.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 적용 - google dancing script&quot; /&gt;&lt;/p&gt; &lt;p&gt;오른쪽 위에 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT THIS FONT&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/font-select.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 적용 - 폰트 선택&quot; /&gt;&lt;/p&gt; &lt;p&gt;그러면 위와 같이 오른쪽 하단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Family Selected&lt;/code&gt;가 활성화 됩니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Family Selected&lt;/code&gt;를 클릭합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/download-font.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 적용 - 폰트 다운로드&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같은 화면이 보이면, 오른쪽 위에 있는 다운로드 버튼을 눌러 폰트를 다운로드 합니다.&lt;/p&gt; &lt;h2 id=&quot;폰트-적용&quot;&gt;폰트 적용&lt;/h2&gt; &lt;p&gt;다운로드 받은 폰트를 각 OS에 맞게 설정해야 합니다. 우선 공통된 js 소스부터 수정하도록 하겠습니다.&lt;/p&gt; &lt;h3 id=&quot;javascript-소스-수정&quot;&gt;javascript 소스 수정&lt;/h3&gt; &lt;p&gt;폰트를 적용하기 위해 아래와 같이 소스 코드를 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Platform&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'styled-components/native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instructions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Platform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Press Cmd+R to reload,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Cmd+D or shake for dev menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Double tap R on your keyboard to reload,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Shake or press menu button for dev menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` flex: 1; justify-content: center; align-items: center; background-color: #F5FCFF; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Welcome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` font-size: 20px; text-align: center; margin: 10px; font-family: 'DancingScript-Bold'; // &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; Add here `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Instructions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` text-align: center; color: #333333; margin-bottom: 5px; font-family: 'DancingScript-Regular'; // &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; Add here `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Welcome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Welcome&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Native&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Welcome&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Instructions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;To&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;started&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;edit&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Instructions&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Instructions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;instructions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Instructions&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Container&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;저는 보통 RN(React Naitve) 프로젝트에 &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;를 사용하여 개발하고 있습니다. 그래서 소스의 형태가 조금 다를 수 있습니다. RN(React Native) 프로젝트에 &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;를 사용하는 방법에 대해서 궁금하신 분들은 아래에 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt; &lt;p&gt;RN(React Native) 프로젝트를 실행하면 아래와 같이 기본 폰트가 적용된 화면을 볼 수 있습니다.(또는 폰트를 찾을수 없어 에러가 발생합니다.)&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/ios-basic-font.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 ios 적용 - 기본 폰트&quot; /&gt; &lt;/div&gt; &lt;p&gt;다운로드 받은 폰트 파일을 &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/Fonts&lt;/code&gt; 폴더를 만들고 그 안에 복사합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/ios-copy-fonts.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 ios 적용 - 폰트 복사&quot; /&gt;&lt;/p&gt; &lt;p&gt;폰트 파일을 복사하였다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/project_name.xcodeproj&lt;/code&gt;이나 &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/project_name.xcworkspace&lt;/code&gt;을 실행하여 xcode를 실행합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/ios-create-reference.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 ios 적용 - xcode에 폰트 넣기&quot; /&gt;&lt;/p&gt; &lt;p&gt;왼쪽 상단에 자신의 프로젝트명을 오른쪽 클릭하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Files to &quot;project_name&quot;...&lt;/code&gt;을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/ios-add-font.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 ios 적용 - xcode에 폰트 추가&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같이 파일 선택화면이 나오면 우리가 추가한 &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/Fonts&lt;/code&gt; 폴더를 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Create folder references&lt;/code&gt;를 선택한 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;Add&lt;/code&gt;를 눌러 폴더를 추가합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/ios-add-font-to-info-plist.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 ios 적용 - Info.plist에 폰트 추가&quot; /&gt;&lt;/p&gt; &lt;p&gt;왼쪽 상단에 프로젝트명을 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;TARGETS&lt;/code&gt;도 자신의 프로젝트명을 선택합니다. 상단 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Info&lt;/code&gt;를 선택하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;Info.plist&lt;/code&gt;의 내용을 확인합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Info.plist&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Fonts provided by application&lt;/code&gt;을 추가하고 위와 같이 폰트 파일을 추가합니다.&lt;/p&gt; &lt;p&gt;RN(React Native) 프로젝트를 다시 실행하면 아래와 같이 폰트 파일이 적용된 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/ios-font-applied.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 ios 적용&quot; /&gt; &lt;/div&gt; &lt;h3 id=&quot;안드로이드&quot;&gt;안드로이드&lt;/h3&gt; &lt;p&gt;안드로이드에서 RN(React Native) 프로젝트를 실행하면 아래와 같이 기본 폰트가 적용된 화면을 볼 수 있습니다.&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/android-basic-font.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 안드로이드 적용 - 기본 폰트&quot; /&gt; &lt;/div&gt; &lt;p&gt;안드로이드는 iOS보다 간단하게 적용할 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/main/assets/fonts&lt;/code&gt; 폴더를 생성한 후 다운로드 받은 폰트 파일을 추가합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/android-add-font.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 안드로이드 적용 - 폰트 추가&quot; /&gt;&lt;/p&gt; &lt;p&gt;그리고 RN(React Native) 프로젝트를 실행하면 아래와 같이 폰트가 적용된 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/react-native/2019/react-native-custom-font/android-font-applied.png&quot; alt=&quot;RN(React Native) 커스텀 폰트 안드로이드 적용 - 커스텀 폰트 적용&quot; /&gt; &lt;/div&gt; &lt;h2 id=&quot;github-저장소repository&quot;&gt;Github 저장소(Repository)&lt;/h2&gt; &lt;p&gt;위에서 작업한 내용을 github에 공개하였습니다. 혹시 잘 안되시는 분들은 저장소(Repository)를 복사(Clone)하셔서 직접 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;github 저장소(Repository): &lt;a href=&quot;https://github.com/dev-yakuza/react_native_custom_font&quot; target=&quot;_blank&quot;&gt;react_native_custom_font&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이로써 RN(React Native) 프로젝트에 커스텀 폰트를 적용하는 방법에 대해서 알아보았습니다. 앱을 아름답게 표현하기 위해서는 역시 폰트도 굉장히 중요한거 같네요. 여러분도 커스텀 폰트 적용으로 앱을 좀 더 아릅답게 만들어보세요!&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 앱을 개발하다보면 특정 폰트를 적용할 경우가 발생합니다. 이 블로그에서는 RN(React Native)에 어떻게 특정 폰트를 적용하고 사용하는지 설명하려고 합니다. 저는 보통 구글의 Noto Sans 폰트를 사용하고 있습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2019/react-native-custom-font/background.jpg"/></entry><entry xml:lang="ko"><title type="html">「일단공부」 앱 개발기(RN, React Native)</title><link href="https://dev-yakuza.github.io/ko/ildangongbu/development-journal/" rel="alternate" type="text/html" title="「일단공부」 앱 개발기(RN, React Native)"/><published>2019-03-20T00:00:00+09:00</published><updated>2019-03-22T11:51:03+09:00</updated><id>https://dev-yakuza.github.io/ildangongbu/development-journal-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/ildangongbu/development-journal/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;RN(React Native)를 통해 벌써 3번째 앱을 제작했네요. 아래는 이전 앱에 제작기입니다. 궁금하신 분들은 아래 링크를 통해 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/blaboo/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBoo 앱 개발기(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/kumoncho/development-journal/&quot; target=&quot;_blank&quot;&gt;Kumoncho 앱 개발기(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;일본에서 단어 공부를 하려고 단어책을 사고, 전철에서 단어 공부를 하는데 책도 무겁고 가방에서 꺼냈다가 넣다가도 귀찮았습니다. 그때, 회사를 그만두신 선배 피씨에서 단어를 정리한 파일을 발견했고, 이걸로 앱을 만들면 어떻까 싶어 선배에게 허락을 받고 이번 앱을 제작하게 되었습니다.&lt;/p&gt; &lt;h2 id=&quot;일단-공부란&quot;&gt;일단 공부란?&lt;/h2&gt; &lt;p&gt;JLPT 일본어 단어를 레벨별로 공부할 수 있으며, 하루하루 공부할 수 있는 분량과 복습 기능으로 단어 암기를 도와주는 앱입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;일단 공부 소개 페이지: &lt;a href=&quot;https://dev-yakuza.github.io/app/ildangongbu/&quot; target=&quot;_blank&quot;&gt;일단 공부&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;아래는 앱을 다운로드 받을 수 있는 링크입니다.&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/id1456091125&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;JLPT 일본어 단어 앱, 일단 공부 ios 다운로드&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.ildangongbu&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;JLPT 일본어 단어 앱, 일단 공부 안드로이드 다운로드&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;h2 id=&quot;왜-만들게-되었나&quot;&gt;왜 만들게 되었나?&lt;/h2&gt; &lt;p&gt;개요에서도 잠깐 이야기 했지만, 책을 들고 일본의 전철(지옥철)에서 공부하기가 너무 어렵습니다. 그리고 책은 단어와 의미가 같이 보여서, 의식적으로 의미를 안보려고 노력하지만 자꾸 의미가 눈에 들어옵니다. 아직 한자를 잘 모를때는 어떻게 발음해야 하는지 잘 모를때도 있습니다. 그리고 단어 공부는 반복해서 봐야하는데 이놈의 책으로 반복해서 보자니 앞 챕터에서 계속 머물게 됩니다. 이런 문제들을 해결하고자 간단한 JLPT 일본어 단어 앱을 제작하게 되었습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/ildangongbu/background.png&quot; alt=&quot;JLPT 일본어 단어 앱, 일단 공부&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;앱-기획&quot;&gt;앱 기획&lt;/h2&gt; &lt;p&gt;일단 네이밍은 일본어 단어 공부의 &lt;code class=&quot;highlighter-rouge&quot;&gt;일&lt;/code&gt;본어 &lt;code class=&quot;highlighter-rouge&quot;&gt;단&lt;/code&gt;어 &lt;code class=&quot;highlighter-rouge&quot;&gt;공부&lt;/code&gt;에서 따왔습니다. 이중적인 의미로 &lt;code class=&quot;highlighter-rouge&quot;&gt;일단 공부하자&lt;/code&gt;라는 의미도 포함하고 있습니다.&lt;/p&gt; &lt;p&gt;일단 공부의 MVP(Minimum Viable Product: 최소 기능 제품)는 아래와 같이 정의했습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;JLPT 일본어 단어를 레벨별로 볼 수 있다.&lt;/li&gt; &lt;li&gt;하루하루 공부할 분량(15 단어)로 단어를 볼 수 있다.&lt;/li&gt; &lt;li&gt;일본어 단어가 의미가 보이지 않는 상태로 리스트로 보인다.&lt;/li&gt; &lt;li&gt;의미를 보기 위한 버튼이 있고 읽는 방법(히라가나/가타카나)과 의미가 보인다.&lt;/li&gt; &lt;li&gt;읽는 방법을 선택하면 단어를 읽어준다.&lt;/li&gt; &lt;li&gt;공부한 단어를 테스트를 통해 복습한다.&lt;/li&gt; &lt;li&gt;테스트시 틀린 단어를 보여준다.&lt;/li&gt; &lt;li&gt;레벨별 또는 전체 단어를 복습할 수 있는 기능을 추가한다.&lt;/li&gt; &lt;li&gt;복습 기능에는 자주 틀리는 단어를 자주 보여주는 로직을 넣는다.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;이렇게 정리하다보니 꽤 많은 기능이 있는 것처럼 보이네요. 최대한 단순하게 만들기 위해 노력했지만 역시 제가 쓰기 편한 앱을 만들다 보니 여러 기능이 추가되었습니다. 사실 더 많은 기능을 넣고 싶었지만, 우선 MVP, MVP!&lt;/p&gt; &lt;h2 id=&quot;디자인&quot;&gt;디자인&lt;/h2&gt; &lt;p&gt;역시 디자인 센스가 제로네요…어떤 디자인이 좋은가 여러 패턴을 만들고 여러 색상을 넣어서 도전해봤지만…아직도 디자인은 어렵습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/ildangongbu/development-journal/ildangongbu-design.png&quot; alt=&quot;JLPT 일본어 단어 앱 일단 공부 디자인&quot; /&gt;&lt;/p&gt; &lt;p&gt;디자인은 &lt;code class=&quot;highlighter-rouge&quot;&gt;sketchapp&lt;/code&gt;으로 제작했습니다. 여러 디자인 패턴중에서 최대한 간단한 디자인을 선택했습니다. 또한 불필요한 화면도 제거하고 최종적으로 아래와 같은 디자인을 선택했습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/ildangongbu/development-journal/ildangongbu-final-design.png&quot; alt=&quot;JLPT 일본어 단어 앱 일단 공부 디자인&quot; /&gt;&lt;/p&gt; &lt;p&gt;디자이너분들 존경합니다.&lt;/p&gt; &lt;h2 id=&quot;앱-개발&quot;&gt;앱 개발&lt;/h2&gt; &lt;p&gt;앱 개발에는 당연히 RN(React Native)를 사용하였습니다. 일단공부는 기본적으로 RN(&lt;code class=&quot;highlighter-rouge&quot;&gt;React Native&lt;/code&gt;)과 타입스크립트(&lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;)를 사용합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native) 설치 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/installation/&quot; target=&quot;_blank&quot;&gt;RN 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)에 typescript 적용하기: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;또한 RN(React Native)의 기본적인 UI는 &lt;code class=&quot;highlighter-rouge&quot;&gt;NativeBase&lt;/code&gt;를 스타일에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;을 사용하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)에 NativeBase 적용하기: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/nativebase/&quot; target=&quot;_blank&quot;&gt;nativebase&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Navtive)에서 styled-components 사용하기: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;일단 공부의 기본 네비게이션 시스템으로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-navigation&lt;/code&gt;을 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-navigation 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-navigation/&quot; target=&quot;_blank&quot;&gt;react-navigation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;MVP(Minimum Viable Product: 최소 기능 제품)의 기능중 하나인 음성 지원은 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt;를 사용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;tts(Text To Speech)&lt;/code&gt; 기능을 구현하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-tts 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-tts/&quot; target=&quot;_blank&quot;&gt;react-native-tts&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;일단 공부앱에서 사용되는 단어는 sqlite를 사용하여 앱과 함께 배포하고 있습니다. 앱에서 sqlite를 사용하는 방법은 아래에 링크를 통해 확인할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-sqlite-storage 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-sqlite-storage/&quot; target=&quot;_blank&quot;&gt;react-native-sqlite-storage&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;최종적으로 앱의 광고와 분석을 위해 구글의 파이어베이스(Google Firebase)와 구글 애드몹(Google Admob)을 사용하였습니다. 이를 앱에 구현하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;를 사용하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-firebase admob 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-admob&lt;/a&gt;&lt;/li&gt; &lt;li&gt;react-native-firebase analytics 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-analytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-analytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;react-native-firebase Crasylytics 사용 방법: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/firebase-crashlytics/&quot; target=&quot;_blank&quot;&gt;firebase-crashlytics&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;마지막으로&quot;&gt;마지막으로&lt;/h2&gt; &lt;p&gt;이번 앱은 단어를 보여주는 단순한 앱이였습니다. 역시 디자인에서 시간이 제일 많이 걸렸네요. 또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-sqlite-storage&lt;/code&gt;가 안드로이드에서는 퍼포먼스 문제가 있는거 같습니다. 로컬에서 데이터를 읽어오는데 서버에서 받아오는 것처럼 시간이 많이 걸리네요. 제가 앱을 잘못 만든걸지도…다시 한번 sql 튜닝을 해보고 안되면 라이브러리 소스도 좀 봐봐야 할거 같습니다.&lt;/p&gt; &lt;p&gt;일본어 단어 공부하시는 분들 「일단 공부」해보세요.^^&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/id1456091125&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;JLPT 일본어 단어 앱, 일단 공부 ios 다운로드&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.ildangongbu&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;JLPT 일본어 단어 앱, 일단 공부 안드로이드 다운로드&quot; /&gt; &lt;/a&gt; &lt;/div&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 RN(React Native)를 통해 벌써 3번째 앱을 제작했네요. 아래는 이전 앱에 제작기입니다. 궁금하신 분들은 아래 링크를 통해 확인해 보세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/ildangongbu/background.png"/></entry><entry xml:lang="ko"><title type="html">RN(Reacct Native)에서 sqlite 사용하기</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-sqlite-storage/" rel="alternate" type="text/html" title="RN(Reacct Native)에서 sqlite 사용하기"/><published>2019-03-18T00:00:00+09:00</published><updated>2019-03-21T09:24:37+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-sqlite-storage-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-sqlite-storage/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;RN(React Native)로 앱을 개발하다보면 로컬 데이터베이스(DB)를 사용할 경우가 있습니다. 예를 들어 제가 개발한 단어장 앱(&lt;a href=&quot;https://dev-yakuza.github.io/app/blaboo/en/&quot; target=&quot;_blank&quot;&gt;일단공부(일본어 단어 공부) - JLPT 단어 공부&lt;/a&gt;)은 단어를 서버에서 받아오는게 아니라 앱과 함께 배포하고 있습니다. 이 블로그에서는 이렇게 앱내에서 데이터베이스(DB)를 사용하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;p&gt;여기에서 소개할 DB는 sqlite이며, RN(React Native)에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-sqlite-storage&lt;/code&gt; 라이브러리로 DB를 사용하는 방법에 대해서 살펴보겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-sqlite-storage 공식 홈페이지: &lt;a href=&quot;https://github.com/andpor/react-native-sqlite-storage&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/andpor/react-native-sqlite-storage&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;db-준비&quot;&gt;DB 준비&lt;/h2&gt; &lt;p&gt;RN(React Native)에서 사용할 DB를 준비합니다. 여기서는 샘플 DB를 제작하는 방법을 설명합니다. 이미 Sqlite DB를 가지고 계신분들은 이 섹션을 건너뛰셔도 됩니다.&lt;/p&gt; &lt;p&gt;아래는 제가 사용하고 있는 sqlite 툴의 링크입니다. 링크를 눌러 OS에 맞는 툴을 다운로드합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;sqlite 툴 다운로드: &lt;a href=&quot;https://sqlitebrowser.org/dl/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://sqlitebrowser.org/dl/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;다운로드 및 설치가 끝나면 툴을 실행합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-sqlite-storage/sqlite-tool.png&quot; alt=&quot;RN(react-native) sqlite 툴&quot; /&gt;&lt;/p&gt; &lt;p&gt;왼쪽 위에 &lt;code class=&quot;highlighter-rouge&quot;&gt;New Database&lt;/code&gt;를 선택하여 새로운 &lt;code class=&quot;highlighter-rouge&quot;&gt;TestDB&lt;/code&gt;라는 이름으로 데이터베이스를 생성합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-sqlite-storage/sqlite-tool-create-db.png&quot; alt=&quot;RN(react-native) sqlite 툴 - DB 생성&quot; /&gt;&lt;/p&gt; &lt;p&gt;아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;라는 이름의 테이블을 생성하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;age&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt; 필드를 추가합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-sqlite-storage/sqlite-tool-create-db-table.png&quot; alt=&quot;RN(react-native) sqlite 툴 - DB 테이블 생성&quot; /&gt;&lt;/p&gt; &lt;p&gt;아래에 sql문으로 더미 데이터를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;aaa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;aaa@aaa.aaa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;bbb&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;bbb@bbb.bbb&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;ccc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;ccc@ccc.ccc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-sqlite-storage/sqlite-insert-data.png&quot; alt=&quot;RN(react-native) sqlite 툴 - DB 데이터 추가&quot; /&gt;&lt;/p&gt; &lt;p&gt;데이터가 잘 추가되었는지 아래에 sql문으로 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-sqlite-storage/sqlite-check-data.png&quot; alt=&quot;RN(react-native) sqlite 툴 - DB 데이터 확인&quot; /&gt;&lt;/p&gt; &lt;p&gt;이제 데이터베이스가 준비되었습니다. RN(React Native)에서 사용해 봅시다.&lt;/p&gt; &lt;h2 id=&quot;react-native-sqlite-storage-라이브러리-설치&quot;&gt;react-native-sqlite-storage 라이브러리 설치&lt;/h2&gt; &lt;p&gt;sqlite를 사용하고 싶은 RN(React Native) 프로젝트에서 아래에 명령어로 react-native-sqlite-storage를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-sqlite-storage &lt;span class=&quot;c&quot;&gt;# for typescript&lt;/span&gt; npm install &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; @types/react-native-sqlite-storage &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 아래에 명령어를 통해 설치한 react-native-sqlite-storage를 RN(React Native) 프로젝트와 연결합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-sqlite-storage &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;pod을 이용하시는 분들은 수동으로 라이브러리를 연결하는 걸 권장합니다. 수동으로 라이브러리를 연결하는 방법은 공식 홈페이지를 참고해 주세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-sqlite-storage 공식 홈페이지: &lt;a href=&quot;https://github.com/andpor/react-native-sqlite-storage#step-1a-if-rnpm-link-does-not-work-for-you-you-can-try-manually-linking-according-to-the-instructions-below&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/andpor/react-native-sqlite-storage&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;결과적으로 아래와 같이 설정이 되면 react-native-sqlite-storage 라이브러리를 사용할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/2019/react-native-sqlite-storage/setting.png&quot; alt=&quot;react-native-sqlite-storage 설정 완료&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;db-추가&quot;&gt;DB 추가&lt;/h2&gt; &lt;p&gt;위에서 작성한 DB를 앱안에 사용할 수 있도록 각 OS에 맞게 DB를 추가합니다.&lt;/p&gt; &lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt; &lt;p&gt;iOS에서 미리 만든 sqlite DB를 사용하기 위해서는 아래와 같은 절차를 따라야 합니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project name]/www&lt;/code&gt; 폴더를 만들고 미리 생성한 sqlite DB를 복사합니다. &lt;img src=&quot;/assets/images/category/react-native/2019/react-native-sqlite-storage/www_folder.png&quot; alt=&quot;react-native-sqlite-storage www 폴더 생성 및 파일 복사&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[project name].xcodeproj&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;[project name].xcworkspace&lt;/code&gt; 파일을 실행하여 xcode를 실행합니다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;왼쪽 상단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;[project name]&lt;/code&gt; 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;[project name]&lt;/code&gt; 폴더를 우클릭하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Files to [project name]&lt;/code&gt;을 선택합니다. &lt;img src=&quot;/assets/images/category/react-native/2019/react-native-sqlite-storage/add_file_for_ios.png&quot; alt=&quot;react-native-sqlite-storage xcode에 DB 파일 추가&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;파일 선택 대화창이 나오면 &lt;code class=&quot;highlighter-rouge&quot;&gt;(1)&lt;/code&gt;에서 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;www&lt;/code&gt; 폴더를 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Create folder references&lt;/code&gt;를 선택한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Add&lt;/code&gt; 버튼을 눌러 추가합니다. &lt;img src=&quot;/assets/images/category/react-native/2019/react-native-sqlite-storage/create_folder_references.png&quot; alt=&quot;react-native-sqlite-storage xcode에 DB 파일 추가&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;h3 id=&quot;안드로이드&quot;&gt;안드로이드&lt;/h3&gt; &lt;p&gt;안드로이드에서 미리 만든 sqlite DB를 사용하기 위해서는 아래와 같은 절차를 따라야 합니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;android/settings.gradle&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다. &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nx&quot;&gt;rootProject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react_native_sqlite_storage_exercise'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;':react-native-sqlite-storage'&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;':react-native-sqlite-storage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;projectDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rootProject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;projectDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../node_modules/react-native-sqlite-storage/src/android'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;':app'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다. &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileTree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;libs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*.jar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.facebook.react:react-native:+&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// From node_modules&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;':react-native-sqlite-storage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MainApplication.java&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다. &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.pgsqlite.SQLitePluginPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainApplication&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ReactApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReactPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPackages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReactPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SQLitePluginPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MainReactPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/main/assets/www&lt;/code&gt; 폴더를 만들고 미리 생성한 sqlite DB를 복사합니다. &lt;img src=&quot;/assets/images/category/react-native/2019/react-native-sqlite-storage/www_folder_android.png&quot; alt=&quot;react-native-sqlite-storage android에 DB 파일 추가&quot; /&gt;&lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;db-사용하기&quot;&gt;DB 사용하기&lt;/h2&gt; &lt;p&gt;각 OS 설정이 끝났다면, 이제 sqlite DB를 사용하기 위해 아래와 같이 소스를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'styled-components/native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SQLite&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-sqlite-storage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` flex: 1; justify-content: center; align-items: center; background-color: #F5FCFF; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` flex-direction: row; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` padding: 8px; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SQLite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SQLiteDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SQLite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;openDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TestDB.db'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;createFromLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~www/TestDB.db'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UserContainer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`user-info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UserInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/UserInfo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UserInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/UserInfo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UserInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/UserInfo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UserInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/UserInfo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/UserContainer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;))}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Container&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;executeSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SELECT * FROM test;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이로써 react-native-sqlite-storage 라이브러리를 사용하여 sqlite DB를 사용하는 방법에 대해서 알아보았습니다. 여러분도 DB를 함께 배포하는 앱을 제작할 경우 sqlite를 사용하는 것을 고려해 보시는 건 어떨까요?&lt;/p&gt; &lt;p&gt;아래는 위에 내용을 이용하여 만든 git 저장소(repository)입니다. 소스가 궁금하신 분들은 아래에 링크를 참고하세요&lt;/p&gt; &lt;ul&gt; &lt;li&gt;git 저장소(repository): &lt;a href=&quot;&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react_native_sqlite_storage_exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 RN(React Native)로 앱을 개발하다보면 로컬 데이터베이스(DB)를 사용할 경우가 있습니다. 예를 들어 제가 개발한 단어장 앱(일단공부(일본어 단어 공부) - JLPT 단어 공부)은 단어를 서버에서 받아오는게 아니라 앱과 함께 배포하고 있습니다. 이 블로그에서는 이렇게 앱내에서 데이터베이스(DB)를 사용하는 방법에 대해서 알아보겠습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2019/react-native-sqlite-storage/background.jpg"/></entry><entry xml:lang="ko"><title type="html">맥(Mac) 개발 환경 구축(3) - 개발 환경</title><link href="https://dev-yakuza.github.io/ko/environment/mac-development-environment/" rel="alternate" type="text/html" title="맥(Mac) 개발 환경 구축(3) - 개발 환경"/><published>2019-03-07T00:00:00+09:00</published><updated>2019-03-20T15:39:00+09:00</updated><id>https://dev-yakuza.github.io/environment/mac-development-environment-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/environment/mac-development-environment/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;맥(Mac)에 새롭게 개발 환경을 구축하고 있습니다. 이 블로그에서는 개발 환경을 구성하는 방법에 대해서 정리합니다.&lt;/p&gt; &lt;p&gt;이 블로그는 연재물입니다. 개발 환경에 다른 부분을 확인하고 싶으신 분들은 아래에 내용을 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/mac-iterm-zsh/&quot; target=&quot;_blank&quot;&gt;맥(Mac) 개발 환경 구축(1) - iTerm과 zsh&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/mac-development-tools/&quot; target=&quot;_blank&quot;&gt;맥(Mac) 개발 환경 구축(2) - tools&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/mac-development-environment/&quot; target=&quot;_blank&quot;&gt;맥(Mac) 개발 환경 구축(3) - 개발 환경&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;homebrew&quot;&gt;homebrew&lt;/h2&gt; &lt;p&gt;맥(Mac)에서 가장 중요한 패키지 관리자인 homebrew를 아래에 명령어로 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/bin/ruby &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 명령어로 zsh 설정 파일을 엽니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code ~/.zshrc &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설정 파일 하단에 아래에 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/bin:/usr/local/sbin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;python3&quot;&gt;python3&lt;/h2&gt; &lt;p&gt;맥(Mac)에는 기본적으로 python2가 설치되어 있습니다. 개발에 필요한 python3를 설치하고 zsh에 python3을 기본으로 설정하겠습니다.&lt;/p&gt; &lt;p&gt;zsh(iTerm)를 재실행하고 아래에 명령어로 python3를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install python3 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;zsh 설정 파일 하단에 아래에 내용을 추가하여 python3을 기본으로 설정합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# code ~/.zshrc&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;python3 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;파이썬(python) 가상환경(Virtual Environment) 관리를 도와주는 모듈인 &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt;을 아래에 명령어로 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install virtualenv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;zsh 설정 파일에 아래와 같이 설정하여 가상환경(Virtual Environment)에 접속중인지 확인할 수 있게 설정합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# code ~/.zshrc&lt;/span&gt; ... &lt;span class=&quot;c&quot;&gt;# python virtualenv&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;virtualenv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ... &lt;span class=&quot;nv&quot;&gt;POWERLEVEL9K_LEFT_PROMPT_ELEMENTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;virtualenv dir_writable dir vcs&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;git-flow&quot;&gt;git flow&lt;/h2&gt; &lt;p&gt;아래에 명령어로 git flow를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install git-flow &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;node--npm&quot;&gt;node / npm&lt;/h2&gt; &lt;p&gt;아래에 링크를 눌러 node를 다운로드 및 설치합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;node: &lt;a href=&quot;https://nodejs.org/en/download/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://nodejs.org/en/download/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;react-native&quot;&gt;react native&lt;/h2&gt; &lt;p&gt;이전에 RN(React Native) 설치에 관한 블로그를 작성하였습니다. 아래에 링크를 확인하여 설치합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/installation/&quot; target=&quot;_blank&quot;&gt;RN 설치&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;laravel&quot;&gt;Laravel&lt;/h2&gt; &lt;p&gt;맥(Mac)은 기본적으로 php가 설치되어 있습니다. 아래에 명령어로 &lt;code class=&quot;highlighter-rouge&quot;&gt;composer&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-sS&lt;/span&gt; https://getcomposer.org/installer | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;php &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--install-dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/bin/ &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;zsh 설정 파일 하단에 아래에 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# code ~/.zshrc&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;composer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;php /usr/local/bin/composer.phar&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 명령어로 권한을 변경합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;chmod &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 777 /Users/[user name]/.composer/ &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 명령어로 Laravel을 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer global require laravel/installer &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;zsh 설정 파일을 열고 아래에 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# code ~/.zshrc&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.composer/vendor/bin:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;mysql-설치&quot;&gt;mysql 설치&lt;/h2&gt; &lt;p&gt;아래에 명령어로 mysql을 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install mysql@5.7 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;zsh 설정 파일을 열고 아래에 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# code ~/.zshrc&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/opt/mysql@5.7/bin:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LDFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-L/usr/local/opt/mysql@5.7/lib&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CPPFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-I/usr/local/opt/mysql@5.7/include&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 명령어로 mysql 서버를 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql.server start &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 명령어를 통해 mysql 설정을 진행합니다.(패스워드 설정 등)&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql_secure_installation &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;jekyll&quot;&gt;jekyll&lt;/h2&gt; &lt;p&gt;이전에 jekyll 설치에 관한 블로그를 작성하였습니다. 아래에 링크를 확인하여 설치합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/installation/&quot; target=&quot;_blank&quot;&gt;jekyll 설치&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;zsh-설정-파일&quot;&gt;zsh 설정 파일&lt;/h2&gt; &lt;p&gt;아래는 zsh 설정 파일의 내용입니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# If you come from bash you might have to change your $PATH.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# export PATH=$HOME/bin:/usr/local/bin:$PATH&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Path to your oh-my-zsh installation.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ZSH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Users/jeonghean_kim/.oh-my-zsh&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Set name of the theme to load --- if set to &quot;random&quot;, it will&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# load a random theme each time oh-my-zsh is loaded, in which case,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# to know which specific one was loaded, run: echo $RANDOM_THEME&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ZSH_THEME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;powerlevel9k/powerlevel9k&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Set list of themes to pick from when loading at random&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Setting this variable when ZSH_THEME=random will cause zsh to load&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# If set to an empty array, this variable will have no effect.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# ZSH_THEME_RANDOM_CANDIDATES=( &quot;robbyrussell&quot; &quot;agnoster&quot; )&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Uncomment the following line to use case-sensitive completion.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# CASE_SENSITIVE=&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Uncomment the following line to use hyphen-insensitive completion.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Case-sensitive completion must be off. _ and - will be interchangeable.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# HYPHEN_INSENSITIVE=&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Uncomment the following line to disable bi-weekly auto-update checks.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# DISABLE_AUTO_UPDATE=&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Uncomment the following line to change how often to auto-update (in days).&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# export UPDATE_ZSH_DAYS=13&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Uncomment the following line to disable colors in ls.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# DISABLE_LS_COLORS=&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Uncomment the following line to disable auto-setting terminal title.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# DISABLE_AUTO_TITLE=&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Uncomment the following line to enable command auto-correction.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# ENABLE_CORRECTION=&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Uncomment the following line to display red dots whilst waiting for completion.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# COMPLETION_WAITING_DOTS=&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Uncomment the following line if you want to disable marking untracked files&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# under VCS as dirty. This makes repository status check for large repositories&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# much, much faster.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# DISABLE_UNTRACKED_FILES_DIRTY=&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Uncomment the following line if you want to change the command execution time&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# stamp shown in the history command output.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# You can set one of the optional three formats:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &quot;mm/dd/yyyy&quot;|&quot;dd.mm.yyyy&quot;|&quot;yyyy-mm-dd&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# or set a custom format using the strftime function format specifications,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# see 'man strftime' for details.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# HIST_STAMPS=&quot;mm/dd/yyyy&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Would you like to use another custom folder than $ZSH/custom?&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# ZSH_CUSTOM=/path/to/new-custom-folder&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Which plugins would you like to load?&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Standard plugins can be found in ~/.oh-my-zsh/plugins/*&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Example format: plugins=(rails git textmate ruby lighthouse)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Add wisely, as too many plugins slow down shell startup.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;git&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ZSH&lt;/span&gt;/oh-my-zsh.sh &lt;span class=&quot;c&quot;&gt;# python virtualenv&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;virtualenv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# User configuration&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# export MANPATH=&quot;/usr/local/man:$MANPATH&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# You may need to manually set your language environment&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# export LANG=en_US.UTF-8&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Preferred editor for local and remote sessions&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# if [[ -n $SSH_CONNECTION ]]; then&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# export EDITOR='vim'&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# else&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# export EDITOR='mvim'&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# fi&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Compilation flags&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# export ARCHFLAGS=&quot;-arch x86_64&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# export SSH_KEY_PATH=&quot;~/.ssh/rsa_id&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Set personal aliases, overriding those provided by oh-my-zsh libs,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# plugins, and themes. Aliases can be placed here, though oh-my-zsh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# users are encouraged to define aliases within the ZSH_CUSTOM folder.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# For a full list of active aliases, run `alias`.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Example aliases&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# alias zshconfig=&quot;mate ~/.zshrc&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# alias ohmyzsh=&quot;mate ~/.oh-my-zsh&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# remove user name in zsh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# prompt_context(){}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;POWERLEVEL9K_LEFT_PROMPT_ELEMENTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;virtualenv dir_writable dir vcs&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;status &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;battery&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vscode code command&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:/Applications/Visual Studio Code.app/Contents/Resources/app/bin&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# brew path&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/bin:/usr/local/sbin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# python3 default&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;python3 &lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pip3 &lt;span class=&quot;c&quot;&gt;# composer&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;composer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;php /usr/local/bin/composer.phar&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Laravel&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.composer/vendor/bin:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# mysql&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/opt/mysql@5.7/bin:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# jekyll&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GEM_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/gems &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/gems/bin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# The next line updates PATH for the Google Cloud SDK.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /Users/jeonghean_kim/google-cloud-sdk/path.zsh.inc &lt;span class=&quot;c&quot;&gt;# The next line enables zsh completion for gcloud.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /Users/jeonghean_kim/google-cloud-sdk/completion.zsh.inc &lt;span class=&quot;c&quot;&gt;# Android path for React Native&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ANDROID_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/Library/Android/sdk &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$ANDROID_HOME&lt;/span&gt;/emulator &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$ANDROID_HOME&lt;/span&gt;/tools &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$ANDROID_HOME&lt;/span&gt;/tools/bin &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$ANDROID_HOME&lt;/span&gt;/platform-tools &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 맥(Mac)에 새롭게 개발 환경을 구축하고 있습니다. 이 블로그에서는 개발 환경을 구성하는 방법에 대해서 정리합니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/environment/mac-development-environment/background.jpg"/></entry><entry xml:lang="ko"><title type="html">맥(Mac) 개발 환경 구축(2) - tools</title><link href="https://dev-yakuza.github.io/ko/environment/mac-development-tools/" rel="alternate" type="text/html" title="맥(Mac) 개발 환경 구축(2) - tools"/><published>2019-03-06T00:00:00+09:00</published><updated>2019-03-08T11:39:24+09:00</updated><id>https://dev-yakuza.github.io/environment/mac-development-tools-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/environment/mac-development-tools/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;맥(Mac)에 새롭게 개발 환경을 구축하고 있습니다. 이 블로그에서는 개발과 커뮤니케이션에 사용하고 있는 툴들을 정리합니다.&lt;/p&gt; &lt;p&gt;이 블로그는 연재물입니다. 개발 환경에 다른 부분을 확인하고 싶으신 분들은 아래에 내용을 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/mac-iterm-zsh/&quot; target=&quot;_blank&quot;&gt;맥(Mac) 개발 환경 구축(1) - iTerm과 zsh&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/mac-development-tools/&quot; target=&quot;_blank&quot;&gt;맥(Mac) 개발 환경 구축(2) - tools&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/mac-development-environment/&quot; target=&quot;_blank&quot;&gt;맥(Mac) 개발 환경 구축(3) - 개발 환경&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;커뮤니케이션-툴&quot;&gt;커뮤니케이션 툴&lt;/h2&gt; &lt;p&gt;아래는 개발할 때 사용하는 커뮤니케이션 툴을 나열하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Line: App store에서 다운로드&lt;/li&gt; &lt;li&gt;Kakaotalk: App store에서 다운로드&lt;/li&gt; &lt;li&gt;Slack: App store에서 다운로드&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발툴&quot;&gt;개발툴&lt;/h2&gt; &lt;p&gt;아래는 실제 개발에 사용하는 툴을 나열하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;android studio: &lt;a href=&quot;https://developer.android.com/studio&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://developer.android.com/studio&lt;/a&gt;&lt;/li&gt; &lt;li&gt;xcode: App store에서 다운로드&lt;/li&gt; &lt;li&gt;vscode: &lt;a href=&quot;https://code.visualstudio.com/download&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://code.visualstudio.com/download&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;vscode&quot;&gt;vscode&lt;/h3&gt; &lt;p&gt;아래는 vscode에서 사용하는 플러그인 리스트 입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Active File In StatusBar&lt;/li&gt; &lt;li&gt;Babel ES6/ES7&lt;/li&gt; &lt;li&gt;Bracket Pair Colorizer&lt;/li&gt; &lt;li&gt;Debugger for Chrome&lt;/li&gt; &lt;li&gt;IntelliSense for CSS, SCSS class names in HTML, Slim and SCSS&lt;/li&gt; &lt;li&gt;Node.js Modlues Intellisense&lt;/li&gt; &lt;li&gt;npm Intellisense&lt;/li&gt; &lt;li&gt;Path Intellisense&lt;/li&gt; &lt;li&gt;PHP Intellisense&lt;/li&gt; &lt;li&gt;Prettier - Code Formatter&lt;/li&gt; &lt;li&gt;Python&lt;/li&gt; &lt;li&gt;Trailing Spaces&lt;/li&gt; &lt;li&gt;TSLint&lt;/li&gt; &lt;li&gt;vscode-icons&lt;/li&gt; &lt;li&gt;vscode-styled-components&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;위에 리스트를 모두 설치한 후, 아래의 명령어로 vscode 설정 파일을 엽니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code ~/Library/Application&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Support/Code/User/settings.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;vscode의 설정 파일 내용에 아래의 내용을 복사 붙여넣습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;terminal.integrated.shell.osx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/bin/zsh&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;terminal.integrated.fontFamily&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Meslo LG M for Powerline&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;window.zoomLevel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;workbench.iconTheme&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vscode-icons&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;editor.fontFamily&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'D2Coding ligature'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;editor.fontLigatures&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;window.restoreWindows&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;all&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier.eslintIntegration&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;javascript.format.enable&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;editor.formatOnSave&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;files.exclude&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/.git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/.svn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/.DS_Store&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*/node_modules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/.idea&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/.vscode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/yarn.lock&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/tmp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node_modules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;files.watcherExclude&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/.git/objects/**&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/node_modules/**&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/tmp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;files.trimTrailingWhitespace&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;search.exclude&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/node_modules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/bower_components&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/.git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/.DS_Store&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/tmp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/coverage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/Pods&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/*.xcodeproj&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/*.xcworkspace&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;**/.meteor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;extensions.autoUpdate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier.singleQuote&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier.trailingComma&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;es5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier.jsxBracketSameLine&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[markdown]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;editor.formatOnSave&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;db-툴&quot;&gt;DB 툴&lt;/h2&gt; &lt;p&gt;아래는 실제 개발에 사용하는 DB 툴을 나열하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;sequel pro: &lt;a href=&quot;https://www.sequelpro.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.sequelpro.com/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;DB Browser For SQLite: &lt;a href=&quot;https://sqlitebrowser.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://sqlitebrowser.org/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;workbench: &lt;a href=&quot;https://www.mysql.com/products/workbench/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.mysql.com/products/workbench/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;디자인-툴&quot;&gt;디자인 툴&lt;/h2&gt; &lt;p&gt;디자인 툴로는 sketchapp을 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;sketchapp: &lt;a href=&quot;https://www.sketchapp.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.sketchapp.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;보조-프로그램&quot;&gt;보조 프로그램&lt;/h2&gt; &lt;p&gt;아래는 실제 개발시 사용하는 보조 프로그램을 나열하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Postman: &lt;a href=&quot;https://www.getpostman.com/downloads/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/downloads/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Beyond Compare: &lt;a href=&quot;https://www.scootersoftware.com/download.php&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.scootersoftware.com/download.php&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Sourcetree: &lt;a href=&quot;https://www.sourcetreeapp.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.sourcetreeapp.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;폰트&quot;&gt;폰트&lt;/h2&gt; &lt;p&gt;아래는 개발툴에 사용하는 폰트입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;D2Coding: &lt;a href=&quot;https://github.com/naver/d2codingfont&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/naver/d2codingfont&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 맥(Mac)에 새롭게 개발 환경을 구축하고 있습니다. 이 블로그에서는 개발과 커뮤니케이션에 사용하고 있는 툴들을 정리합니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/environment/mac-development-tools/background.jpg"/></entry><entry xml:lang="ko"><title type="html">맥(Mac) 개발 환경 구축(1) - iTerm과 zsh</title><link href="https://dev-yakuza.github.io/ko/environment/mac-iterm-zsh/" rel="alternate" type="text/html" title="맥(Mac) 개발 환경 구축(1) - iTerm과 zsh"/><published>2019-03-05T00:00:00+09:00</published><updated>2019-03-20T15:39:00+09:00</updated><id>https://dev-yakuza.github.io/environment/mac-iterm-zsh-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/environment/mac-iterm-zsh/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;새로운 맥(Mac)에 개발 환경을 처음부터 구축한 내용을 정리하려고 합니다. 이 블로그는 연재물입니다. 개발 환경에 다른 부분을 확인하고 싶으신 분들은 아래에 내용을 참고하세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/mac-iterm-zsh/&quot; target=&quot;_blank&quot;&gt;맥(Mac) 개발 환경 구축(1) - iTerm과 zsh&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/mac-development-tools/&quot; target=&quot;_blank&quot;&gt;맥(Mac) 개발 환경 구축(2) - tools&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/mac-development-environment/&quot; target=&quot;_blank&quot;&gt;맥(Mac) 개발 환경 구축(3) - 개발 환경&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그에서는 새로운 맥(Mac)에 &lt;a href=&quot;https://www.iterm2.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;iTerm&lt;/a&gt;와 &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;zsh&lt;/a&gt;를 설정하는 방법에 대해서 알아봅니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.iterm2.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;iTerm&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;zsh&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;iterm-설치&quot;&gt;iTerm 설치&lt;/h2&gt; &lt;p&gt;아래에 링크를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;iTerm&lt;/code&gt; 다운로드 페이지로 이동합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;iTerm 다운로드: &lt;a href=&quot;https://www.iterm2.com/downloads.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;다운로드 페이지&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;아래와 같이 화면이 보인다면, &lt;code class=&quot;highlighter-rouge&quot;&gt;Stable Releases&lt;/code&gt;를 다운로드합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/iterm-download.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iTerm 다운로드&quot; /&gt;&lt;/p&gt; &lt;p&gt;다운로드 받은 &lt;code class=&quot;highlighter-rouge&quot;&gt;zip&lt;/code&gt; 파일을 압축해제하고 설치합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/iterm-full-disk-access.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iTerm full disk access 권한 요청&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같이 iTerm에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Full Disk Access&lt;/code&gt;를 요청합니다. 오른쪽 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Open System Preferences&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/iterm-full-disk-access-grant.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iTerm full disk access 권한 설정&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같이 친절한 설명과 함께 &lt;code class=&quot;highlighter-rouge&quot;&gt;Security &amp;amp; Privacy&lt;/code&gt;가 활성화 됩니다. 왼쪽 하단의 자물쇠 모양을 선택하고 암호를 입력하여 수정 가능한 상태를 만듭니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/iterm-full-disk-access-grant-setting.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iTerm full disk access 권한 설정 화면&quot; /&gt;&lt;/p&gt; &lt;p&gt;상단 탭에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Privacy&lt;/code&gt;를 선택하고, 왼쪽 리스트에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Full Disk Accesss&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/iterm-full-disk-access-grant-setting-select-iterm.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iTerm full disk access 권한 설정 iTerm 선택&quot; /&gt;&lt;/p&gt; &lt;p&gt;오른쪽의 &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; 버튼을 누릅니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Applications&lt;/code&gt;로 이동한 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;iTerm&lt;/code&gt;를 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Open&lt;/code&gt;을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/iterm-full-disk-access-grant-setting-quit.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iTerm 종료&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;iTerm&lt;/code&gt; 종료 여부를 물어보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Quit Now&lt;/code&gt; 버튼을 &lt;code class=&quot;highlighter-rouge&quot;&gt;iTerm&lt;/code&gt;을 종료합니다.&lt;/p&gt; &lt;p&gt;iTerm을 실행하여 문제 없이 실행되는지 확인합니다.&lt;/p&gt; &lt;h2 id=&quot;zsh&quot;&gt;zsh&lt;/h2&gt; &lt;p&gt;zsh는 터미널을 좀 더 사용하기 편하게 만들어 줍니다. 아래에 링크를 클릭하면 자세한 내용을 확인하실 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;zsh 공식 사이트: &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;zsh&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;zsh 공식 사이트에 보면 설치 방법이 아래와 같이 나와 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/zsh-installation.png&quot; alt=&quot;맥(mac) 개발환경 설정 - zsh 설치&quot; /&gt;&lt;/p&gt; &lt;p&gt;설치한 iTerm 또는 Terminal을 열고 아래에 명령어를 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설치가 완료되면 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/zsh-install-completed.png&quot; alt=&quot;맥(mac) 개발환경 설정 - zsh 설치 완료&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;iterm에서-zsh-디폴트-설정&quot;&gt;iTerm에서 zsh 디폴트 설정&lt;/h2&gt; &lt;p&gt;iTerm은 기본 shell을 사용하도록 되어있습니다. iTerm이 기본적으로 zsh를 사용하도록 설정합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/zsh-install-completed.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iTerm zsh 설정&quot; /&gt;&lt;/p&gt; &lt;p&gt;iTerm을 실행하고 왼쪽 상단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;iTerms2&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Preferences...&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/iterm-zsh-default-setting-path.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iTerm zsh 디폴트 설정&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같이 설정 화면이 나오면, 상단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Profiles&lt;/code&gt; 탭을 선택합니다. 오른쪽 중간에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Command&lt;/code&gt; 설정에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Command&lt;/code&gt;를 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/zsh&lt;/code&gt;를 입력하고 종료합니다.&lt;/p&gt; &lt;p&gt;다시 iTerm을 시작하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;zsh&lt;/code&gt;가 기본으로 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;iterm테마-설정&quot;&gt;iTerm테마 설정&lt;/h2&gt; &lt;p&gt;iTerm는 많은 테마(Theme)를 가지고 있습니다. 여러분이 원하는 테마를 설정하여 사용하시면 됩니다. 여기에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;iterm2-solarized&lt;/code&gt; 테마를 설정하는 방법을 소개합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://gist.github.com/kevin-smets/8568070&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;iterm2-solarized&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;아래에 링크를 클릭하여 테마를 다운로드합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/schemes/Solarized%20Dark%20-%20Patched.itermcolors&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;iterm2-solarized 다운로드&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;위에 링크를 선택하면 테마 파일 내용이 보입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;command + s&lt;/code&gt;를 눌러 다운로드합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/zsh-theme-setting.png&quot; alt=&quot;맥(mac) 개발환경 설정 - zsh 테마 설정&quot; /&gt;&lt;/p&gt; &lt;p&gt;다운로드시 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Format&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;All Files&lt;/code&gt;로 설정합니다. 파일명 확장자가 &lt;code class=&quot;highlighter-rouge&quot;&gt;.itermcolors&lt;/code&gt;인지 확인합니다.&lt;/p&gt; &lt;p&gt;다시 iTerm의 Preferences를 엽니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/zsh-theme-import.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iterm에 zsh 테마 설정&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Profiles&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Colors&lt;/code&gt;를 선택하고 오른쪽 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Color Preset...&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;import...&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;위에서 다운로드한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Solarized Dark - Patched.itermcolors&lt;/code&gt; 파일을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/zsh-theme-solarized-dark.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iterm에 zsh 테마 Solarized Dark 설정&quot; /&gt;&lt;/p&gt; &lt;p&gt;다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;Color Preset...&lt;/code&gt;을 선택하면 이전과 다르게 &lt;code class=&quot;highlighter-rouge&quot;&gt;Solarized Dark&lt;/code&gt;가 추가된 것을 확인할 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Solarized Dark&lt;/code&gt;를 선택하여 테마를 설정합니다.&lt;/p&gt; &lt;h2 id=&quot;powerlevel9k-설정&quot;&gt;Powerlevel9k 설정&lt;/h2&gt; &lt;p&gt;터미널에 더 많은 정보를 보여주기위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Powerlevel9k&lt;/code&gt;를 설정합니다. iTerm을 실행하면 지금은 아래와 같은 화면이 보입니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/normal_iterm.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iterm&quot; /&gt;&lt;/p&gt; &lt;p&gt;아래에 명령어를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Powerlevel9k&lt;/code&gt;를 다운로드합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;zsh의 설정 파일은 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.zshrc&lt;/code&gt;입니다. 이 파일을 열고 Powerlevel9k을 설정합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi ~/.zshrc &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설정 파일에 테마 설정 부분을 찾습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Set name of the theme to load --- if set to &quot;random&quot;, it will&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# load a random theme each time oh-my-zsh is loaded, in which case,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# to know which specific one was loaded, run: echo $RANDOM_THEME&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ZSH_THEME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;robbyrussell&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;테마를 &lt;code class=&quot;highlighter-rouge&quot;&gt;ZSH_THEME=&quot;robbyrussell&quot;&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ZSH_THEME=&quot;powerlevel9k/powerlevel9k&quot;&lt;/code&gt;로 교체하고 저장합니다.&lt;/p&gt; &lt;p&gt;iTerm을 재시작하면 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/powerlevel9k.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iterm powerlevel9k&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같이 유저 정보와 &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;가 보입니다. ?는 폰트가 설정되지 않았기 때문입니다. 아래에 링크를 눌러 폰트 다운로드 사이트로 이동합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/powerline/fonts/blob/master/Meslo%20Slashed/Meslo%20LG%20M%20Regular%20for%20Powerline.ttf&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Meslo LG M Regular for Powerline.ttf&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;위에 링크를 누르면 아래와 같이 보입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;View Raw&lt;/code&gt;를 눌러 폰트를 다운로드합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/download-font.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iterm 다운로드 폰트&quot; /&gt;&lt;/p&gt; &lt;p&gt;다운로드가 완료되면 다운로드한 폰트 파일을 선택하여 실행합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/install-font.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iterm 폰트 설치&quot; /&gt;&lt;/p&gt; &lt;p&gt;오른쪽 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Install Font&lt;/code&gt;를 눌러 폰트를 설치합니다. 설치가 완료되면, 다시 iTerm의 Preference를 열고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Profiles&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Text&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Change Font&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/set-font.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iterm 폰트 설치&quot; /&gt;&lt;/p&gt; &lt;p&gt;위에서 다운로드한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Meslo LG M Regular for Powerline&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/check-font.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iterm 폰트 설치 확인&quot; /&gt;&lt;/p&gt; &lt;p&gt;iTerm을 확인하면 위와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;저는 여기서 사용자 명이 길기때문에 사용자 명을 표시하지 않도록 설정하였습니다. 아래에 명령어를 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi ~/.zshrc &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 내용을 제일 하단에 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;prompt_context&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;또는 아래와 같이 자신에게 맞는 내용으로 수정할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;POWERLEVEL9K_LEFT_PROMPT_ELEMENTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;dir_writable dir vcs&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;status &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;battery&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;공식 사이트에 가면 옵션에 대한 자세한 설명이 나와있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;공식 사이트: &lt;a href=&quot;https://github.com/bhilburn/powerlevel9k#available-prompt-segments&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/bhilburn/powerlevel9k&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;다시 iTerm을 실행하면 사용자명이 표시되지 않는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/no-user-name.png&quot; alt=&quot;맥(mac) 개발환경 설정 - iterm 사용자명 숨김&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;vscode와의-연동&quot;&gt;vscode와의 연동&lt;/h2&gt; &lt;p&gt;zsh에서 vscode의 &lt;code class=&quot;highlighter-rouge&quot;&gt;code&lt;/code&gt; 명령어를 사용할 수 있게 설정하고 vscode에서는 기본 터미널을 zsh으로 설정하는 방법에 대해서 알아봅니다.&lt;/p&gt; &lt;h3 id=&quot;zsh에-vscode-명령어-설정&quot;&gt;zsh에 vscode 명령어 설정&lt;/h3&gt; &lt;p&gt;아래의 명령어로 zsh설정을 엽니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi ~/.zshrc &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;제일 하단에 아래에 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:/Applications/Visual Studio Code.app/Contents/Resources/app/bin&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;iTerm을 재시작하고 아래에 명령어로 vscode가 활성화되는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code . &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;vscode에-zsh-설정&quot;&gt;vscode에 zsh 설정&lt;/h3&gt; &lt;p&gt;vscode를 실행하고 왼쪽 상단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Code&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Preferences&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Settings&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/vscode-setting.png&quot; alt=&quot;맥(mac) 개발환경 설정 - vscode zsh 설정&quot; /&gt;&lt;/p&gt; &lt;p&gt;검색창에 &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt;을 검색하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Terminal &amp;gt; Integrated &amp;gt; Shell: Osx&lt;/code&gt; 부분을 &lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/bash&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/zsh&lt;/code&gt;로 교체합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/vscode-shell-setting.png&quot; alt=&quot;맥(mac) 개발환경 설정 - vscode zsh shell설정&quot; /&gt;&lt;/p&gt; &lt;p&gt;또한 fontfamily를 검색하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Meslo LG M for Powerline&lt;/code&gt;을 설정합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/vscode-zsh-font-setting.png&quot; alt=&quot;맥(mac) 개발환경 설정 - vscode zsh font 설정&quot; /&gt;&lt;/p&gt; &lt;p&gt;이제 vscode를 실행하면 아래와 같이 zsh가 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/mac-iterm-zsh/vscode-zsh-font.png&quot; alt=&quot;맥(mac) 개발환경 설정 - vscode zsh 설정 완료&quot; /&gt;&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 새로운 맥(Mac)에 개발 환경을 처음부터 구축한 내용을 정리하려고 합니다. 이 블로그는 연재물입니다. 개발 환경에 다른 부분을 확인하고 싶으신 분들은 아래에 내용을 참고하세요.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/environment/mac-iterm-zsh/background.jpg"/></entry><entry xml:lang="ko"><title type="html">RN(React Naitve) 태블릿 지원하기</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-support-tablet/" rel="alternate" type="text/html" title="RN(React Naitve) 태블릿 지원하기"/><published>2019-03-03T00:00:00+09:00</published><updated>2019-03-19T16:29:30+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-support-tablet-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-support-tablet/">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;RN(React Native)으로 우리는 크로스 플랫폼 앱(Cross Platform App)을 제작할 수 있습니다. 이 말은 아이폰(iPhone), 안드로이드 폰(Android phone) 이외에도 아이패드(iPad), 안드로이드 태블릿(Android Tablet)을 제작할 수 있습니다. 이번 블로그에서는 스마트폰으로 제작한 앱을 태블릿에 적용하는 방법에 대해서 알아봅니다.&lt;/p&gt; &lt;h2 id=&quot;안드로이드&quot;&gt;안드로이드&lt;/h2&gt; &lt;p&gt;안드로이드는 특별한 처리를 하지 않아도 폰과 태블릿을 지원합니다. 여기에서는 자신의 앱이 어떤 디바이스를 지원하는지 확인하는 방법을 설명합니다.&lt;/p&gt; &lt;p&gt;아래의 링크를 눌러 구글 플레이 콘솔(Google Play Console)에 접속합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;구글 플레이 콘솔: &lt;a href=&quot;https://play.google.com/apps/publish/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://play.google.com/apps/publish/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;로그인 후, 확인하고자 하는 앱을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-support-tablet/android-support-devices.png&quot; alt=&quot;구글 플레이 - 안드로이드 앱 디바이스 지원 목록&quot; /&gt;&lt;/p&gt; &lt;p&gt;왼쪽 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Release management&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Device catalog&lt;/code&gt;를 선택하면 위와 같은 화면을 볼 수 있습니다. 만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;동의&lt;/code&gt; 화면이 나온다면 동의하면 위와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-support-tablet/android-market-info.png&quot; alt=&quot;구글 플레이 - 안드로이드 앱 마켓 정보 수정&quot; /&gt;&lt;/p&gt; &lt;p&gt;왼쪽 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Store presence&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Store listing&lt;/code&gt;을 누르고 &lt;code class=&quot;highlighter-rouge&quot;&gt;TABLET&lt;/code&gt;의 이미지를 추가해 줍니다.&lt;/p&gt; &lt;h2 id=&quot;ios&quot;&gt;iOS&lt;/h2&gt; &lt;p&gt;iOS도 특별히 코딩을 할 필요는 없습니다. RN(React Native)의 프로젝트 폴더에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project name].xcodeproj&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project name].xcworkspace&lt;/code&gt;을 열어 xcode를 실행합니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-support-tablet/ios-universal-configuration.png&quot; alt=&quot;xcode universal 앱 설정&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같이 왼쪽의 프로젝트명, &lt;code class=&quot;highlighter-rouge&quot;&gt;TARGETS&lt;/code&gt;도 프로젝트명을 선택합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Development Info&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Devices&lt;/code&gt;를 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Universal&lt;/code&gt;을 선택합니다.&lt;/p&gt; &lt;p&gt;iOS도 안드로이도와 같이 앱 스토어(App store) 정보를 수정하시기 바랍니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 RN(React Native)로 개발한 앱이 스마트폰과 태블릿을 지원하게 되었습니다. 태블릿을 지원하는 것은 설정만 변경하게 되므로 엄청 간단합니다. 또한 RN(React Native)는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Flexbox&lt;/code&gt;를 사용하기 때문에 responsive 대응도 쉽게 할 수 있습니다. 다만, 특정 위치를 지정하거나, 특정 사이즈를 지정하게 될 때는 화면 사이즈를 생각하며 제작해야 합니다. 저는 &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-device-info/&quot; target=&quot;_blank&quot;&gt;react-native-device-info&lt;/a&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;DeviceInfo.isTablet()&lt;/code&gt;를 사용하여, 디바이스에 영향이 있는 부분은 처리하고 있습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">개요 RN(React Native)으로 우리는 크로스 플랫폼 앱(Cross Platform App)을 제작할 수 있습니다. 이 말은 아이폰(iPhone), 안드로이드 폰(Android phone) 이외에도 아이패드(iPad), 안드로이드 태블릿(Android Tablet)을 제작할 수 있습니다. 이번 블로그에서는 스마트폰으로 제작한 앱을 태블릿에 적용하는 방법에 대해서 알아봅니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-support-tablet/background.jpg"/></entry></feed>