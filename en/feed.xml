<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dev-yakuza.github.io/en/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/en/" rel="alternate" type="text/html"/><updated>2019-01-21T21:30:55+09:00</updated><id>https://dev-yakuza.github.io/</id><title type="html">Dreams the art through programming</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="en"><title type="html">BlaBoo App Development Journal(RN, React Native)</title><link href="https://dev-yakuza.github.io/en/blaboo/development-journal/" rel="alternate" type="text/html" title="BlaBoo App Development Journal(RN, React Native)"/><published>2019-01-15T00:00:00+09:00</published><updated>2019-01-20T15:22:37+09:00</updated><id>https://dev-yakuza.github.io/blaboo/development-journal-en</id><content type="html" xml:base="https://dev-yakuza.github.io/blaboo/development-journal/">&lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;I’ve studied RN(React Native) so far, but I’ve never developed the app from start to finish. so I’ve decided to work on this project by using RN(React Native) to develop the app fastly from start to finish.&lt;/p&gt; &lt;h2 id=&quot;what-is-blaboo&quot;&gt;What is BlaBoo?&lt;/h2&gt; &lt;p&gt;BlaBoo is a word study app for baby/children that combines the word &lt;code class=&quot;highlighter-rouge&quot;&gt;blah blah&lt;/code&gt; with the word &lt;code class=&quot;highlighter-rouge&quot;&gt;boo&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Donwload: &lt;a href=&quot;https://itunes.apple.com/us/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Apple App store&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Donwload: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Goole App store&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;baby/children see the illustrations and if they touch them, the app reads the word with sound.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/app_concept.png&quot; alt=&quot;BlaBoo for baby/children word study app - development journal&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;why-did-i-make-it&quot;&gt;Why did I make it?&lt;/h2&gt; &lt;p&gt;actually, there are many word study applications for baby/children. the main focus of this app is the following.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;to develop the word study app which baby/children can learn foreign languages.&lt;/li&gt; &lt;li&gt;to develop and distribute the app with RN(React Native) I studied so far.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;living in a foreign country, I looked for many apps to teach my child foreign language and mother tongue, but there were few apps that provide multiple languages in one app. I found the problem and I have a skill to solve it so I decided to make it.&lt;/p&gt; &lt;h2 id=&quot;app-planning&quot;&gt;App Planning&lt;/h2&gt; &lt;p&gt;however I didn’t have enough time to make the app by myself.so first, I’ve been benchmarking various apps, and define MVP(Minimum Viable Product) of the app. BlaBoo MVP(Minimum Viable Product) is following.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;various categories: define categories and choose the words in the category to be displayed.(ex&amp;gt; cars, fruit, vegetable)&lt;/li&gt; &lt;li&gt;display the word by the illustration: display the word by the illustration to interest baby/children.&lt;/li&gt; &lt;li&gt;support the voice of the word if it is touched: if baby/children touch the illustration, the app reads the word with the voice to make baby/children learn the word alone naturally.&lt;/li&gt; &lt;li&gt;support multiple languages: support multiple languages so baby/children can learn one word in several languages.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;this is how I define MVP(Minimum Viable Product) and I’ve sketched the app to design user’s movement in the app.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/hand_sketch.png&quot; alt=&quot;BlaBoo for baby/children word study app - sketch&quot; /&gt;&lt;/p&gt; &lt;p&gt;I’ve downloaded the sketch template in below site.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://sneakpeekit.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;http://sneakpeekit.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;since I made an app as a hobby alone, the planning is not that big. goal, target, business…put them in and just thought simple features and rough sketch. even so I have tried to make my own hypothesis and list what to do, but I am not sure if I should call it a planning.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/plan_trello.png&quot; alt=&quot;BlaBoo for baby/children word study app - planning&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;app-design&quot;&gt;App Design&lt;/h2&gt; &lt;p&gt;I’ve designed the app based on above planning. I’m not a designer so my design is not so pretty. however I can decide basic color and concept of the app.&lt;/p&gt; &lt;p&gt;I’ve used &lt;a href=&quot;https://www.sketchapp.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;sketchapp&lt;/a&gt; for the app design and donwload the illustraions from &lt;a href=&quot;https://www.freepik.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;freepik&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/sketch_design.png&quot; alt=&quot;BlaBoo for baby/children word study app - design&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;app-development&quot;&gt;App Development&lt;/h2&gt; &lt;p&gt;of course, I’ve used RN(React Native) for the app development. one developer can make iOS/Android app same time, and learning curve is not high like learning Swift or Kotlin because of javascript. BlaBoo is based on RN(&lt;code class=&quot;highlighter-rouge&quot;&gt;React Native&lt;/code&gt;) and &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;how to install RN(React Native): &lt;a href=&quot;https://dev-yakuza.github.io/react-native/installation/&quot; target=&quot;_blank&quot;&gt;RN installation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;how to apply typescript to RN(React Native): &lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;also, I’ve used &lt;code class=&quot;highlighter-rouge&quot;&gt;NativeBase&lt;/code&gt; for basic UI and &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt; for styling.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;how to use NativeBase in RN(React Native): &lt;a href=&quot;https://dev-yakuza.github.io/react-native/nativebase/&quot; target=&quot;_blank&quot;&gt;nativebase&lt;/a&gt;&lt;/li&gt; &lt;li&gt;how to use styled-components in RN(React Navtive): &lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;RN(React Native) doesn’t have the navigation system. BlaBoo uses &lt;code class=&quot;highlighter-rouge&quot;&gt;react-navigation&lt;/code&gt; for the navigation system.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;how to use react-navigation: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-navigation/&quot; target=&quot;_blank&quot;&gt;react-navigation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I’ve use &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt; to implement &lt;code class=&quot;highlighter-rouge&quot;&gt;TTS(Text To Speech)&lt;/code&gt; for developing voice feature which is one of MVP(Minimum Viable Product) feautes.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;how to use react-native-tts: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-tts/&quot; target=&quot;_blank&quot;&gt;react-native-tts&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;also I’ve use the locale information from the user device information to set the app and &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt; default language. I use &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-device-info&lt;/code&gt; to get the user device information.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;how to use react-native-device-info: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-device-info/&quot; target=&quot;_blank&quot;&gt;react-native-device-info&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;and if the illustration is touched, the illustration is moved simply. I use &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt; to insert simple animation to the illustration.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;how to use react-native-animatable: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-animatable/&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;finally, I use Google Firebase to analyze the app and use Google Admob for the advertisement. I use &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt; for these features.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;how to use react-native-firebase for admob: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-admob&lt;/a&gt;&lt;/li&gt; &lt;li&gt;how to use react-native-firebase for analytics: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-analytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-analytics&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I’ve written the journal like above, after all, it seems like there was not much to do except bring and implement open source. thanks to make beautiful and useful open source. to develop the app was not difficult because I used awesome open source and reusable component. just, gathering the illustrations and words took a longer time than developing.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/resource.png&quot; alt=&quot;BlaBoo for baby/children word study app - resource code&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;app-registration&quot;&gt;App Registration&lt;/h2&gt; &lt;p&gt;so BlaBoo MVP(Minimum Viable Product) is completed. I thought I would register and download the app soon after development, but the process of registering the app took a long time.&lt;/p&gt; &lt;p&gt;I already know Apple App Review is taking a long time, so I registered iOS first, and I registered Android after iOS is registered. Apple App Review took almost 2 months and Android took 2 days.&lt;/p&gt; &lt;p&gt;Apple App Review took a long time because of reject the app by many reasons. my app was rejected on Android because my app is for children but I didn’t select &lt;code class=&quot;highlighter-rouge&quot;&gt;Designed for Families program&lt;/code&gt; option&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/google_reject.png&quot; alt=&quot;BlaBoo for baby/children word study app - Google App review reject&quot; /&gt;&lt;/p&gt; &lt;p&gt;to register apps, we need to enroll Apple Developer Program and Android Developer(Google Play Developer).&lt;/p&gt; &lt;ul&gt; &lt;li&gt;how to enroll Apple Developer Program: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-enroll-developer-program/&quot; target=&quot;_blank&quot;&gt;enroll iOS developer&lt;/a&gt;&lt;/li&gt; &lt;li&gt;how to enroll Android Developer(Google Play Developer): &lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/&quot; target=&quot;_blank&quot;&gt;enroll Android Developer&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;also, I needed various informations. it took a long time to make these informations.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;how to register iOS app: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-app-store/&quot; target=&quot;_blank&quot;&gt;register iOS App store&lt;/a&gt;&lt;/li&gt; &lt;li&gt;how to register Android app: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-google-play/&quot; target=&quot;_blank&quot;&gt;register Android App store&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;and Apple strict App Review. my app was rejected 5 times. I felt not to register. 그리고 역시나 무서운 애플의 앱 심사(App Review). 5차례 정도 앱 심사(App Review)가 거부(Reject)되었습니다. at that time, I really wanted to stop to register. and final rejection reason was my app doesn’t have user interact, so Apple App store doesn’t need my app.&lt;/p&gt; &lt;p&gt;OMG. at first, I appealed to Apple like “my app has more categories than this app. my app has more words and multiple language feature than that app.” but they didn’t approve it easily. rather, if I think other apps are in violation of the app store, report them…but how do I report them those developers have made with many efforts…so I added an weird feature unlike origin plan.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/add_card_mode.png&quot; alt=&quot;BlaBoo for baby/children word study app - review feature&quot; /&gt;&lt;/p&gt; &lt;p&gt;I’ve added review feature which baby/children can review words studied in categories by card type. the feature is to display 20 cards randomly, and swift left or right to review.&lt;/p&gt; &lt;p&gt;this feature is not at first plan and it is made for approving App Review fastly by designing 1 day and developing 1 day, so it looks like weird in the app. still I think BlaBoo is two apps in one app. however BlaBoo was approved safely App Review after adding this feature.&lt;/p&gt; &lt;p&gt;at first, I felt anger about Apple App Review, but this review made me thought that iOS apps have great UI/UX. after Apple App Review, I thought I’d make the next app more user friendly. thanks Apple App Reviewers.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Donwload: &lt;a href=&quot;https://itunes.apple.com/us/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Apple App store&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Donwload: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Goole App store&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;finish-app-development-journal&quot;&gt;Finish App Development Journal&lt;/h2&gt; &lt;p&gt;there were many things, but I could release the first app safely. maybe, this app looks like not to have enough features, but this app’s purpose is not to gather many users for getting money, just I want to use for my child and for developing an app with RN(React Native).&lt;/p&gt; &lt;p&gt;looking back, it took more time to design and to gather the illustrations than development. development took almost 1 week… I saw RN(React Native) development performance.(thanks developers who make many open sources.)&lt;/p&gt; &lt;p&gt;Apple strict App Review. changed App concept quickly, but this experience changed my mind that I could make more user friendly apps. thanks for App reviewers again.&lt;/p&gt; &lt;p&gt;The hypothesis that I can develop the app with free resources at BlaBoo is proven. develop apps using free resources!&lt;/p&gt; &lt;h2 id=&quot;lastly&quot;&gt;Lastly&lt;/h2&gt; &lt;p&gt;well, &lt;code class=&quot;highlighter-rouge&quot;&gt;TTS(Text To Speech)&lt;/code&gt; voice is not friendly. and there is wrong pronunciation. for example, TTS can’t pronounce &lt;code class=&quot;highlighter-rouge&quot;&gt;spaghetti&lt;/code&gt; in Korean, so I changed it to &lt;code class=&quot;highlighter-rouge&quot;&gt;pasta&lt;/code&gt;. if you want to donate voices, please contact me(&lt;a href=&quot;https://dev-yakuza.github.io/en/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;I use free illustrations so that doesn’t looks like same style. if you want to donate illustrations, please contact me(&lt;a href=&quot;https://dev-yakuza.github.io/en/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;I made BlaBoo support Japanese, English, Korean basically and app download is occured in China and Italy so I added Chinese and Italian. however, I don’t know Chinese and Italian so I used google translator. if you catch wrong Chinese or Italian, please feedback me. also if you want to donate other languages, please contact me(&lt;a href=&quot;https://dev-yakuza.github.io/en/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Donwload: &lt;a href=&quot;https://itunes.apple.com/us/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Apple App store&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Donwload: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Goole App store&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">Outline I’ve studied RN(React Native) so far, but I’ve never developed the app from start to finish. so I’ve decided to work on this project by using RN(React Native) to develop the app fastly from start to finish.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/blaboo/development-journal.png"/></entry><entry xml:lang="en"><title type="html">register Android App store</title><link href="https://dev-yakuza.github.io/en/react-native/android-google-play/" rel="alternate" type="text/html" title="register Android App store"/><published>2019-01-12T00:00:00+09:00</published><updated>2019-01-15T09:49:44+09:00</updated><id>https://dev-yakuza.github.io/react-native/android-google-play-en</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/android-google-play/">&lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;we want to register RN(React Native) Android App to Android App store(Google Play). we need to enroll Android Developer(Google Play Developer) to register Android App to Android App store(Google Play). if you didn’t enroll Android Developer(Google Play Developer), see our previous blog to enroll Android Developer(Google Play Developer).&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/&quot; target=&quot;_blank&quot;&gt;enroll Android developer&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;prepare&quot;&gt;Prepare&lt;/h2&gt; &lt;p&gt;we need RN(React Native) Android App build to register Android App store(Google Play). if you don’t know how to register Android Signing Key and how to build, see our previous blog.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;Android build and test&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;reduce-build-file-size&quot;&gt;Reduce Build File size&lt;/h2&gt; &lt;p&gt;in previous blog(&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;Android build and test&lt;/a&gt;), Android build we generated is not minimum file size. we need to reduce RN(React Native) Android build file size to upload Android App store(Google Play).&lt;/p&gt; &lt;p&gt;open &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt; in RN(React Native) project folder and modify like below.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... defaultConfig { ... // ndk { // abiFilters &quot;armeabi-v7a&quot;, &quot;x86&quot; // } } ... def enableSeparateBuildPerCPUArchitecture = true &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;and then, execute below command to build RN(React Native) Android App.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# cd android&lt;/span&gt; ./gradlew assembleRelease &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;you can find build files on below path.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;android/app/build/outputs/apk/release/app-armeabi-v7a-release.apk android/app/build/outputs/apk/release/app-x86-release.apk &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;register-app&quot;&gt;Register App&lt;/h2&gt; &lt;p&gt;click below link to go to Google Play Console..&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Play Console: &lt;a href=&quot;https://play.google.com/apps/publish/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://play.google.com/apps/publish/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;when you go to Google Play Console, you can see below screen.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/google-play-console-home.png&quot; alt=&quot;Google Play Console Home&quot; /&gt;&lt;/p&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;PUBLISH AN ANDROID APP ON GOOGLE PLAY&lt;/code&gt; button on top of the screen.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-title.png&quot; alt=&quot;Google Play Console App Title&quot; /&gt;&lt;/p&gt; &lt;p&gt;insert App name and default language to display on Android App store(Google Play).&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-info.png&quot; alt=&quot;Google Play Console App info&quot; /&gt;&lt;/p&gt; &lt;p&gt;insert App information to display on Android App store(Google Play).&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Title: 50 characters&lt;/li&gt; &lt;li&gt;Short description): 80 characters&lt;/li&gt; &lt;li&gt;Full description): 4000 characters&lt;/li&gt; &lt;li&gt;App Screenshots&lt;/li&gt; &lt;li&gt;App icon: 512x512(32-bit PNG, alpha), 1024x500(JPG or 24-bit PNG), 180x120(JPG or 24-bit PNG), 1280x720(JPG or 24-bit PNG), 4096x4096(JPG or 24-bit PNG)&lt;/li&gt; &lt;li&gt;Promo Video&lt;/li&gt; &lt;li&gt;App Category&lt;/li&gt; &lt;li&gt;Developer’s Contact details&lt;/li&gt; &lt;li&gt;Privacy Policy&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;if you finished to insert above informations, let’s see how to register apk file.&lt;/p&gt; &lt;p&gt;whne you click &lt;code class=&quot;highlighter-rouge&quot;&gt;App release&lt;/code&gt; menu on the left of the screen, you can see below screen.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-register.png&quot; alt=&quot;Google Play App Register&quot; /&gt;&lt;/p&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;MANAGE&lt;/code&gt; button on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Production&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;Production track&lt;/code&gt; section.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-production.png&quot; alt=&quot;Google Play create production app&quot; /&gt;&lt;/p&gt; &lt;p&gt;when you see above screen, click &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE RELEASE&lt;/code&gt; on the bottom of the screen.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/register-signing-key.png&quot; alt=&quot;Google Play register app signing key&quot; /&gt;&lt;/p&gt; &lt;p&gt;if you want to do App Signing by Google Play, click &lt;code class=&quot;highlighter-rouge&quot;&gt;FINISH&lt;/code&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/accept-agreement.png&quot; alt=&quot;Google Play accept agreement&quot; /&gt;&lt;/p&gt; &lt;p&gt;when you see above screen, click &lt;code class=&quot;highlighter-rouge&quot;&gt;ACCEPT&lt;/code&gt; button to accept the agreement.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_apk.png&quot; alt=&quot;Google Play apk upload&quot; /&gt;&lt;/p&gt; &lt;p&gt;upload &lt;code class=&quot;highlighter-rouge&quot;&gt;apk&lt;/code&gt; file we built.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_release_note.png&quot; alt=&quot;Google Play apk release note&quot; /&gt;&lt;/p&gt; &lt;p&gt;insert App release name and note. click &lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE&lt;/code&gt; button on the right bottom of the screen. and then, you can see &lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt; button activate. click &lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/not_yet.png&quot; alt=&quot;Google Play register not available&quot; /&gt;&lt;/p&gt; &lt;p&gt;we didn’t finish all procedures to register app, so &lt;code class=&quot;highlighter-rouge&quot;&gt;START ROLLOUT TO PRODUCTION&lt;/code&gt; button on right bottom of the screen is not activated. click &lt;code class=&quot;highlighter-rouge&quot;&gt;Content rating&lt;/code&gt; on left menu.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating.png&quot; alt=&quot;Google Play Content rating&quot; /&gt;&lt;/p&gt; &lt;p&gt;this screen is the screen to set Content Rating. click &lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE&lt;/code&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_insert_info.png&quot; alt=&quot;Google Play insert Content Rating info&quot; /&gt;&lt;/p&gt; &lt;p&gt;insert your email information and select App category.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_agreement.png&quot; alt=&quot;Google Play accept Content Rating info&quot; /&gt;&lt;/p&gt; &lt;p&gt;select App informations for Google to decide Content rating. after selecting all, click &lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE QUESTIONNAIRE&lt;/code&gt; button and click &lt;code class=&quot;highlighter-rouge&quot;&gt;CALCULATE RATING&lt;/code&gt; if it’s activate.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_completed.png&quot; alt=&quot;Google Play completed to select Content rating info&quot; /&gt;&lt;/p&gt; &lt;p&gt;you can see the result based on the information you selected. after checking the result, click &lt;code class=&quot;highlighter-rouge&quot;&gt;APPLYING RATING&lt;/code&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/calculated_content_rating.png&quot; alt=&quot;Google Play completed to set Content rating&quot; /&gt;&lt;/p&gt; &lt;p&gt;completed to set Content rating. iif you have any update to affect Content rating, you should recalculate it by above procedure.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/content_rating.png&quot; alt=&quot;Google Play Content rating&quot; /&gt;&lt;/p&gt; &lt;p&gt;let’s go to the end of the procedure. click &lt;code class=&quot;highlighter-rouge&quot;&gt;Pricing &amp;amp; distribution&lt;/code&gt; on left menu.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_price_info.png&quot; alt=&quot;Google Play set App price info&quot; /&gt;&lt;/p&gt; &lt;p&gt;this screen is the screen to set App price. we’ll provide our app for free so we configured &lt;code class=&quot;highlighter-rouge&quot;&gt;FREE&lt;/code&gt;. and there are questions about your app is to target the children, or your app includes advertisements, etc. after selecting all requirements, click &lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE DRAFT&lt;/code&gt; on the bottom of the screen.&lt;/p&gt; &lt;h2 id=&quot;apply-app-review&quot;&gt;Apply App Review&lt;/h2&gt; &lt;p&gt;finally, we’re ready to apply App review. click &lt;code class=&quot;highlighter-rouge&quot;&gt;App release&lt;/code&gt; menu.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_review.png&quot; alt=&quot;Google Play App review&quot; /&gt;&lt;/p&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;EDIT RELEASE&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;Producion&lt;/code&gt; section.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_review_info.png&quot; alt=&quot;Google Play App review infor&quot; /&gt;&lt;/p&gt; &lt;p&gt;we can see contents we wrote. scroll to the bottom and click &lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/apply_app_review_info.png&quot; alt=&quot;Google Play apply App review&quot; /&gt;&lt;/p&gt; &lt;p&gt;when you see above screen, scroll down and click &lt;code class=&quot;highlighter-rouge&quot;&gt;START ROLLOUT TO PRODUCTION&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/register_app.png&quot; alt=&quot;Google Play register App&quot; /&gt;&lt;/p&gt; &lt;p&gt;if you’re ready to apply App review, click &lt;code class=&quot;highlighter-rouge&quot;&gt;CONFIRM&lt;/code&gt; button.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;we’ve done to register App to Android App store(Google Play). App review takes 2 ~ 3 hours. if App review is finished, you can search and download your App in Android App store(Google Play).&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">Outline we want to register RN(React Native) Android App to Android App store(Google Play). we need to enroll Android Developer(Google Play Developer) to register Android App to Android App store(Google Play). if you didn’t enroll Android Developer(Google Play Developer), see our previous blog to enroll Android Developer(Google Play Developer).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/android-google-play.jpg"/></entry><entry xml:lang="en"><title type="html">enroll Android developer</title><link href="https://dev-yakuza.github.io/en/react-native/android-enroll-google-play-developer/" rel="alternate" type="text/html" title="enroll Android developer"/><published>2019-01-11T00:00:00+09:00</published><updated>2019-01-11T17:13:53+09:00</updated><id>https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer-en</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/">&lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;we’ll introduce how to enroll Android developer(Google Play developer) to register RN(React Native) Android App to Google Playstore.&lt;/p&gt; &lt;p&gt;if you want to know how to enroll Apple Developer Program, see our previous blog.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-enroll-developer-program/&quot; target=&quot;_blank&quot;&gt;enroll iOS developer&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;prepare&quot;&gt;Prepare&lt;/h2&gt; &lt;p&gt;to register Android App to Google Playstore, of course, we need Google Account. if you don’t have Google Account, create Google Account. also, Android developer(Google Play developer) must be at least 18 years old to register Android App.&lt;/p&gt; &lt;p&gt;to register Android developer(Google Play developer), we need register fee like registering iOS developer. the register fee is 25 dollars and it is required just one time unlike iOS developer annual fee. you can pay the fee by one of below card list.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Mastercard&lt;/li&gt; &lt;li&gt;Visa&lt;/li&gt; &lt;li&gt;American Express&lt;/li&gt; &lt;li&gt;Discover(America only)&lt;/li&gt; &lt;li&gt;Visa Electron(except America)&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;register-android-developer&quot;&gt;Register Android Developer&lt;/h2&gt; &lt;p&gt;now, we’re ready to register Android developer(Google Play developer). click below link to register Android developer(Google Play developer).&lt;/p&gt; &lt;ul&gt; &lt;li&gt;register Android developer(Google Play developer): &lt;a href=&quot;https://play.google.com/apps/publish/signup/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://play.google.com/apps/publish/signup/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;if you were logged in with Google Account and clicked above link, you can see the screen like below.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play-developer/enroll-goole-play-developer.png&quot; alt=&quot;Android developer, Google Play developer register site&quot; /&gt;&lt;/p&gt; &lt;p&gt;scroll to go down and agree &lt;code class=&quot;highlighter-rouge&quot;&gt;Accept developer agreement&lt;/code&gt; on left side and click &lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE TO PAYMENT&lt;/code&gt; on right bottom.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play-developer/accept-developer-agreement.png&quot; alt=&quot;Android developer, Google Play developer accept developer agreement&quot; /&gt;&lt;/p&gt; &lt;p&gt;and then, you can see payment screen like below.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play-developer/purchase.png&quot; alt=&quot;Android developer, Google Play developer register fee&quot; /&gt;&lt;/p&gt; &lt;p&gt;insert your payment information and click &lt;code class=&quot;highlighter-rouge&quot;&gt;BUY&lt;/code&gt; button on right bottom.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play-developer/purchase-completed.png&quot; alt=&quot;Android developer, Google Play developer success to pay&quot; /&gt;&lt;/p&gt; &lt;p&gt;if you succeed to pay, you can see the screen like above. click &lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE REGISTRATION&lt;/code&gt; button to continue to register Android developer(Google Play developer).&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play-developer/developer-info.png&quot; alt=&quot;insert Android developer, Google Play developer information&quot; /&gt;&lt;/p&gt; &lt;p&gt;when you see Android developer(Google Play developer) information input screen, insert all required fields and click &lt;code class=&quot;highlighter-rouge&quot;&gt;COMPLETE REGISTRATION&lt;/code&gt; button on right bottom.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play-developer/completed-enroll.png&quot; alt=&quot;succeed to register Android developer, Google Play developer&quot; /&gt;&lt;/p&gt; &lt;p&gt;if you succeed to register Android developer(Google Play developer), you can see the screen like above.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;we’ve talked about how to register Android developer(Google Play developer) to register RN(React Native) Android App to Google Playstore. in next blog post, we’ll introduce how to register RN(React Native) Android App to Google Playstore.&lt;/p&gt; &lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://support.google.com/googleplay/android-developer/answer/6112435&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://support.google.com/googleplay/android-developer/answer/6112435&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">Outline we’ll introduce how to enroll Android developer(Google Play developer) to register RN(React Native) Android App to Google Playstore.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/android-enroll-google-play-developer.jpg"/></entry><entry xml:lang="en"><title type="html">jwt:logout</title><link href="https://dev-yakuza.github.io/en/laravel/jwt-logout/" rel="alternate" type="text/html" title="jwt:logout"/><published>2019-01-05T00:00:00+09:00</published><updated>2019-01-06T16:27:20+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-logout-en</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-logout/">&lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;we will introduce how to implement logout feature in jwt authentication system. this blog is a series. if you want to know how to install jwt middleware or how to add signup, signin, getting user information feature, refresh jwt token, see our previous blogs.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt installation&amp;amp;settings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:signup&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:signin&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-user-info&quot; target=&quot;_blank&quot;&gt;jwt:user information&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-refresh-token&quot; target=&quot;_blank&quot;&gt;jwt:refresh token&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;repository&quot;&gt;Repository&lt;/h2&gt; &lt;p&gt;we’ve made the repository of jwt authentication system. click below link to see our repository.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;development-environment&quot;&gt;Development Environment&lt;/h2&gt; &lt;p&gt;in here, we’ll use Laravel development environment created by Laradock and Ansible. if you want to know our environment, see our previous blog.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;Ansible&amp;amp;Laravel&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;modify-controller&quot;&gt;Modify Controller&lt;/h2&gt; &lt;p&gt;open &lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt; controller file in Laravel project folder, and add below code.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'message'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'logout'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;modify-route&quot;&gt;Modify Route&lt;/h2&gt; &lt;p&gt;open &lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt; file, and add below code for the url which is for logout.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;test&quot;&gt;Test&lt;/h2&gt; &lt;p&gt;let’s check logout feature via &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/logout &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;if jwt token is valid, you can successfully logout.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-logout/logout.png&quot; alt=&quot;logout&quot; /&gt;&lt;/p&gt; &lt;p&gt;if jwt token is expired or previous jwt token, you can get &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; error response.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-logout/fail_to_logout.png&quot; alt=&quot;fail to logout&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;we’ve implemented a token based authentication system by adding jwt authentication system to Laravel project. we will use this jwt authentication system to develop RN(React Native) app.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">Outline we will introduce how to implement logout feature in jwt authentication system. this blog is a series. if you want to know how to install jwt middleware or how to add signup, signin, getting user information feature, refresh jwt token, see our previous blogs.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-logout.jpg"/></entry><entry xml:lang="en"><title type="html">jwt:refresh token</title><link href="https://dev-yakuza.github.io/en/laravel/jwt-refresh-token/" rel="alternate" type="text/html" title="jwt:refresh token"/><published>2019-01-04T00:00:00+09:00</published><updated>2019-01-06T15:44:04+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-refresh-token-en</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-refresh-token/">&lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;we will talk about how to refresh the issued token when user was login in jwt authentication system. this blog is a series. if you want to know how to install jwt middleware, signup, signin and get the user information, see our previous blogs.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt installation&amp;amp;setting&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:signup&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:signin&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-user-info&quot; target=&quot;_blank&quot;&gt;jwt:user information&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;repository&quot;&gt;Repository&lt;/h2&gt; &lt;p&gt;we’ve made the repository of jwt authentication system. click below link to see our repository.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;development-environment&quot;&gt;Development Environment&lt;/h2&gt; &lt;p&gt;in here, we’ll use Laravel development environment created by Laradock and Ansible. if you want to know our environment, see our previous blog.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;Ansible&amp;amp;Laravel&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;modify-controller&quot;&gt;Modify Controller&lt;/h2&gt; &lt;p&gt;open &lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt; file in Laravel project folder and add below code.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;modify-route&quot;&gt;Modify Route&lt;/h2&gt; &lt;p&gt;open &lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt; file for the url which is to refresh jwt token, and add below code.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;test&quot;&gt;Test&lt;/h2&gt; &lt;p&gt;let’s test jwt token refresh feature we’ve developed via &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/refresh &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;if jwt token is valid, jwt token is refreshed and issues new token like below screen.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-refresh-token/refresh_token.png&quot; alt=&quot;refresh token&quot; /&gt;&lt;/p&gt; &lt;p&gt;if jwt token is expired or previous jwt token, you can get &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; error response.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-refresh-token/fail_to_refresh_token.png&quot; alt=&quot;fail to refresh token&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;we’ve seen how to refresh jwt token which user got after login in jwt authentication system. at next blog post, we will introduce how to add logout feature which is last feature in jwt authentication system.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">Outline we will talk about how to refresh the issued token when user was login in jwt authentication system. this blog is a series. if you want to know how to install jwt middleware, signup, signin and get the user information, see our previous blogs.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-refresh-token.jpg"/></entry><entry xml:lang="en"><title type="html">jwt:user information</title><link href="https://dev-yakuza.github.io/en/laravel/jwt-user-info/" rel="alternate" type="text/html" title="jwt:user information"/><published>2018-12-28T00:00:00+09:00</published><updated>2019-01-06T15:44:04+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-user-info-en</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-user-info/">&lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;we’ll introduce how to get user information from login user in jwt authentication system. this blog is a series. if you want to know how to install jwt middleware and implement signup, signin features, see our previous blogs.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt installation&amp;amp;settings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:signup&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:signin&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;repository&quot;&gt;Repository&lt;/h2&gt; &lt;p&gt;we’ve made the repository of jwt authentication system. click below link to see our repository.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;development-environment&quot;&gt;Development Environment&lt;/h2&gt; &lt;p&gt;in here, we’ll use Laravel development environment created by Laradock and Ansible. if you want to know our environment, see our previous blog.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;Ansible&amp;amp;Laravel&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;modify-controller&quot;&gt;Modify Controller&lt;/h2&gt; &lt;p&gt;open &lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt; file in Laravel project folder and add below code.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;this function is to get and response login user information by client(browser) request.&lt;/p&gt; &lt;h2 id=&quot;modify-route&quot;&gt;Modify Route&lt;/h2&gt; &lt;p&gt;modify the route to connect the controller function and url. open &lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt; file and add below code.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'message'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; route which gets user information uses &lt;code class=&quot;highlighter-rouge&quot;&gt;auth:api&lt;/code&gt; middleware. this middleware judges the user is login or not login and if the user was login, the user can get user information. we will make user to redirect &lt;code class=&quot;highlighter-rouge&quot;&gt;unauthorized&lt;/code&gt; and response &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; if user was not login.&lt;/p&gt; &lt;h2 id=&quot;redirect&quot;&gt;Redirect&lt;/h2&gt; &lt;p&gt;Laravel &lt;code class=&quot;highlighter-rouge&quot;&gt;Auth&lt;/code&gt; middleware basically has redirect feature. we’ll configure the redirect for &lt;code class=&quot;highlighter-rouge&quot;&gt;api&lt;/code&gt; and set &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; response. open &lt;code class=&quot;highlighter-rouge&quot;&gt;app/Http/Middleware/Authenticate.php&lt;/code&gt; file and modify it like below.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;redirectTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expectsJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api/*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;test&quot;&gt;Test&lt;/h2&gt; &lt;p&gt;let’s test user information feature via &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/user &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;if jwt token is valid, you can get user information like below screen.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-user-info/get_user_info.png&quot; alt=&quot;get user info&quot; /&gt;&lt;/p&gt; &lt;p&gt;if jwt token is expired or user who didn’t login requests user information, you can get &lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt; error response.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-user-info/fail_to_get_user_info.png&quot; alt=&quot;fail to get user info&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;we’ve done to develop the api which gets user information feature in jwt authentication system. at next blog post, we will introduce how to make jwt token refresh feature after login.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">Outline we’ll introduce how to get user information from login user in jwt authentication system. this blog is a series. if you want to know how to install jwt middleware and implement signup, signin features, see our previous blogs.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-user-info.jpg"/></entry><entry xml:lang="en"><title type="html">jwt:signin</title><link href="https://dev-yakuza.github.io/en/laravel/jwt-signin/" rel="alternate" type="text/html" title="jwt:signin"/><published>2018-12-25T00:00:00+09:00</published><updated>2019-01-06T15:44:04+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-signin-en</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-signin/">&lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;we try to implement the login procedure via jwt authentication system. this blog is a series. if you want to know how to install jwt middleware or how to implement signup, see our previous blogs.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt installation&amp;amp;settings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:signup&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;repository&quot;&gt;Repository&lt;/h2&gt; &lt;p&gt;we’ve made the repository of jwt authentication system. click below link to see our repository.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;development-environment&quot;&gt;Development Environment&lt;/h2&gt; &lt;p&gt;in here, we’ll use Laravel development environment created by Laradock and Ansible. if you want to know our environment, see our previous blog.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;Ansible&amp;amp;Laravel&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;modify-model&quot;&gt;Modify Model&lt;/h2&gt; &lt;p&gt;modify model which is used jwt authentication system like below.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Foundation\Auth\User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Authenticatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tymon\JWTAuth\Contracts\JWTSubject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Authenticatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JWTSubject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;in order to use Laravel authentication feature, we have inherited the model from &lt;code class=&quot;highlighter-rouge&quot;&gt;Authenticatable&lt;/code&gt;. it also implements the interface of jwt middleware through &lt;code class=&quot;highlighter-rouge&quot;&gt;JWTSubject&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;above functions are parts implemented the interface of jwt middleware.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;this function is to get jwt token.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;we introduce jwt token for explaining this function. jwt consists largely of &lt;code class=&quot;highlighter-rouge&quot;&gt;Header.Payload.Signature&lt;/code&gt;. information parts in &lt;code class=&quot;highlighter-rouge&quot;&gt;Payload&lt;/code&gt; is called &lt;code class=&quot;highlighter-rouge&quot;&gt;Claim&lt;/code&gt; and it’s consisted of &lt;code class=&quot;highlighter-rouge&quot;&gt;key-value&lt;/code&gt; type. jwt basically has information(&lt;code class=&quot;highlighter-rouge&quot;&gt;Claim&lt;/code&gt;) in &lt;code class=&quot;highlighter-rouge&quot;&gt;Payload&lt;/code&gt; like below.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;iss(Issuer): token issuer&lt;/li&gt; &lt;li&gt;sub(Subject): token title(default is user id)&lt;/li&gt; &lt;li&gt;iat(Issued At): issued date(unix timestamp)&lt;/li&gt; &lt;li&gt;exp(Expiry): token expired date&lt;/li&gt; &lt;li&gt;nbf(Not Before): the start time when token is available.&lt;/li&gt; &lt;li&gt;jti(JWT Id): JWT unique identifier. used mainly to prevent redundant processing.&lt;/li&gt; &lt;li&gt;prv: the hash value of user provider class. especially added it in &lt;code class=&quot;highlighter-rouge&quot;&gt;tymondesigns/jwt-auth&lt;/code&gt; for using multiple guard. (&lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/pull/1167&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;more details&lt;/a&gt;)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;if you want to add more information to jwt token except these, you would set return value in &lt;code class=&quot;highlighter-rouge&quot;&gt;getJWTCustomClaims()&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'firstname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lastname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lastname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;modify-guard&quot;&gt;modify Guard&lt;/h2&gt; &lt;p&gt;modify &lt;code class=&quot;highlighter-rouge&quot;&gt;guard&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;config/auth.php&lt;/code&gt; file which is responsible the authentication in Laravel like below.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;'guards'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'web'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'session'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'provider'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'jwt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'provider'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;modify-controller&quot;&gt;Modify Controller&lt;/h2&gt; &lt;p&gt;add signin function in &lt;code class=&quot;highlighter-rouge&quot;&gt;app/Http/Controllers/JWTAuthController.php&lt;/code&gt; controller created in previous blog.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'token_type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bearer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expires_in'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;first, validate the input data in the request.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;and then login with user &lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;if login is success, send response with jwt token.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'token_type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bearer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expires_in'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;connect-route&quot;&gt;Connect Route&lt;/h2&gt; &lt;p&gt;connect login function in the controller and URL in &lt;code class=&quot;highlighter-rouge&quot;&gt;routes/api.php&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;test&quot;&gt;Test&lt;/h2&gt; &lt;p&gt;use &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt; to test login feature in jwt authentication system. when you insert &lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt; and send &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; request to &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost/api/login&lt;/code&gt; URL, you can see the screen like below.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signin/login.png&quot; alt=&quot;postman login api test&quot; /&gt;&lt;/p&gt; &lt;p&gt;when you check &lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt; key which receives from the response in &lt;a href=&quot;https://jwt.io/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://jwt.io/&lt;/a&gt;, you can see the result screen like below.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signin/check_access_key.png&quot; alt=&quot;check access_key&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;we’ve made login feature in jwt authentication system. in next blog post, we’ll introduce how to get user information by &lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;JSON Web Token (JWT): &lt;a href=&quot;https://tools.ietf.org/html/rfc7519#section-4.1&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://tools.ietf.org/html/rfc7519#section-4.1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;jwt-auth prv: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/issues/1344&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth/issues/1344&lt;/a&gt;&lt;/li&gt; &lt;li&gt;jwt-auth Creating Tokens: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/wiki/Creating-Tokens&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth/wiki/Creating-Tokens&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">Outline we try to implement the login procedure via jwt authentication system. this blog is a series. if you want to know how to install jwt middleware or how to implement signup, see our previous blogs.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-signin.png"/></entry><entry xml:lang="en"><title type="html">jwt:signup</title><link href="https://dev-yakuza.github.io/en/laravel/jwt-signup/" rel="alternate" type="text/html" title="jwt:signup"/><published>2018-12-22T00:00:00+09:00</published><updated>2019-01-05T17:30:18+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-siginup-en</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-signup/">&lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;we try to make signup feature by using jwt(Json Web Token) which is a token based authentication system. in this blog, we will apply &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;tymon/jwt-auth&lt;/a&gt; middleware to Laravel project to make jwt token system. if you want to know how to insall and configure &lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;, see our previous blog.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt installation&amp;amp;settings&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;repository&quot;&gt;Repository&lt;/h2&gt; &lt;p&gt;we’ve made the repository of jwt authentication system. click below link to see our repository.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;development-environment&quot;&gt;Development Environment&lt;/h2&gt; &lt;p&gt;in here, we’ll use Laravel development environment created by Laradock and Ansible. if you want to know our environment, see our previous blog.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;Ansible&amp;amp;Laravel&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;connect-database&quot;&gt;Connect Database&lt;/h2&gt; &lt;p&gt;signup feature which we will develop from now need the database to store the user information. if you don’t know how to connect the database to Laravel, see below blog.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;Ansible&amp;amp;Laravel&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;create-table&quot;&gt;Create Table&lt;/h2&gt; &lt;p&gt;Laravel basically provides the migration(the file to create DB table). so if you execute below command, you could use basic user table.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan migrate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;create-controller&quot;&gt;Create Controller&lt;/h2&gt; &lt;p&gt;execute below command to create the controller which implements jwt authentication system.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan make:controller JWTAuthController &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;modify &lt;code class=&quot;highlighter-rouge&quot;&gt;app/http/Controllers/JWTAuthController.php&lt;/code&gt; like below.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Support\Facades\Validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JWTAuthController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|max:100'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255|unique:users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255|confirmed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password_confirmation'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bcrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;let’s see the controller detaily.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|max:100'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255|unique:users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255|confirmed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password_confirmation'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;use &lt;code class=&quot;highlighter-rouge&quot;&gt;Validator&lt;/code&gt; to validate request (&lt;code class=&quot;highlighter-rouge&quot;&gt;$request&lt;/code&gt;) values from the client(browser).&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;if the validation is failed above, send the response with fail messag to the client(browser).&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bcrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;if the validation is success, create new user and store it.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;at this time, use &lt;code class=&quot;highlighter-rouge&quot;&gt;fillable&lt;/code&gt; feature defined in the model to fill the data from the request which client has sent.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;when the data is created successfully, send the response to the client(browser) with the data.&lt;/p&gt; &lt;h2 id=&quot;connect-route&quot;&gt;Connect Route&lt;/h2&gt; &lt;p&gt;configure the route to connect URL and the controller which we’ve made until now. open &lt;code class=&quot;highlighter-rouge&quot;&gt;routes/api.php&lt;/code&gt; file and modify it like below.&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;when Laravel receives the request at &lt;code class=&quot;highlighter-rouge&quot;&gt;register&lt;/code&gt; URL, it calls &lt;code class=&quot;highlighter-rouge&quot;&gt;register&lt;/code&gt; function in &lt;code class=&quot;highlighter-rouge&quot;&gt;JWTAuthController&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;test&quot;&gt;Test&lt;/h2&gt; &lt;p&gt;we use &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt; to test API. if you don’t have &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;, click below link to download it. you can also use &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt; instead of Postman.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Postman: &lt;a href=&quot;https://www.getpostman.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;now you can open &lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt; and send the post request to &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost/api/register&lt;/code&gt; url.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signup/register_api_test.png&quot; alt=&quot;postman register api test&quot; /&gt;&lt;/p&gt; &lt;p&gt;if the data is successfully created, you can see the response which we configured above. if it’s failed, you can see the screen like below.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signup/register_api_test_fail.png&quot; alt=&quot;postman register api test fail&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;until now, we’ve developed jwt authentication system which is one of token based authentication systems. next blog post, we will introduce how to make login procedure in jwt authentication system.&lt;/p&gt; &lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;tymon/jwt-auth: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Postman: &lt;a href=&quot;https://www.getpostman.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">Outline we try to make signup feature by using jwt(Json Web Token) which is a token based authentication system. in this blog, we will apply tymon/jwt-auth middleware to Laravel project to make jwt token system. if you want to know how to insall and configure tymon/jwt-auth, see our previous blog.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-signup.jpg"/></entry><entry xml:lang="en"><title type="html">react-native-animatable</title><link href="https://dev-yakuza.github.io/en/react-native/react-native-animatable/" rel="alternate" type="text/html" title="react-native-animatable"/><published>2018-12-19T00:00:00+09:00</published><updated>2018-12-19T14:36:13+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-animatable-en</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-animatable/">&lt;h2 id=&quot;outline&quot;&gt;outline&lt;/h2&gt; &lt;p&gt;to add simply animations to RN(react native), we’ll introduce how to use &lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt; which has gathered basic useful animations.&lt;/p&gt; &lt;p&gt;in this blog, we’ll explain with RN(react native) applied &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;. if you don’t know how to apply &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt; to RN(react native), see our previous blogs.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;install-the-library&quot;&gt;install the library&lt;/h2&gt; &lt;p&gt;execute below command to install react-native-animatable library.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install react-native-animatable &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;basic-usage&quot;&gt;basic usage&lt;/h2&gt; &lt;p&gt;add source like below to where you want to add an animation.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;zoomInUp&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Zoom&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Scotty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Animatable.Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;usage-with-event&quot;&gt;usage with event&lt;/h2&gt; &lt;p&gt;we can make animations start when user event is occurred by using RN(react native) &lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TouchableWithoutFeedback&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bounce&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Animatable.View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/TouchableWithoutFeedback&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onPress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bounce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;styled-components&quot;&gt;styled-components&lt;/h2&gt; &lt;p&gt;below is the way to apply an animation to the styled-components.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'styled-components/native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyledImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createAnimatableComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StyledImage&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bounceIn&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useNativeDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;animation-list&quot;&gt;animation list&lt;/h2&gt; &lt;p&gt;you can see animations with examples at &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt; official repository.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/oblador/react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;below is animation list.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;bounce&lt;/li&gt; &lt;li&gt;flash&lt;/li&gt; &lt;li&gt;jello&lt;/li&gt; &lt;li&gt;pulse&lt;/li&gt; &lt;li&gt;rotate&lt;/li&gt; &lt;li&gt;rubberBand&lt;/li&gt; &lt;li&gt;shake&lt;/li&gt; &lt;li&gt;swing&lt;/li&gt; &lt;li&gt;tada&lt;/li&gt; &lt;li&gt;wobble&lt;/li&gt; &lt;li&gt;bounceIn&lt;/li&gt; &lt;li&gt;bounceInDown&lt;/li&gt; &lt;li&gt;bounceInUp&lt;/li&gt; &lt;li&gt;bounceInLeft&lt;/li&gt; &lt;li&gt;bounceInRight&lt;/li&gt; &lt;li&gt;bounceOut&lt;/li&gt; &lt;li&gt;bounceOutDown&lt;/li&gt; &lt;li&gt;bounceOutUp&lt;/li&gt; &lt;li&gt;bounceOutLeft&lt;/li&gt; &lt;li&gt;bounceOutRight&lt;/li&gt; &lt;li&gt;fadeIn&lt;/li&gt; &lt;li&gt;fadeInDown&lt;/li&gt; &lt;li&gt;fadeInDownBig&lt;/li&gt; &lt;li&gt;fadeInUp&lt;/li&gt; &lt;li&gt;fadeInUpBig&lt;/li&gt; &lt;li&gt;fadeInLeft&lt;/li&gt; &lt;li&gt;fadeInLeftBig&lt;/li&gt; &lt;li&gt;fadeInRight&lt;/li&gt; &lt;li&gt;fadeInRightBig&lt;/li&gt; &lt;li&gt;fadeOut&lt;/li&gt; &lt;li&gt;fadeOutDown&lt;/li&gt; &lt;li&gt;fadeOutDownBig&lt;/li&gt; &lt;li&gt;fadeOutUp&lt;/li&gt; &lt;li&gt;fadeOutUpBig&lt;/li&gt; &lt;li&gt;fadeOutLeft&lt;/li&gt; &lt;li&gt;fadeOutLeftBig&lt;/li&gt; &lt;li&gt;fadeOutRight&lt;/li&gt; &lt;li&gt;fadeOutRightBig&lt;/li&gt; &lt;li&gt;flipInX&lt;/li&gt; &lt;li&gt;flipInY&lt;/li&gt; &lt;li&gt;flipOutX&lt;/li&gt; &lt;li&gt;flipOutY&lt;/li&gt; &lt;li&gt;lightSpeedIn&lt;/li&gt; &lt;li&gt;lightSpeedOut&lt;/li&gt; &lt;li&gt;slideInDown&lt;/li&gt; &lt;li&gt;slideInUp&lt;/li&gt; &lt;li&gt;slideInLeft&lt;/li&gt; &lt;li&gt;slideInRight&lt;/li&gt; &lt;li&gt;slideOutDown&lt;/li&gt; &lt;li&gt;slideOutUp&lt;/li&gt; &lt;li&gt;slideOutLeft&lt;/li&gt; &lt;li&gt;slideOutRight&lt;/li&gt; &lt;li&gt;zoomIn&lt;/li&gt; &lt;li&gt;zoomInDown&lt;/li&gt; &lt;li&gt;zoomInUp&lt;/li&gt; &lt;li&gt;zoomInLeft&lt;/li&gt; &lt;li&gt;zoomInRight&lt;/li&gt; &lt;li&gt;zoomOut&lt;/li&gt; &lt;li&gt;zoomOutDown&lt;/li&gt; &lt;li&gt;zoomOutUp&lt;/li&gt; &lt;li&gt;zoomOutLeft&lt;/li&gt; &lt;li&gt;zoomOutRight&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;completed&quot;&gt;completed&lt;/h2&gt; &lt;p&gt;if you want to use simple animations fastly, we recommend to use &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;reference&quot;&gt;reference&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/oblador/react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">outline to add simply animations to RN(react native), we’ll introduce how to use react-native-animatable which has gathered basic useful animations.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-animatable.jpg"/></entry><entry xml:lang="en"><title type="html">Firebase Crashlytics</title><link href="https://dev-yakuza.github.io/en/react-native/firebase-crashlytics/" rel="alternate" type="text/html" title="Firebase Crashlytics"/><published>2018-12-12T00:00:00+09:00</published><updated>2018-12-14T13:19:15+09:00</updated><id>https://dev-yakuza.github.io/react-native/firebase-crashlytics-en</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/firebase-crashlytics/">&lt;h2 id=&quot;outline&quot;&gt;outline&lt;/h2&gt; &lt;p&gt;we’ve introduced how to analyze App crash Log from App review rejection at previous blog(&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-app-crash-debugging/&quot; target=&quot;_blank&quot;&gt;iOS App crash analysis&lt;/a&gt;). however, if App is in user environment not review status and crashed, we can’t know App is crashed. so we’ll explain how to gather and analyze App crash on Firebase Crashlytics. in this blog, we will use react-native-firebase library. if you didn’t set react-native-firebase, see our previous blog about how to install and set the library.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;Firebase Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;configure-ios&quot;&gt;configure iOS&lt;/h2&gt; &lt;p&gt;let’s see how to configure react-native-firebase on iOS to use Firebase Crashlytics.&lt;/p&gt; &lt;h3 id=&quot;set-and-install-required-libraries&quot;&gt;set and install required libraries&lt;/h3&gt; &lt;p&gt;add required libraries to &lt;code class=&quot;highlighter-rouge&quot;&gt;Podfile&lt;/code&gt; like below.&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Firebase/Core'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Firebase/AdMob'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Fabric'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Crashlytics'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;use below &lt;code class=&quot;highlighter-rouge&quot;&gt;pod&lt;/code&gt; command to install added libraries.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# cd ios&lt;/span&gt; pod update &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;add-crashlytics-executing-script&quot;&gt;add Crashlytics executing script&lt;/h3&gt; &lt;p&gt;we need to add Crashlytics executing script to use Firebase Crashlytics.&lt;/p&gt; &lt;p&gt;execute Xcode to select &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[AppName].xcworkspace&lt;/code&gt; on RN(react native) project folder.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/execute_xcode.png&quot; alt=&quot;execute xcode&quot; /&gt;&lt;/p&gt; &lt;p&gt;select own your project on left file explorer and &lt;code class=&quot;highlighter-rouge&quot;&gt;TARGETS&lt;/code&gt;. adn select &lt;code class=&quot;highlighter-rouge&quot;&gt;Build Phases&lt;/code&gt; on the top menu.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/build_phases.png&quot; alt=&quot;xcode build phases&quot; /&gt;&lt;/p&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; button on Build Phases tab and select &lt;code class=&quot;highlighter-rouge&quot;&gt;New Run Script Phase&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/new_run_script.png&quot; alt=&quot;new run script menu on build phases&quot; /&gt;&lt;/p&gt; &lt;p&gt;insert below command to &lt;code class=&quot;highlighter-rouge&quot;&gt;# Type a script...&lt;/code&gt; under &lt;code class=&quot;highlighter-rouge&quot;&gt;Shell&lt;/code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;Run Script&lt;/code&gt;;&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PODS_ROOT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/Fabric/run&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/add_run_script.png&quot; alt=&quot;add Run Script&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;test&quot;&gt;test&lt;/h3&gt; &lt;p&gt;insert below code to where you want to test Firebase Crashlytics.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crashlytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;this code forcely makes App crash. if App is crashed and exited, execute App again to report to Firebase Crashlytics.&lt;/p&gt; &lt;p&gt;execute below command or xcode to start the simulator.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native run-ios &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;if you use xcode to start the simulator, you should close xcode and execute App again. if xcode is executed and App is crashed, xcode treats the crash, not to report to Crashlytics.&lt;/p&gt; &lt;p&gt;after crashing, execute App again. after a while, you can see crash report at Firebase Console Crashlytics like below.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/firebase_crashlytics.png&quot; alt=&quot;Firebase Console Crashlytics&quot; /&gt;&lt;/p&gt; &lt;p&gt;wraning: remove test code (&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.crashlytics().crash();&lt;/code&gt;) after test.&lt;/p&gt; &lt;h2 id=&quot;configure-android&quot;&gt;configure Android&lt;/h2&gt; &lt;p&gt;configure react-native-firebase on Android to use Firebase Crashlytics.&lt;/p&gt; &lt;h3 id=&quot;set-and-install-required-libraries-1&quot;&gt;set and install required libraries&lt;/h3&gt; &lt;p&gt;modify &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt; file like below.&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apply plugin: &quot;com.android.application&quot; apply plugin: 'io.fabric' ... dependencies { ... implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') { transitive = true } } ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;modify &lt;code class=&quot;highlighter-rouge&quot;&gt;android/build.gradle&lt;/code&gt; file like below.&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... buildscript { ... dependencies { ... classpath 'com.google.gms:google-services:4.0.1' classpath 'io.fabric.tools:gradle:1.25.4' } ... repositories { ... jcenter() maven { url 'https://maven.fabric.io/public' } } ... } ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;modify &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/main/java/com/[app name]/MainApplication.java&lt;/code&gt; file like below.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.invertase.firebase.RNFirebasePackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.invertase.firebase.fabric.crashlytics.RNFirebaseCrashlyticsPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReactPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPackages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReactPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RNFirebasePackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RNFirebaseCrashlyticsPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;test-1&quot;&gt;test&lt;/h3&gt; &lt;p&gt;add below code to where you want to test Firebase Crashlytics.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crashlytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;when we started Android emulator and execute &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native run-android&lt;/code&gt; to make App crash, red error screen was appeared so App crash was not reported. so we tested to install built file on the emulator. if you don’t know how to build and test on Android, see our previous blog - &lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;Android build and test&lt;/a&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native bundle &lt;span class=&quot;nt&quot;&gt;--platform&lt;/span&gt; android &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--entry-file&lt;/span&gt; index.js &lt;span class=&quot;nt&quot;&gt;--bundle-output&lt;/span&gt; android/app/src/main/assets/index.android.bundle &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;build javascript by above command, and execute below command to install on the emulator.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native run-android &lt;span class=&quot;nt&quot;&gt;--variant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;release &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;and then test, we can see App crash report like below.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/firebase_crashlytics_android.png&quot; alt=&quot;Firebase Console Crashlytics android&quot; /&gt;&lt;/p&gt; &lt;p&gt;warning: remove test code (&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.crashlytics().crash();&lt;/code&gt;) after test.&lt;/p&gt; &lt;h2 id=&quot;reference&quot;&gt;reference&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/docs/crashlytics/get-started&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://firebase.google.com/docs/crashlytics/get-started&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://rnfirebase.io/docs/v5.x.x/crashlytics/ios&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://rnfirebase.io/docs/v5.x.x/crashlytics/ios&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">outline we’ve introduced how to analyze App crash Log from App review rejection at previous blog(iOS App crash analysis). however, if App is in user environment not review status and crashed, we can’t know App is crashed. so we’ll explain how to gather and analyze App crash on Firebase Crashlytics. in this blog, we will use react-native-firebase library. if you didn’t set react-native-firebase, see our previous blog about how to install and set the library.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/firebase-crashlytics.jpg"/></entry></feed>