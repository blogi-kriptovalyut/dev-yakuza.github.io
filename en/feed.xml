<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dev-yakuza.github.io/en/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/en/" rel="alternate" type="text/html"/><updated>2018-11-13T13:30:04+09:00</updated><id>https://dev-yakuza.github.io/</id><title type="html">Dreams the art through programming</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="en"><title type="html">enroll iOS developer</title><link href="https://dev-yakuza.github.io/en/react-native/ios-enroll-developer-program/" rel="alternate" type="text/html" title="enroll iOS developer"/><published>2018-11-10T00:00:00+09:00</published><updated>2018-11-10T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/react-native/ios-enroll-developer-program-en</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/ios-enroll-developer-program/">&lt;h2 id=&quot;outline&quot;&gt;outline&lt;/h2&gt; &lt;p&gt;until now, we studied how to develop the app on RN(react native) and how to test on the device. in here we introduce how to enroll Apple Developer Program for registering RN(react native) app to iOS App store.&lt;/p&gt; &lt;h2 id=&quot;enroll-apple-developer-program&quot;&gt;enroll Apple Developer Program&lt;/h2&gt; &lt;p&gt;click below link to go to Apple Developer site for enrolling Apple Developer Program.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Apple developer site: &lt;a href=&quot;https://developer.apple.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.apple.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-enroll-developer-program/apple-developer-site.png&quot; alt=&quot;apple developer site&quot; /&gt;&lt;/p&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;Account&lt;/code&gt; on the top right of the page to go to login page.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-enroll-developer-program/login.png&quot; alt=&quot;apple developer login&quot; /&gt;&lt;/p&gt; &lt;p&gt;if you don’t have Developer Account, see &lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-test-on-device/&quot; target=&quot;_blank&quot;&gt;device test&lt;/a&gt; blog post and create it.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-enroll-developer-program/after-login.png&quot; alt=&quot;after login&quot; /&gt;&lt;/p&gt; &lt;p&gt;after login, you can see above screen. click &lt;code class=&quot;highlighter-rouge&quot;&gt;Join the Apple Developer Program&lt;/code&gt; to go to Apple Developer Program page.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-enroll-developer-program/apple-developer-program-site.png&quot; alt=&quot;Apple Developer Program site&quot; /&gt;&lt;/p&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;Enroll&lt;/code&gt; button to go to Apple Developer Program enrollment condition page.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-enroll-developer-program/apple-developer-program-condition.png&quot; alt=&quot;Apple Developer Program condition&quot; /&gt;&lt;/p&gt; &lt;p&gt;you can see Apple Developer Program enrollment condition. if you created the Developer Account, you are already in all green. scroll down and click &lt;code class=&quot;highlighter-rouge&quot;&gt;Start Your Enrollment&lt;/code&gt; button to go to enrollment page.&lt;/p&gt; &lt;p&gt;you can see Apple Developer Program selection page. choose one of Apple Developer program. we selected &lt;code class=&quot;highlighter-rouge&quot;&gt;Individual / Sole Proprietor / Single Person Business&lt;/code&gt; and in here, we introduce it. select Apple Developer Program and click &lt;code class=&quot;highlighter-rouge&quot;&gt;Continue&lt;/code&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-enroll-developer-program/select-apple-developer-program.png&quot; alt=&quot;select apple developer program&quot; /&gt;&lt;/p&gt; &lt;p&gt;insert private information about Apple Developer Account and agree to terms. click &lt;code class=&quot;highlighter-rouge&quot;&gt;Continue&lt;/code&gt; button on the right bottom of the page.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-enroll-developer-program/information.png&quot; alt=&quot;apple developer account private information&quot; /&gt;&lt;/p&gt; &lt;p&gt;check your information and click &lt;code class=&quot;highlighter-rouge&quot;&gt;Continue&lt;/code&gt; button.&lt;/p&gt; &lt;p&gt;you can see purchase screen. click &lt;code class=&quot;highlighter-rouge&quot;&gt;Purchase&lt;/code&gt; button. we will skip the explanation of the purchase procedure.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;completed&lt;/h2&gt; &lt;p&gt;completed purchase procedure. if purchase is approved, you can get email from Apple. it takes a time between purchase and purchase approvement. if you can’t get email from Apple after long time, go to Apple Developer site(&lt;a href=&quot;https://developer.apple.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.apple.com/&lt;/a&gt;) and click &lt;code class=&quot;highlighter-rouge&quot;&gt;Account&lt;/code&gt; menu. click &lt;code class=&quot;highlighter-rouge&quot;&gt;Contact Us&lt;/code&gt; menu on Account page and contact Apple.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">outline until now, we studied how to develop the app on RN(react native) and how to test on the device. in here we introduce how to enroll Apple Developer Program for registering RN(react native) app to iOS App store.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/ios-enroll-developer-program.jpg"/></entry><entry xml:lang="en"><title type="html">build and test</title><link href="https://dev-yakuza.github.io/en/react-native/ios-running-on-device/" rel="alternate" type="text/html" title="build and test"/><published>2018-11-09T00:00:00+09:00</published><updated>2018-11-09T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/react-native/ios-running-on-device-en</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/ios-running-on-device/">&lt;h2 id=&quot;outline&quot;&gt;outline&lt;/h2&gt; &lt;p&gt;we introduced how to test RN(react native) project on the device at previous blog.(&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-test-on-device/&quot; target=&quot;_blank&quot;&gt;device test&lt;/a&gt;) Did everyone have no problem? we enough to test RN(react native) project so let’s build RN(react native) project for production and test it on the device.&lt;/p&gt; &lt;p&gt;in here, we will introduce how to build RN(react native) project and how to test the built file on the device. this blog doesn’t include how to upload to Market.&lt;/p&gt; &lt;h2 id=&quot;ios--mac&quot;&gt;iOS / Mac&lt;/h2&gt; &lt;p&gt;if you don’t know how to create developer account and connect the device to Mac, see previous blog.(&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-test-on-device/&quot; target=&quot;_blank&quot;&gt;device test&lt;/a&gt;) in here, we will only introduce how to build RN(react native) project for production and how to test the built file on the device.&lt;/p&gt; &lt;h3 id=&quot;prepare-to-build&quot;&gt;prepare to build&lt;/h3&gt; &lt;p&gt;we are not English native so your English is better than us. if you don’t like our poor English, just see official site(&lt;a href=&quot;https://facebook.github.io/react-native/docs/ios-running-on-device#building-your-app-for-production&quot; rel=&quot;nofollow noreferrer&quot;&gt;react-native&lt;/a&gt;). there are all details about how to build for production. we will introduce how to build by following that.&lt;/p&gt; &lt;h4 id=&quot;configure-https-protocol&quot;&gt;configure HTTPS protocol&lt;/h4&gt; &lt;p&gt;Apple added the feature for security reason. if this is activated, all HTTP requests(not HTTPS requests) are rejected. but when RN(react native) is on development, RN(react native) executes dev-server on Local PC and communicates by HTTP request so RN(react native) basically disabled this feature. however, RN(react native) is built and executed on production, it doesn’t communicate with dev-server so we need to delete disable code. find below code at &lt;code class=&quot;highlighter-rouge&quot;&gt;/ios/projectname/info.plist&lt;/code&gt; in RN(react native) project folder and delete them.&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSAppTransportSecurity&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSAllowsArbitraryLoads&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSExceptionDomains&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;localhost&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSExceptionAllowsInsecureHTTPLoads&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;warning: if you develop again, you should restore this code. we already said RN(react native) uses dev-server with HTTP request.&lt;/p&gt; &lt;p&gt;if your app need HTTP requests not HTTPS, just delete &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost&lt;/code&gt; parts like below code.&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSAppTransportSecurity&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSAllowsArbitraryLoads&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h4 id=&quot;change-build-scheme&quot;&gt;change build scheme&lt;/h4&gt; &lt;p&gt;we need to change build scheme form &lt;code class=&quot;highlighter-rouge&quot;&gt;Debug&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Release&lt;/code&gt; for RN(react native) production. execute &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/projectname.xcodeproj&lt;/code&gt; file in RN(react native) project.&lt;/p&gt; &lt;p&gt;after xcode is executed, select &lt;code class=&quot;highlighter-rouge&quot;&gt;Product&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Scheme&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Edit&lt;/code&gt; on the top menubar.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-running-on-device/change-scheme.png&quot; alt=&quot;change build scheme&quot; /&gt;&lt;/p&gt; &lt;p&gt;select &lt;code class=&quot;highlighter-rouge&quot;&gt;Run&lt;/code&gt; menu when you see below screen. change &lt;code class=&quot;highlighter-rouge&quot;&gt;Build Configuration&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;Debug&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Release&lt;/code&gt; and click &lt;code class=&quot;highlighter-rouge&quot;&gt;Close&lt;/code&gt; button to close the dialog.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-running-on-device/change-debug-to-release.png&quot; alt=&quot;change build scheme to Release from Debug&quot; /&gt;&lt;/p&gt; &lt;p&gt;warning: when you develop again, you should restore &lt;code class=&quot;highlighter-rouge&quot;&gt;Build Configuration&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;Release&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Debug&lt;/code&gt;.&lt;/p&gt; &lt;h4 id=&quot;specifying-the-bundle-file&quot;&gt;specifying the bundle file&lt;/h4&gt; &lt;p&gt;finally, we need to specify the bundle file. RN(react native) uses dev-server(localhost) which serve js(javascript) file on development but on production, RN(react native) creates one bundle file and uses it like &lt;code class=&quot;highlighter-rouge&quot;&gt;react&lt;/code&gt; so we need to set built bundle file. edit code at &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/projectname/AppleDelegate.m&lt;/code&gt; file in RN(react natie) project folder lie below.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#ifdef DEBUG jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@&quot;index&quot; fallbackResource:nil]; #else jsCodeLocation = [[NSBundle mainBundle] URLForResource:@&quot;main&quot; withExtension:@&quot;jsbundle&quot;]; #endif &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h4 id=&quot;test-on-the-device&quot;&gt;test on the device&lt;/h4&gt; &lt;p&gt;completed all settings. let’s check the built file on the device. connect the device to Mac and change build target from the simulator to the device and click arrow to execute.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-running-on-device/device-test.png&quot; alt=&quot;device test&quot; /&gt;&lt;/p&gt; &lt;p&gt;it is not necessary that Mac and the device are same Wifi/Network enviroment like device test and doesn’t need to connect the device to Mac after installation because RN(react native) uses the bundle file.however, this is not formal installation so the app will not be available after a certain period time.&lt;/p&gt; &lt;h2 id=&quot;android&quot;&gt;Android&lt;/h2&gt; &lt;p&gt;when we test on Andorid, we will add contents in here.&lt;/p&gt; &lt;h2 id=&quot;reference&quot;&gt;reference&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;official site: &lt;a href=&quot;https://facebook.github.io/react-native/docs/ios-running-on-device&quot; rel=&quot;nofollow noreferrer&quot;&gt;react native&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">outline we introduced how to test RN(react native) project on the device at previous blog.(device test) Did everyone have no problem? we enough to test RN(react native) project so let’s build RN(react native) project for production and test it on the device.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/ios-running-on-device.jpg"/></entry><entry xml:lang="en"><title type="html">device test</title><link href="https://dev-yakuza.github.io/en/react-native/ios-test-on-device/" rel="alternate" type="text/html" title="device test"/><published>2018-11-08T00:00:00+09:00</published><updated>2018-11-08T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/react-native/ios-test-on-device-en</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/ios-test-on-device/">&lt;h2 id=&quot;outline&quot;&gt;outline&lt;/h2&gt; &lt;p&gt;it is slow and annoyed to test on the simulator, isn’t it? let’s start to test RN(react native) on devices not the simulator.&lt;/p&gt; &lt;h2 id=&quot;ios--mac&quot;&gt;iOS / Mac&lt;/h2&gt; &lt;p&gt;we absolutely need Mac to test RN(react native) project on iPhone. we need to prepare iPhone, Mac and RN(react native) project you want to test.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/mac-iphone.jpg&quot; alt=&quot;prepare iphone mac&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;create-developer-account&quot;&gt;create developer account&lt;/h3&gt; &lt;p&gt;we need Apple developer account to test on devices. this is not enrolling developer program so it is free to create Apple developer account. if you have Apple developer account, it is better to skip this section.&lt;/p&gt; &lt;p&gt;click below link to go to the Apple developer account site.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Apple developer account site: &lt;a href=&quot;https://developer.apple.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.apple.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/apple-developer-site.png&quot; alt=&quot;apple developer site&quot; /&gt;&lt;/p&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;account&lt;/code&gt; menu on the right top.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/apple-developer-site-login.png&quot; alt=&quot;apple developer site login&quot; /&gt;&lt;/p&gt; &lt;p&gt;if you have Apple account, you can login. if you don’t have Apple account, click &lt;code class=&quot;highlighter-rouge&quot;&gt;Create Apple ID&lt;/code&gt; for creating. this account is Apple account that you use on iPhone for downloading App, not Apple developer account.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/agreement.png&quot; alt=&quot;agreement&quot; /&gt;&lt;/p&gt; &lt;p&gt;after login, you can see agreement. click &lt;code class=&quot;highlighter-rouge&quot;&gt;By checking this box I confirm that I have read and agree to be bound by the Agreement above.&lt;/code&gt;for agreeing and &lt;code class=&quot;highlighter-rouge&quot;&gt;Submit&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/completed-create-account.png&quot; alt=&quot;completed to create developer account&quot; /&gt;&lt;/p&gt; &lt;p&gt;completed to create Apple developer account.&lt;/p&gt; &lt;h3 id=&quot;test-on-deveices&quot;&gt;test on deveices&lt;/h3&gt; &lt;p&gt;your English is definitely better than us so you can see everything on official site(&lt;a href=&quot;https://facebook.github.io/react-native/docs/running-on-device&quot; rel=&quot;nofollow noreferrer&quot;&gt;react native&lt;/a&gt;). we do just following it.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;connect the device to Mac using USB.&lt;/li&gt; &lt;li&gt;got to RN(react native) project folder and execute &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project name].xcodeproj&lt;/code&gt; file.&lt;/li&gt; &lt;li&gt; &lt;p&gt;after xcode is executed, click project name on left top and click &lt;code class=&quot;highlighter-rouge&quot;&gt;General&lt;/code&gt; tab on right side. scroll down a little bit, you can see &lt;code class=&quot;highlighter-rouge&quot;&gt;Signing&lt;/code&gt; section. click &lt;code class=&quot;highlighter-rouge&quot;&gt;Add an Account...&lt;/code&gt; button beside &lt;code class=&quot;highlighter-rouge&quot;&gt;Team&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/signing.png&quot; alt=&quot;signing in xcode&quot; /&gt;&lt;/p&gt; &lt;p&gt;insert Apple developer account ID / PW created upside and click &lt;code class=&quot;highlighter-rouge&quot;&gt;Next&lt;/code&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/signing-login.png&quot; alt=&quot;login signing in xcode&quot; /&gt;&lt;/p&gt; &lt;p&gt;after login, click &lt;code class=&quot;highlighter-rouge&quot;&gt;Download Manual Profiles&lt;/code&gt; on the bottom of the window. and close the window. now you can see dropdown menu beside &lt;code class=&quot;highlighter-rouge&quot;&gt;Team&lt;/code&gt;. select your Apple developer account.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/signing-error.png&quot; alt=&quot;signing error in xcode&quot; /&gt;&lt;/p&gt; &lt;p&gt;if you have same error above, scroll up and change &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundle Identifier&lt;/code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;Identity&lt;/code&gt; section.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/signing-error-solve.png&quot; alt=&quot;signing error solve in xcode&quot; /&gt;&lt;/p&gt; &lt;p&gt;select &lt;code class=&quot;highlighter-rouge&quot;&gt;(project name)Tests&lt;/code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;Targets&lt;/code&gt; section. select your Apple developer account again on the dropdown menu beside &lt;code class=&quot;highlighter-rouge&quot;&gt;Team&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;signing&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/signing-target-test.png&quot; alt=&quot;signing test target in xcode&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;change build target to the device on left top and click the arrow for starting the project.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/device-test.png&quot; alt=&quot;device test in xcode&quot; /&gt;&lt;/p&gt; &lt;p&gt;warning: this process is for testing on the device. so test server is executed on PC like doing the simulator process. and the device accesses to the server to test RN(react native) project. so the device and PC must be on same Wifi/network for testing.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;you can see below message when build is succeeded.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-test-on-device/security-error.png&quot; alt=&quot;security error&quot; /&gt;&lt;/p&gt; &lt;p&gt;there are details what to do. just follow it.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;android&quot;&gt;Android&lt;/h2&gt; &lt;p&gt;if we test on Android, we write contents in here.&lt;/p&gt; &lt;h2 id=&quot;reference&quot;&gt;reference&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;official site: &lt;a href=&quot;https://facebook.github.io/react-native/docs/running-on-device&quot; rel=&quot;nofollow noreferrer&quot;&gt;react native&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">outline it is slow and annoyed to test on the simulator, isn’t it? let’s start to test RN(react native) on devices not the simulator.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/ios-test-on-device.jpg"/></entry><entry><title type="html">React Native Admob/common/installation</title><link href="https://dev-yakuza.github.io/en/2018/11/" rel="alternate" type="text/html" title="React Native Admob/common/installation"/><published>2018-11-04T00:00:00+09:00</published><updated>2018-11-04T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/2018/react-native-admob/common/installation</id><content type="html" xml:base="https://dev-yakuza.github.io/2018/11/">&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-tts &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">npm install --save react-native-tts</summary></entry><entry xml:lang="en"><title type="html">Google Admob</title><link href="https://dev-yakuza.github.io/en/react-native/react-native-admob/" rel="alternate" type="text/html" title="Google Admob"/><published>2018-11-04T00:00:00+09:00</published><updated>2018-11-04T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-admob-en</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-admob/">&lt;h2 id=&quot;outline&quot;&gt;outline&lt;/h2&gt; &lt;p&gt;google has the advertisement platforms those are Adsense(&lt;a href=&quot;https://www.google.com/adsense/start/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/adsense/start/&lt;/a&gt;) and Admob(&lt;a href=&quot;https://www.google.com/admob/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/admob/&lt;/a&gt;). in here we talk about how to display Google Admob advertisement to RN(react-native).&lt;/p&gt; &lt;p&gt;the difference between Google Adsense and Admob is that Adsense is for the website platform and Admob is for the smartphone application. we already used Adsense on this blog website. if you want to know how to use Google Adsense to the website, see another blog(&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/google-service/&quot;&gt;google service&lt;/a&gt;).&lt;/p&gt; &lt;h2 id=&quot;install-library&quot;&gt;install library&lt;/h2&gt; &lt;p&gt;install &lt;a href=&quot;https://github.com/sbugert/react-native-admob&quot; rel=&quot;nofollow noreferrer&quot;&gt;react-native-admob&lt;/a&gt; library for using Google Admob at RN(react native).&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install react-native-admob@next &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;when installation is completed, link react-native-admob library to RN(react native) project by executing below code.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-admob &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;install-sdk-for-ios&quot;&gt;install SDK for iOS&lt;/h3&gt; &lt;p&gt;to use Google Admob on iOS, we need to install &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt;. click below link to see how to install &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Mobile Ads SDK: &lt;a href=&quot;https://developers.google.com/admob/ios/quick-start#import_the_mobile_ads_sdk&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developers.google.com/admob/ios/quick-start&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;we introduce how to install &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt; by downloading the file.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;donwload link: &lt;a href=&quot;https://developers.google.com/admob/ios/download&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developers.google.com/admob/ios/download&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;click above link to go to the download site and download &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt; file. after downloading, unzip the file.&lt;/p&gt; &lt;p&gt;go to iOS folder in RN(react-native) project folder and execute &lt;code class=&quot;highlighter-rouge&quot;&gt;[projectname].xcodeproj&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/add_sdk.png&quot; alt=&quot;add Google Mobile Ads SDK to ios &quot; /&gt;&lt;/p&gt; &lt;p&gt;after executing xcode, right click project name on the left of the top and &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Files to [project name]&lt;/code&gt;. go to the folder which you unzip &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt;, and select &lt;code class=&quot;highlighter-rouge&quot;&gt;GoogleMobileAds.framework&lt;/code&gt; file. click &lt;code class=&quot;highlighter-rouge&quot;&gt;Copy items if needed&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; button for adding &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;signup-googld-admob&quot;&gt;signup Googld Admob&lt;/h2&gt; &lt;p&gt;go to Google Admob site for signup. it’s same process to signup and signin to normal service.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Admob site: &lt;a href=&quot;https://www.google.com/admob/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/admob/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;google-admob-configuration&quot;&gt;Google Admob Configuration&lt;/h2&gt; &lt;p&gt;let’s check about how to use Google Admob. after signup and signin to Google Admob, you can see below screen.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/signin_google_admob.png&quot; alt=&quot;signin google admob&quot; /&gt;&lt;/p&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;GET STARTED&lt;/code&gt; button for starting Google Admob.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/configure_admob.png&quot; alt=&quot;configure admob&quot; /&gt;&lt;/p&gt; &lt;p&gt;choose wether the app is already registered in Market or not. we did not register the app to Market, so select &lt;code class=&quot;highlighter-rouge&quot;&gt;NO&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/configure_app_name.png&quot; alt=&quot;configure app name on admob&quot; /&gt;&lt;/p&gt; &lt;p&gt;create the app name and choose the platform of the app for using Google Admob. we selected &lt;code class=&quot;highlighter-rouge&quot;&gt;iOS&lt;/code&gt; in here.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/completed_configure.png&quot; alt=&quot;completed to configure&quot; /&gt;&lt;/p&gt; &lt;p&gt;completed to register Google Admob. there are details about next step. 구글 애드몹(Google admob) 등록이 완료되었습니다. 친절하게 하단에 다음 단계에 대한 설명이 잘 나와있습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;copy &lt;code class=&quot;highlighter-rouge&quot;&gt;App ID&lt;/code&gt; for setting react-native-admob&lt;/li&gt; &lt;li&gt;we need to configure Ad Unit in Google Admob.&lt;/li&gt; &lt;li&gt;after releasing the app to Market, we need to link it in Google Admob.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;NEXT: CREATE AD UNIT&lt;/code&gt; on the bottom of the page to go to the configuration.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/select_ad_uni.png&quot; alt=&quot;select advertisement type&quot; /&gt;&lt;/p&gt; &lt;p&gt;we use Banner advertisement first. click &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; button on the bottom of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Banner&lt;/code&gt; section.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/set_banner_name.png&quot; alt=&quot;input banner name&quot; /&gt;&lt;/p&gt; &lt;p&gt;set the banner name. this banner name just helps you find and recognize this banner on Google Admob. after inserting, click &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE AD UNIT&lt;/code&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-admob/finished_configuration.png&quot; alt=&quot;finished configuration&quot; /&gt;&lt;/p&gt; &lt;p&gt;completed to set Google Admob banner. copy App ID and ad unit ID.&lt;/p&gt; &lt;h2 id=&quot;react-native-admob&quot;&gt;react-native-admob&lt;/h2&gt; &lt;p&gt;let’s see how to use react-native-admob for using Google Admob banner to RN(react native)&lt;/p&gt; &lt;h3 id=&quot;ios-configuration&quot;&gt;iOS configuration.&lt;/h3&gt; &lt;p&gt;we need to edit &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project name]/AppDelegate.m&lt;/code&gt; for using Google Admob on iOS.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#import &amp;lt;React/RCTRootView.h&amp;gt; @import GoogleMobileAds; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;import &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Mobile Ads SDK&lt;/code&gt; we downloaded before.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;self.window.rootViewController = rootViewController; [GADMobileAds configureWithApplicationID:@&quot;ca-app-pub-7987914246691031~8295071692&quot;]; [self.window makeKeyAndVisible]; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;paste Google Admob App ID to &lt;code class=&quot;highlighter-rouge&quot;&gt;[GADMobileAds configureWithApplicationID:@&quot;Google-Admob-App-Id&quot;];&lt;/code&gt; and insert this code on above position.&lt;/p&gt; &lt;p&gt;now we ready to use Google Admob on iOS.&lt;/p&gt; &lt;h3 id=&quot;react-native-admob-usage&quot;&gt;react-native-admob usage&lt;/h3&gt; &lt;p&gt;import &lt;code class=&quot;highlighter-rouge&quot;&gt;AdmobBanner&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-admob&lt;/code&gt; library on the file you want to display Google Admob banner.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdMobBanner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-admob'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;copy-paste below code to the position where you want to display Google Admob banner.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdMobBanner&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fullBanner&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adUnitID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ad unit ID&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testDevices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdMobBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;simulatorId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdFailedToLoad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;adSize: this is the banner size. details about the banner size, see the official site.(&lt;a href=&quot;https://github.com/sbugert/react-native-admob#admobbanner&quot; rel=&quot;nofollow noreferrer&quot;&gt;react-native-admob banner size&lt;/a&gt;)&lt;/li&gt; &lt;li&gt;adUnitID: copy-paste Ad Unit ID that we created in Google Admob service.&lt;/li&gt; &lt;li&gt;testDevices: test device ID list. we set the simulator ID.&lt;/li&gt; &lt;li&gt;onAdFailedToLoad: if the advertisement loading is failed, this is executed.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;completed to set. execute RN(react native) and check the banner displayed well.&lt;/p&gt; &lt;h2 id=&quot;android&quot;&gt;Android&lt;/h2&gt; &lt;p&gt;introduce about how to apply on Android, when we develop Android application.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">outline google has the advertisement platforms those are Adsense(https://www.google.com/adsense/start/) and Admob(https://www.google.com/admob/). in here we talk about how to display Google Admob advertisement to RN(react-native).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-admob.jpg"/></entry><entry xml:lang="en"><title type="html">create version(editing history)</title><link href="https://dev-yakuza.github.io/en/git/create-stage/" rel="alternate" type="text/html" title="create version(editing history)"/><published>2018-10-31T00:00:00+09:00</published><updated>2018-10-31T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/git/create-stage-en</id><content type="html" xml:base="https://dev-yakuza.github.io/git/create-stage/">&lt;h2 id=&quot;outline&quot;&gt;outline&lt;/h2&gt; &lt;p&gt;we introduced how to create git repository in the previous blog post.(&lt;a href=&quot;https://dev-yakuza.github.io/git/create-stage/&quot; target=&quot;_blank&quot;&gt;create Repository&lt;/a&gt;) in here, we will show how to create version(editing history) to use git version control.&lt;/p&gt; &lt;h2 id=&quot;add-new-file&quot;&gt;add new file&lt;/h2&gt; &lt;p&gt;copy or create new file on the folder(&lt;code class=&quot;highlighter-rouge&quot;&gt;temp_test_git&lt;/code&gt;) which has git repository.&lt;/p&gt; &lt;p&gt;we created &lt;code class=&quot;highlighter-rouge&quot;&gt;text.txt&lt;/code&gt; file written &lt;code class=&quot;highlighter-rouge&quot;&gt;test text&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;temp_test_git&lt;/code&gt; folder for testing.&lt;/p&gt; &lt;h2 id=&quot;git-status&quot;&gt;git status&lt;/h2&gt; &lt;p&gt;execute &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; command for checking current status of git repository.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;you can see below screen after executing &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; command.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-status.png&quot; alt=&quot;git status&quot; /&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;On branch master: current Branch is Master branch. we will introduce git Branch at another blog post.&lt;/li&gt; &lt;li&gt;No commits yet: our status is before committing. commit means version(editing history). No commits yet means we didn’t create version(editing history).&lt;/li&gt; &lt;li&gt;Untracked files: the list of not managing files by git.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;we didn’t mention it to git that we want to manage &lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt; file to version(editing history). so we can see &lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt; file with &lt;code class=&quot;highlighter-rouge&quot;&gt;Untracked files&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;git-add&quot;&gt;git add&lt;/h2&gt; &lt;p&gt;we need to tell git that new file(&lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt;) is version(editing history) management target. execute &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; command for helping git recognize new file(&lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt;) is version(editing history) management target.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# add single file&lt;/span&gt; git add test.txt &lt;span class=&quot;c&quot;&gt;# add multiple files&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# git add test.txt test2.txt test3.txt&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# add all files&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# git add .&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;execute &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; command for checking that git recognized new file well.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;after executing &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; command, you can see different screen before.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-status-after-add.png&quot; alt=&quot;git status after executing git add command&quot; /&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Changes to be committed: next version(editing history) file list. we added new file so we can see &lt;code class=&quot;highlighter-rouge&quot;&gt;text.txt&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;new file&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;the reason of existing adding file process by &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; command is that files is existed that we don’t want to include in version(editing history) when we develop real products. for example, it is used to distinguish between the version (history of change) and irrelevant contents like result files after building, DB information files, ID/PW configuration files or temporally edited files for logging with log code(console.log / print, etc)&lt;/p&gt; &lt;h2 id=&quot;git-commit&quot;&gt;git commit&lt;/h2&gt; &lt;p&gt;we informed git with &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; command which file we want to add to the version(editing history). but version(editing history) is not managed yet. just we told git that we have new files. now, we create version(editing history) by executing &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;when you execute &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; command, you can see the create version(editing history) screen.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-commit.png&quot; alt=&quot;git commit&quot; /&gt;&lt;/p&gt; &lt;p&gt;this screen is &lt;code class=&quot;highlighter-rouge&quot;&gt;vim&lt;/code&gt; that is a text editor. we need to push &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;(insert) for editing the document. and type messages about changes.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-commit-with-message.png&quot; alt=&quot;git commit with message&quot; /&gt;&lt;/p&gt; &lt;p&gt;when you finish to write messages, push &lt;code class=&quot;highlighter-rouge&quot;&gt;esc&lt;/code&gt; button on the keyboard and type &lt;code class=&quot;highlighter-rouge&quot;&gt;:wq&lt;/code&gt;(write-quit) and pusy &lt;code class=&quot;highlighter-rouge&quot;&gt;enter&lt;/code&gt; button for saving.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-complete-commit.png&quot; alt=&quot;git completed commit&quot; /&gt;&lt;/p&gt; &lt;p&gt;you can see above messages when you finish to write change history.&lt;/p&gt; &lt;h2 id=&quot;git-log&quot;&gt;git log&lt;/h2&gt; &lt;p&gt;execute &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt; to check version(editing history) created well.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;after executing &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;, you can see current version(editing history) you wrote.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-log.png&quot; alt=&quot;git log&quot; /&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Author: version(editing history) creator’s name and email(we registered before with &lt;code class=&quot;highlighter-rouge&quot;&gt;git config&lt;/code&gt; command.)&lt;/li&gt; &lt;li&gt;Date: version(editing history) create date.&lt;/li&gt; &lt;li&gt;you can see messages you wrote when you executed &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; command under the Date section.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;if-modify-files&quot;&gt;if modify files&lt;/h2&gt; &lt;p&gt;if files are modified, use the same process as above. execute &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; command to check current status like below.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;git tells us there are no changes because we did not do anything.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-status-no-change.png&quot; alt=&quot;git status no change&quot; /&gt;&lt;/p&gt; &lt;p&gt;now we change &lt;code class=&quot;highlighter-rouge&quot;&gt;test text&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;test string&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt; file and execute &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; again.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;we have changed the file so we can see different screen before&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-status-with-modification.png&quot; alt=&quot;git status with modification&quot; /&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;modified: modified file list.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;tell git that we have change history with &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; command. in other words, add the file to version(editing history).&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add test.txt &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;execute &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; again to check the status.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-status-after-commit.png&quot; alt=&quot;git status after commit&quot; /&gt;&lt;/p&gt; &lt;p&gt;we can see differences that text color was changed green and &lt;code class=&quot;highlighter-rouge&quot;&gt;no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)&lt;/code&gt; message was alos gone. now we can know &lt;code class=&quot;highlighter-rouge&quot;&gt;test.txt&lt;/code&gt; file added to git version(editing history) well. create version(editing history) to use &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; command. write &lt;code class=&quot;highlighter-rouge&quot;&gt;edit 'text' to 'string'&lt;/code&gt; to version message(editing history message).&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;and then execute &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt; to check version(editing history) created well.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-stage/git-log-with-new-version.png&quot; alt=&quot;git log with new version&quot; /&gt;&lt;/p&gt; &lt;p&gt;we can see version(editing history) created well as above.&lt;/p&gt; &lt;h2 id=&quot;summary&quot;&gt;summary&lt;/h2&gt; &lt;p&gt;we saw about how to create version(editing history). the summary is as below.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;cretae or edit files.&lt;/li&gt; &lt;li&gt;check created or added files with &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; command.&lt;/li&gt; &lt;li&gt;execute &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; command to add files to version(editing history).&lt;/li&gt; &lt;li&gt;check registered files well with &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; command.&lt;/li&gt; &lt;li&gt;create version(editing history) with messages by &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; command.&lt;/li&gt; &lt;li&gt;check created version(editing history) with &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt; command.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;we can make new version(editing history) as above.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">outline we introduced how to create git repository in the previous blog post.(create Repository) in here, we will show how to create version(editing history) to use git version control.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/git/create-stage.jpg"/></entry><entry xml:lang="en"><title type="html">create Repository</title><link href="https://dev-yakuza.github.io/en/git/create-repository/" rel="alternate" type="text/html" title="create Repository"/><published>2018-10-29T00:00:00+09:00</published><updated>2018-10-29T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/git/create-repository-en</id><content type="html" xml:base="https://dev-yakuza.github.io/git/create-repository/">&lt;h2 id=&quot;outline&quot;&gt;outline&lt;/h2&gt; &lt;p&gt;we already installed git so let’s use git for managing source code. we introduce how to create git repository for managing source code by git at here. git repository is the storage where source code changing hisotries store&lt;/p&gt; &lt;h2 id=&quot;create-project-folder&quot;&gt;create project folder&lt;/h2&gt; &lt;p&gt;we use &lt;code class=&quot;highlighter-rouge&quot;&gt;terminal&lt;/code&gt; for Mac, and &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; for Windows. create the folder for using git.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir temp_test_git &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;create-git-repository&quot;&gt;create git repository&lt;/h2&gt; &lt;p&gt;create git repository for using git in the project folder.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;temp_test_git git &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;execute above command, you can see git command list.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-repository/clone_init.png&quot; alt=&quot;git clone init&quot; /&gt;&lt;/p&gt; &lt;p&gt;you can see &lt;code class=&quot;highlighter-rouge&quot;&gt;clone&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; command in git command list.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;init: create new git repository.&lt;/li&gt; &lt;li&gt;clone: clone(copy) new repository from existing git repository.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;git-init&quot;&gt;git init&lt;/h3&gt; &lt;p&gt;if you start new project, you can make new git repository with &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; command.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git init &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;git-clone&quot;&gt;git clone&lt;/h3&gt; &lt;p&gt;if you have existing project(Opensource or project already managed by git), you can clone(copy) the repository from remote repository.&lt;/p&gt; &lt;p&gt;we introduce how to clone(copy) git project using our blog git repository.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;our git repository: &lt;a href=&quot;https://github.com/dev-yakuza/dev-yakuza.github.io&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/dev-yakuza/dev-yakuza.github.io&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;click the above link to go to the our git repository in github.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/create-repository/clone.png&quot; alt=&quot;git clone blog&quot; /&gt;&lt;/p&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;Clone or download&lt;/code&gt; button on right side and copy the url of the git repository.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git clone https://github.com/dev-yakuza/dev-yakuza.github.io.git &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;execute the above command to clone our git repository to your local pc. we serve our blog by using &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; and github page. if you are interested about how to make a blog with jekyll and github, please check our another blog series(&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/&quot; target=&quot;_blank&quot;&gt;jekyll blog&lt;/a&gt;).&lt;/p&gt; &lt;h2 id=&quot;check-git-repository-created&quot;&gt;check git repository created&lt;/h2&gt; &lt;p&gt;execute the below command for checking git repository created.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Mac&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-al&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Windows&lt;/span&gt; dir /ah &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;if you can see &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; folder in folder list, you are succeed to create git repository. &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; folder stores informations about source code edit histories when you use git to manage them. if you delete &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; folder, you delete also all histories and git repository so please be careful not to delete it.&lt;/p&gt; &lt;h2 id=&quot;configure-user&quot;&gt;configure user&lt;/h2&gt; &lt;p&gt;add user to new git repository for managing source code version. we can recognize who edit source code if git user is set.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# git config --global user.name [user name]&lt;/span&gt; git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name dev.yakuza &lt;span class=&quot;c&quot;&gt;# git config --global user.email [user email]&lt;/span&gt; git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email dev.yakuza@gmail.com &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">outline we already installed git so let’s use git for managing source code. we introduce how to create git repository for managing source code by git at here. git repository is the storage where source code changing hisotries store</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/git/create-repository.jpg"/></entry><entry xml:lang="en"><title type="html">git installation</title><link href="https://dev-yakuza.github.io/en/git/installation/" rel="alternate" type="text/html" title="git installation"/><published>2018-10-25T00:00:00+09:00</published><updated>2018-10-25T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/git/installation-en</id><content type="html" xml:base="https://dev-yakuza.github.io/git/installation/">&lt;h2 id=&quot;source-code-version-controls&quot;&gt;source code version controls&lt;/h2&gt; &lt;p&gt;git can manage the version of the source code. managing version’s mean is storing and managing the editing history of the source code. you wanted to go before editing the source code but you didn’t remember where you edit. you were in trouble, weren’t you? if you use source code version control like git, you can solve this kind of situation. however git is not a magic tool like we push &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl + z&lt;/code&gt; keys for going back to change text.&lt;/p&gt; &lt;p&gt;source code version control is that developer edits the source code and stores them to another space(Repository) with editing histories. and then if developer want to go back to the before editing, developer pulls the source code which is before editing from another space(Repository) via the source code version control like git.&lt;/p&gt; &lt;p&gt;git is the one of the source code version control and has many features. we use the parts of them, and actually we don’t know exactly what it is so we start to this blog. we hope this blog helpful for you too.&lt;/p&gt; &lt;h2 id=&quot;git-installation&quot;&gt;git installation&lt;/h2&gt; &lt;p&gt;before using git, let’s install git to PC. install git by following the installation instructions for your OS.&lt;/p&gt; &lt;h2 id=&quot;intsll-git-on-mac&quot;&gt;intsll git on Mac&lt;/h2&gt; &lt;p&gt;click the below link for downloading git installation file for Mac.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;download link: &lt;a href=&quot;https://git-scm.com/download/mac&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://git-scm.com/download/mac&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;if downloading is not started automatically, click the &lt;code class=&quot;highlighter-rouge&quot;&gt;click here to download manually&lt;/code&gt; link on the site.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/installation/download_mac.png&quot; alt=&quot;git download for mac&quot; /&gt;&lt;/p&gt; &lt;p&gt;if downloading is finished, click the file for installing. installing is same processing when you download and install other programs via Web. if you see security warning, go to the settings of the Mac and confirm it for installing.&lt;/p&gt; &lt;p&gt;if installation is finished, execute the below code on &lt;code class=&quot;highlighter-rouge&quot;&gt;terminal&lt;/code&gt; for check to finish installing on Mac.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;install-git-to-windows&quot;&gt;install git to Windows&lt;/h2&gt; &lt;p&gt;click the below link for downloading git installation file for Windows.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;download link: &lt;a href=&quot;https://gitforwindows.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://gitforwindows.org/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/git/installation/download_windows.png&quot; alt=&quot;git download for windows&quot; /&gt;&lt;/p&gt; &lt;p&gt;if downloading is completed, you can install it on Windows like other programs.&lt;/p&gt; &lt;p&gt;when installation is finished, execute the below code on &lt;code class=&quot;highlighter-rouge&quot;&gt;commands&lt;/code&gt; for checking to complete the installation.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;you can open &lt;code class=&quot;highlighter-rouge&quot;&gt;commands&lt;/code&gt; by pressing &lt;code class=&quot;highlighter-rouge&quot;&gt;windows key + r&lt;/code&gt; and typing &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; and pressing &lt;code class=&quot;highlighter-rouge&quot;&gt;enter&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;completed&lt;/h2&gt; &lt;p&gt;completed to install. now we can use git on PC.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">source code version controls git can manage the version of the source code. managing version’s mean is storing and managing the editing history of the source code. you wanted to go before editing the source code but you didn’t remember where you edit. you were in trouble, weren’t you? if you use source code version control like git, you can solve this kind of situation. however git is not a magic tool like we push ctrl + z keys for going back to change text.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/git/installation.jpg"/></entry><entry xml:lang="en"><title type="html">github page</title><link href="https://dev-yakuza.github.io/en/jekyll/github-page/" rel="alternate" type="text/html" title="github page"/><published>2018-10-22T00:00:00+09:00</published><updated>2018-10-22T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/jekyll/github-page-en</id><content type="html" xml:base="https://dev-yakuza.github.io/jekyll/github-page/">&lt;h2 id=&quot;outline&quot;&gt;outline&lt;/h2&gt; &lt;p&gt;let’s start blog service by uploading jekyll project to github page. we manage basic source code by &lt;a href=&quot;https://bitbucket.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;bitbucket&lt;/a&gt; and upload static page which is built by jekyll to &lt;a href=&quot;https://github.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;github&lt;/a&gt; for the blog service.&lt;/p&gt; &lt;p&gt;if you don’t know how to make jekyll project, check my previous blogs.&lt;/p&gt; &lt;h3 id=&quot;create-jekyll-blog&quot;&gt;create jekyll blog&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/installation/&quot; target=&quot;_blank&quot;&gt;jekyll installation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/theme/&quot; target=&quot;_blank&quot;&gt;Theme settings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/directory_structure/&quot; target=&quot;_blank&quot;&gt;Directory Structure&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/configuration/&quot; target=&quot;_blank&quot;&gt;jekyll settings&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;jekyll-project-optionals&quot;&gt;jekyll project optionals&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/multi-languages-plugin/&quot; target=&quot;_blank&quot;&gt;Multi-languages plugin&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/seo/&quot; target=&quot;_blank&quot;&gt;SEO support&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/pagination-plugin/&quot; target=&quot;_blank&quot;&gt;pagination plugin&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/disqus/&quot; target=&quot;_blank&quot;&gt;Disqus comments&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/send-email/&quot; target=&quot;_blank&quot;&gt;Send Email&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/jekyll/google-service/&quot; target=&quot;_blank&quot;&gt;google service&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;bitbucket&quot;&gt;bitbucket&lt;/h2&gt; &lt;p&gt;bitbucket is source control(version control) service like github. there are many features but we focus to introduce how to manage source code for uploading github. if you don’t mind revealing the your source to people, it’s better to skip this section.&lt;/p&gt; &lt;p&gt;click below link to go to bitbucket.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;bitbucket: &lt;a href=&quot;https://bitbucket.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://bitbucket.org/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;signup-and-signin&quot;&gt;signup and signin&lt;/h3&gt; &lt;p&gt;we don’t introduce how to signup and signin. it’s same process to signup and signin to normal service.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/bitbucket-login.png&quot; alt=&quot;bitbucket login&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;create-repository&quot;&gt;create repository&lt;/h3&gt; &lt;p&gt;after login, you can see the menu on the screen. click &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; button.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/bitbucket-menu.png&quot; alt=&quot;bitbucket menu&quot; class=&quot;narrow-image&quot; /&gt;&lt;/p&gt; &lt;p&gt;if you see the menu like below, click &lt;code class=&quot;highlighter-rouge&quot;&gt;Repository&lt;/code&gt; for creating new repository.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/bitbucket-menu-repository.png&quot; alt=&quot;bitbucket menu repository&quot; class=&quot;narrow-image&quot; /&gt;&lt;/p&gt; &lt;p&gt;input repository informations.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/bitbucket-menu-repository-information.png&quot; alt=&quot;bitbucket menu repository information&quot; /&gt;&lt;/p&gt; &lt;p&gt;completed to create the repository.&lt;/p&gt; &lt;h3 id=&quot;clone-repository-to-local-pc&quot;&gt;clone repository to local PC&lt;/h3&gt; &lt;p&gt;clone the created repository to local pc for developing. if you don’t know how to install git or use it, check my another blog.(&lt;a href=&quot;https://dev-yakuza.github.io/git/&quot; target=&quot;_blank&quot;&gt;git&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/bitbucket-git-clone.png&quot; alt=&quot;bitbucket git clone&quot; /&gt;&lt;/p&gt; &lt;p&gt;when repository is created, you can see the above screen. there is the detail about how to clone it. let’s do it.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// git clone &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;your bitbucket git url] git clone https://JeongHean_Kim@bitbucket.org/JeongHean_Kim/dev-yakuza.git &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;clone the repository with the above command. copy jekyll project to the created folder.(or create new jekyll project on there.)&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'add new project'&lt;/span&gt; git push &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; origin master &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;push the local(pc) source to bitbucket repository with the above command.&lt;/p&gt; &lt;p&gt;go to the &lt;a href=&quot;https://bitbucket.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;bitbucket site&lt;/a&gt; and check the source which you pushed.&lt;/p&gt; &lt;h2 id=&quot;integrate-github-page&quot;&gt;integrate github page&lt;/h2&gt; &lt;p&gt;let’s upload the static files built by jekyll to github page for starting blog service.&lt;/p&gt; &lt;h3 id=&quot;signup-and-signin-1&quot;&gt;signup and signin&lt;/h3&gt; &lt;p&gt;click the below link to go to the github site and signup and signin. we don’t introduce how to signup and signin. it’s same process to signup and signin to normal service.&lt;/p&gt; &lt;p&gt;warning: when you sigup, be careful to make &lt;code class=&quot;highlighter-rouge&quot;&gt;username&lt;/code&gt;. we make github blog service with &lt;code class=&quot;highlighter-rouge&quot;&gt;https://username.github.io&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;github site: &lt;a href=&quot;https://github.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/github-login.png&quot; alt=&quot;github login&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;create-repository-1&quot;&gt;create Repository&lt;/h3&gt; &lt;p&gt;after login, you can see the below screen. click &lt;code class=&quot;highlighter-rouge&quot;&gt;Start a project&lt;/code&gt; button to create new repository.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/github-repository.png&quot; alt=&quot;github repository&quot; /&gt;&lt;/p&gt; &lt;p&gt;input &lt;code class=&quot;highlighter-rouge&quot;&gt;username + github.io&lt;/code&gt; that username is when you created on signup and click &lt;code class=&quot;highlighter-rouge&quot;&gt;Create repository&lt;/code&gt; button for creating the repository.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/github-create-repository.png&quot; alt=&quot;github crete repository&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;clone-repository-to-pc&quot;&gt;clone Repository to PC&lt;/h3&gt; &lt;p&gt;there are the detail about how to clone it kindly, but we don’t do it because we already clone bitbucket to local(pc). we will do another way.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/github-page/github-clone-repository.png&quot; alt=&quot;github clone repository&quot; /&gt;&lt;/p&gt; &lt;p&gt;add remote repository with the below command.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// git remote add github &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;github repository url] git remote add github https://github.com/dev-yakuza/dev-yakuza-test.github.io.git &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;completed to clone it. push only the source built by jekyll to the repository with the below command.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git subtree add &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt; _site/ github master git subtree push &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt; _site/ github master &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;if the source is not built by jekyll, build it first.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll build &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;check the blog site on github page.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://dev-yakuza.github.io &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;completed&quot;&gt;completed&lt;/h2&gt; &lt;p&gt;we looked how to integrate the source to github and bitbucket. we integrated the source which is before being built to bitbucket and integrated static pages built by jekyll to github page for the blog service. now, you can start own your blog.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">outline let’s start blog service by uploading jekyll project to github page. we manage basic source code by bitbucket and upload static page which is built by jekyll to github for the blog service.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/jekyll/github-page.jpg"/></entry><entry xml:lang="en"><title type="html">google service</title><link href="https://dev-yakuza.github.io/en/jekyll/google-service/" rel="alternate" type="text/html" title="google service"/><published>2018-10-19T00:00:00+09:00</published><updated>2018-10-19T00:00:00+09:00</updated><id>https://dev-yakuza.github.io/jekyll/google-service-en</id><content type="html" xml:base="https://dev-yakuza.github.io/jekyll/google-service/">&lt;h2 id=&quot;outline&quot;&gt;outline&lt;/h2&gt; &lt;p&gt;if you want to gather the money or the insight from your blog, we think integrating google service to your blog is important. we introduce how to integrate google service to jekyll project.&lt;/p&gt; &lt;p&gt;we will introduce below service.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Analytics: &lt;a href=&quot;https://analytics.google.com/analytics/web/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://analytics.google.com/analytics/web/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Google Search Console: &lt;a href=&quot;https://search.google.com/search-console/about&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://search.google.com/search-console/about&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Google Adsense: &lt;a href=&quot;https://www.google.com/adsense/start/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/adsense/start/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;google-analytics&quot;&gt;Google Analytics&lt;/h2&gt; &lt;p&gt;if you want to analyze your site, we recommend to use Google Analytics service. click below link to go to the service site and sigin with google account.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Analytics: &lt;a href=&quot;https://analytics.google.com/analytics/web/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://analytics.google.com/analytics/web/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;after login, you can see below screen. click &lt;code class=&quot;highlighter-rouge&quot;&gt;sign up&lt;/code&gt; button to go to next step.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/analytics/signup.png&quot; alt=&quot;google analytics signup&quot; /&gt;&lt;/p&gt; &lt;p&gt;input your site informations to the form and click &lt;code class=&quot;highlighter-rouge&quot;&gt;Get Tracking ID&lt;/code&gt; to get tracking code.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/analytics/register-site.png&quot; alt=&quot;google analytics register site&quot; /&gt;&lt;/p&gt; &lt;p&gt;when tracking code is issued, copy the code under the &lt;code class=&quot;highlighter-rouge&quot;&gt;Global Site Tag (gtag.js)&lt;/code&gt; and paste to the &lt;code class=&quot;highlighter-rouge&quot;&gt;_include/head.html&lt;/code&gt;. layout file may vary depending on your theme.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/analytics/tracking-code.png&quot; alt=&quot;google analytics tracking code&quot; /&gt;&lt;/p&gt; &lt;p&gt;warning: above code is test code for the example. don’t copy-paste. copy-paste your tracking code.&lt;/p&gt; &lt;h2 id=&quot;google-search-console&quot;&gt;Google Search Console&lt;/h2&gt; &lt;p&gt;if we register our site to Google Search Console, the site is able to be searched on Google. click below link to go to the Google Search Console site.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Search Console: &lt;a href=&quot;https://search.google.com/search-console/about&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://search.google.com/search-console/about&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;Start now&lt;/code&gt; to starting Google Search Console when you see below screen.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/search-console/start.png&quot; alt=&quot;google search console start&quot; /&gt;&lt;/p&gt; &lt;p&gt;input your site URL to register to Google Search Console.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/search-console/register.png&quot; alt=&quot;google search console start&quot; /&gt;&lt;/p&gt; &lt;p&gt;if you see below screen, select &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Analytics&lt;/code&gt; and click &lt;code class=&quot;highlighter-rouge&quot;&gt;VERIFY&lt;/code&gt; button for verifying your site.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/search-console/verify.png&quot; alt=&quot;google search console verify&quot; /&gt;&lt;/p&gt; &lt;p&gt;now register your sitemap for google bot can crawl your site.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/search-console/sitemap.png&quot; alt=&quot;google search console sitemap&quot; /&gt;&lt;/p&gt; &lt;p&gt;completed to integrate Google Search Console. now Google bot starts to crawl. we just wait for it.&lt;/p&gt; &lt;p&gt;if Google bot can not crawl the site or take a long time, you can request your site to crawl directly.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/search-console/request.png&quot; alt=&quot;google search console request&quot; /&gt;&lt;/p&gt; &lt;p&gt;input the site URL which you want to crawl on the top of the page. when you see above screen, click &lt;code class=&quot;highlighter-rouge&quot;&gt;REQUEST INDEXING&lt;/code&gt; button to request crawling&lt;/p&gt; &lt;p&gt;completed to integrate Google Search Console. our site can be searched in Google.&lt;/p&gt; &lt;h2 id=&quot;google-adsense&quot;&gt;Google Adsense&lt;/h2&gt; &lt;p&gt;we thought we can not be rich by the blog but we need to practice to integrate Google Adsense and want to get money a little bit. so let’s integrate Google Adsense to jekyll blog.&lt;/p&gt; &lt;p&gt;click below link to go to the Google Adsense service site.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Google Adsense: &lt;a href=&quot;https://www.google.com/adsense/start/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/adsense/start/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;click &lt;code class=&quot;highlighter-rouge&quot;&gt;sign up&lt;/code&gt; for registering Google Adsense service.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/adsense/signup.png&quot; alt=&quot;google adsense signup&quot; /&gt;&lt;/p&gt; &lt;p&gt;after registering, we need to register payment informations. you should write person’s informations who get the money from Google Adsense service.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/adsense/payment.png&quot; alt=&quot;google adsense payment&quot; /&gt;&lt;/p&gt; &lt;p&gt;and we just wait for Google Adsense allow it. normally take one day, but we took 2~3 weeks. we think we registered it when the blog site release. so we didn’t have many contents(pages). that is reason not to allow it maybe.&lt;/p&gt; &lt;p&gt;so if you are in same situation, try to make contents(pages).&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/jekyll/google/adsense/get.png&quot; alt=&quot;google adsense get&quot; /&gt;&lt;/p&gt; &lt;p&gt;if many users see our blog or click the advertisement on the blog, Google Adsense gives us the money like above screen. we can withdraw that if that is more than a certain amount(¥8,000). when we withdraw that, we will write the blog about how to withdraw it.&lt;/p&gt; &lt;h2 id=&quot;reference&quot;&gt;reference&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Google Analytics: &lt;a href=&quot;https://analytics.google.com/analytics/web/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://analytics.google.com/analytics/web/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Google Search Console: &lt;a href=&quot;https://search.google.com/search-console/about&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://search.google.com/search-console/about&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Google Adsense: &lt;a href=&quot;https://www.google.com/adsense/start/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/adsense/start/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">outline if you want to gather the money or the insight from your blog, we think integrating google service to your blog is important. we introduce how to integrate google service to jekyll project.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/jekyll/google-service.jpg"/></entry></feed>