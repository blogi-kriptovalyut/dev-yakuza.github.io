<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dev-yakuza.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/" rel="alternate" type="text/html"/><updated>2019-03-03T16:02:35+09:00</updated><id>https://dev-yakuza.github.io/</id><title type="html">Dreams the art through programming</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ja"><title type="html">StatusBarコントロール</title><link href="https://dev-yakuza.github.io/react-native/react-native-status-bar/" rel="alternate" type="text/html" title="StatusBarコントロール"/><published>2019-03-01T00:00:00+09:00</published><updated>2019-03-03T15:54:39+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-status-bar-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-status-bar/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;最近アプリを開発する時、StatusBarをコントロールする時がありました。このブログでRN(React Native)のアプリでStatusBarをコントロールする方法をまとめます。&lt;/p&gt; &lt;h2 id=&quot;splashスクリーン&quot;&gt;Splashスクリーン&lt;/h2&gt; &lt;p&gt;私はRN(React Native)でSplashスクリーンを使うため&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を使ってます。&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;について詳しく内容は下記のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-splash-screen/&quot; target=&quot;_blank&quot;&gt;App Splashスクリーン&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;何にも設定しないと、Splashスクリーンが表示される時、StatusBarが表示します。下記のように設定するとSplashスクリーンでStatusBarを非表示することができます。&lt;/p&gt; &lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt; &lt;p&gt;SplashスクリーンでStatusBarを日表示するため、&lt;code class=&quot;highlighter-rouge&quot;&gt;info.plist&lt;/code&gt;を開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;plist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UIStatusBarHidden&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UIViewControllerBasedStatusBarAppearance&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;false/&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;アンドロイド&quot;&gt;アンドロイド&lt;/h3&gt; &lt;p&gt;アンドロイドでSplashスクリーンが表示される時、StatusBarを非表示するためは下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;MainActivity.java&lt;/code&gt;を修正します。&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ReactActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SplashScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;また、&lt;code class=&quot;highlighter-rouge&quot;&gt;res/values/styles.xml&lt;/code&gt;を下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;resources&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AppTheme&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;parent=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Theme.AppCompat.NoActionBar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android:windowExitAnimation&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@android:anim/fade_out&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android:windowFullscreen&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;windowActionBar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;windowNoTitle&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/resources&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;アンドロイドで透明statusbar&quot;&gt;アンドロイドで透明StatusBar&lt;/h3&gt; &lt;p&gt;アンドロイドでStatusBarを透明にするためには&lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt;レベルでソースコードを修正する必要があります。StatusBarを透明にしたいコンポーネント(Component)に下記のようにソースコードを修正します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StatusBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Story&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Fragment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StatusBar&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;barStyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dark-content&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'transparent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;translucent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/React.Fragment&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上のようにRN(React Native)のStatusBarを使って&lt;code class=&quot;highlighter-rouge&quot;&gt;backgroundColor={'transparent'}&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;translucent={true}&lt;/code&gt;を設定したら透明なStatusBarを使えることができます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;今までRN(React Native)を使って開発したアプリ内でStatusBarをコントロールする方法について説明します。上部で調べた内容以外にStatusBarをコントロールしたらこのブログに追加します。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 最近アプリを開発する時、StatusBarをコントロールする時がありました。このブログでRN(React Native)のアプリでStatusBarをコントロールする方法をまとめます。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-status-bar/background.jpg"/></entry><entry xml:lang="ja"><title type="html">iTunesファイルシェア機能</title><link href="https://dev-yakuza.github.io/react-native/react-native-itunes-share-file/" rel="alternate" type="text/html" title="iTunesファイルシェア機能"/><published>2019-02-28T00:00:00+09:00</published><updated>2019-03-03T13:49:16+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-ios-share-file-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-itunes-share-file/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)で作成したアプリへPCにあるファイルをiTunesを使って入れたい場合があります。例えば&lt;a href=&quot;https://itunes.apple.com/app/oplayer-video-player-classic-media-streaming/id344784375?mt=8&amp;amp;ign-mpt=uo%3D8&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;OPlayer&lt;/a&gt;や&lt;a href=&quot;https://itunes.apple.com/app/gom-player/id672542880?mt=8&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;GomPlayer&lt;/a&gt;みたいにビデオアプリはビデオファイルをiTunesを使ってアプリへ入れることができます。&lt;/p&gt; &lt;p&gt;このブログではこのようにPCにあるファイルをiTunesを使ってアプリへ入れる機能を説明します。&lt;/p&gt; &lt;h2 id=&quot;機能説明&quot;&gt;機能説明&lt;/h2&gt; &lt;p&gt;どのような機能か分からない方のため追加する機能についてもうちょっと説明します。使ってるiOSのデバイスをUSBを使ってPCと連結したらiTunesが実行されます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-itunes-share-file/connect-itunes.png&quot; alt=&quot;itunesとデバイス連結&quot; /&gt;&lt;/p&gt; &lt;p&gt;iOSデバイスとPCが上手く連結されたら、iTunes上に携帯形のアイコンが出ます。このアイコンを洗濯します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-itunes-share-file/iphone-info.png&quot; alt=&quot;itunesの携帯情報&quot; /&gt;&lt;/p&gt; &lt;p&gt;iOSデバイスの情報が見えたら、左メニューの&lt;code class=&quot;highlighter-rouge&quot;&gt;File Sharing&lt;/code&gt;を選択します。そしたらiTunesを使ってファイルを共有することができるアプリのリストが見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-itunes-share-file/upload-file.png&quot; alt=&quot;itunesファイルアップロード&quot; /&gt;&lt;/p&gt; &lt;p&gt;ここでは&lt;code class=&quot;highlighter-rouge&quot;&gt;OPlayer&lt;/code&gt;を選択して、PCにある&lt;code class=&quot;highlighter-rouge&quot;&gt;video.mp4&lt;/code&gt;ファイルをドラッグしてアップロードしました。&lt;/p&gt; &lt;p&gt;このブログではこのようにアプリ中で使うファイルをユーザがiTunesを使ってPCからアップロードできる機能を紹介します。&lt;/p&gt; &lt;h2 id=&quot;デバイス準備&quot;&gt;デバイス準備&lt;/h2&gt; &lt;p&gt;この機能をテストするためにはアプリをデバイスにインストールする必要があります。iOSデバイスにアプリをインストールする方法については下記のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-test-on-device/&quot; target=&quot;_blank&quot;&gt;iOSデバイステスト&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;infoplist修正&quot;&gt;info.plist修正&lt;/h2&gt; &lt;p&gt;この機能は特にソースコードを修正する必要がありません。&lt;code class=&quot;highlighter-rouge&quot;&gt;info.plist&lt;/code&gt;を修正することで簡単にiTunesファイルシェア機能を追加することができます。&lt;/p&gt; &lt;p&gt;RN(React Native)の&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project name]/info.plist&lt;/code&gt;を開いて下記の内容を追加します。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;plist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UIFileSharingEnabled&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ファイル活用&quot;&gt;ファイル活用&lt;/h2&gt; &lt;p&gt;上記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;info.plist&lt;/code&gt;を修正するだけで、iTunesを使ってファイルアップロードする機能を実装できます。また、&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;を活用したらiTunesを使ってアップロードしたファイルを活用することができます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-fs/&quot; target=&quot;_blank&quot;&gt;ファイルシステム使い方&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;iTunesを使ってアップロードしたフォルダは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-fs&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentDirecotryPath&lt;/code&gt;を使ってアクセスすることができます。&lt;/p&gt; &lt;h2 id=&quot;シミュレータ&quot;&gt;シミュレータ&lt;/h2&gt; &lt;p&gt;上で説明した内容はRN(React Native)をデバイスへインストールしてiTunesを使ってファイルをアップロードしなければならないです。そしたら、この機能を持ってるアプリはいつもデバイスでテストしなければならないみたいですが、実際はシミュレータでもテストが可能です。&lt;/p&gt; &lt;p&gt;一旦下記のコマンドで現在のプロジェクトを実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native run-ios &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;現在のプロジェクトがインストールされたシミュレータが実行されたら下記のコマンドを使ってシミュレータのidを取得します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun simctl list | egrep &lt;span class=&quot;s1&quot;&gt;'(Booted)'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-device-info&lt;/code&gt;ライブラリを使ってアプリの&lt;code class=&quot;highlighter-rouge&quot;&gt;unique id&lt;/code&gt;を取得します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-device-info/&quot; target=&quot;_blank&quot;&gt;react-native-device-info&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;このようにシミュレータのidアプリのunique idを取得したら、&lt;code class=&quot;highlighter-rouge&quot;&gt;/Users/[user name]/Library/Developer/CoreSimulator/Devices/[simulator id]/data/Container/Data/Application/[app id]/Documents/&lt;/code&gt;のフォルダへファイルをアップロードしたらデバイスにiTunesを使ってファイルアップロードした時と同じように動作します。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;音楽アプリや、動画アプリなど、ユーザが特定ファイルをアプリにiTunesを使って入れる場合、どう実装するかを説明しました。また、このようにアップロードしたファイルをアクセスする方法やシミュレータでテストする方法まで調べ見ました。皆さんも特定ファイルが必要ですが、サーバーがない場合、上の方法で解決してみたらどうでしょうか。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)で作成したアプリへPCにあるファイルをiTunesを使って入れたい場合があります。例えばOPlayerやGomPlayerみたいにビデオアプリはビデオファイルをiTunesを使ってアプリへ入れることができます。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-itunes-share-file/background.jpg"/></entry><entry xml:lang="ja"><title type="html">Kumonchoアプリ開発日誌(RN, React Native)</title><link href="https://dev-yakuza.github.io/kumoncho/development-journal/" rel="alternate" type="text/html" title="Kumonchoアプリ開発日誌(RN, React Native)"/><published>2019-02-11T00:00:00+09:00</published><updated>2019-02-16T21:06:43+09:00</updated><id>https://dev-yakuza.github.io/kumoncho/development-journal-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/kumoncho/development-journal/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;以前のプロジェクトでは一人でRN(React Native)を使ってアプリを最初から最後まで作ってみました。今回は別の人と協業してプロジェクトを進めてたいので、以前のプロジェクトで一番時間が掛かったデザインを担当してくれる友達と一緒にプロジェクトを進めてみました。以前のプロジェクトが気になる方は下記のリンクを押して以前のプロジェクトを開発した時のエピソードをみてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/blaboo/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBooアプリ開発日誌(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;くもんちょkumonchoとは&quot;&gt;くもんちょ(Kumoncho)とは?&lt;/h2&gt; &lt;p&gt;くもんちょ(Kumoncho)は雲の国のイカロス王子と彼の雲の友達、くもんちょの友情と容器に関する子供向け絵本アプリです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Kumoncho紹介ページ: &lt;a href=&quot;https://dev-yakuza.github.io/app/kumoncho/ko/&quot; target=&quot;_blank&quot;&gt;Kumoncho&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記はアプリのダウンロードリンクです。&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/kumoncho/id1450902241&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょiOSダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.kumoncho&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょアンドロイドダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;h2 id=&quot;なぜ作るようになったか&quot;&gt;なぜ作るようになったか？&lt;/h2&gt; &lt;p&gt;以前のプロジェクトは一人でRN(React Native)でアプリを最初から最後まで開発することを中心にしました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/blaboo/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBooアプリ開発日誌(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;それで今回のプロジェクトは他の人と協業することを焦点にしたかったです。また、以前のプロジェクトで一番時間が掛かったデザインの部分を協業で時間を短縮してもっと早くアプリを作成したかったです。&lt;/p&gt; &lt;p&gt;最後は、漫画家になりたかったけど、その夢を達成できなくってデザイナで仕事してる友達が一人いました。けれど、その才能がもったいないと思ってこのプロジェクトに誘いました。漫画家は数万ページ、数万ストーリーを作らなければならないですが、子供向け絵本は短いテーマで作れるので今の業務をしながら、趣味で作れるじゃない？と言えながら一緒に作ってみようと説得しました。&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/kumoncho/development-journal/profile_shu.png&quot; alt=&quot;子供向け絵本作者shuプロフィール&quot; /&gt; &lt;/div&gt; &lt;ul&gt; &lt;li&gt;Shu: &lt;a href=&quot;mailto:meiki.shuzou@gmail.com&quot;&gt;meiki.shuzou@gmail.com&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;幸いに一緒に作ることになって、この友達が絵とストーリーを、私がプロジェクトのディレクティングと開発を担当して進めることになりました。&lt;/p&gt; &lt;p&gt;このプロジェクトをはじめ、この友達とは続けて子供向けの絵本アプリを作成する予定であり、絵本を出版することを最終目標として設定しました。くもんちょをリリースしながら、既に2番目の子供向け絵本アプリを準備しています。&lt;/p&gt; &lt;p&gt;お互いに仕事してる会社が違うので、フィードバックは主にラインのメッセージでやりとりで、必要な時ランチでテレビ会議をしました。担当してるパートが重ならなくはっきり分かれてるので、協業には大きな問題なく進めることができました。&lt;/p&gt; &lt;h2 id=&quot;アプリの企画&quot;&gt;アプリの企画&lt;/h2&gt; &lt;p&gt;今回のプロジェクトは子供向け絵本アプリですが、作者の友達は絵本のストーリーや絵を書いたことがないし、私も絵本アプリを作ったことなかったです。それで一旦資料調査をはじめました。&lt;/p&gt; &lt;p&gt;最終目標は絵本の出版なので現在の子供向け絵本の基準を調査しました。&lt;/p&gt; &lt;p&gt;子供向け絵本は16、24、48ページの本がありますが、32ページが業界標準です。(もし間違ったらコメントください。)&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/kumoncho/development-journal/picture_book.jpg&quot; alt=&quot;子供向け絵本32ページ&quot; /&gt; (写真の出所: &lt;a href=&quot;https://taralazar.com/2009/02/22/picture-book-construction-know-your-layout/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://taralazar.com&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;また、私たちは出版する本(本当に出版できるか分からないけど)とアプリの違いを作って、アプリを既に見た方も本を購買出来るように企画しました。それで結論出したページが9ページ。あまり長くも短くもないページを設定しました。(絵本の出版は32ページを想定しています。)&lt;/p&gt; &lt;p&gt;これでページを決定したら作者の友達は簡単にストーリーとイラストのレイアウトを構成することができました。&lt;/p&gt; &lt;h2 id=&quot;ストーリーとイラスト&quot;&gt;ストーリーとイラスト&lt;/h2&gt; &lt;p&gt;作者の友達と私は子供向け絵本アプリは初めて作るので、最初のストーリーは無難なストーリーで決定しました。アプリをダウンロードして内容を見たら分かると思いますが、どこかで見た気がする、どこかにある気がする内容を初ストーリーで決定しました。&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/kumoncho/id1450902241&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょiOSダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.kumoncho&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょアンドロイドダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;p&gt;ストーリーが決まると、作者の友達はスケッチで人物と背景を躯体化しました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/kumoncho/development-journal/sketch.png&quot; alt=&quot;くもんちょスケッチ&quot; /&gt;&lt;/p&gt; &lt;p&gt;そしてストーリーを磨き、そのストーリーと合わせてイラストを描き出しました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/kumoncho/development-journal/illustration.png&quot; alt=&quot;くもんちょイラスト&quot; /&gt;&lt;/p&gt; &lt;p&gt;私の友達だからではなく、本当に絵とストーリーには才能があるのではないかなと思います。&lt;/p&gt; &lt;h2 id=&quot;アプリ開発&quot;&gt;アプリ開発&lt;/h2&gt; &lt;p&gt;アプリ開発はもちろんRN(React Native)を使いました。くもんちょは基本的RN(&lt;code class=&quot;highlighter-rouge&quot;&gt;React Native&lt;/code&gt;)とタイプスクリプト(&lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;)を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)インストール方法: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/installation/&quot; target=&quot;_blank&quot;&gt;RNインストール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)にtypescriptタイプスクリプト適用: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;また、RN(React Native)の基本スタイルは&lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;を使いました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Navtive)でstyled-components使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;ページの背景には&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;を使ってグラデーションの効果を入れました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Navtive)でグラデーション(Gradient)を使う方法: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-linear-gradient/&quot; target=&quot;_blank&quot;&gt;react-native-linear-gradient&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;初めて開発した時は、ページ転換を下記のようにスクロールを使いました。&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/kumoncho/development-journal/kumoncho_scroll.gif&quot; alt=&quot;子供向け絵本くもんちょスクロール&quot; /&gt; &lt;/div&gt; &lt;p&gt;しかし、自然なページ転換を演出したくて&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-linear-gradient/&quot; target=&quot;_blank&quot;&gt;react-native-linear-gradient&lt;/a&gt;で紹介したグラデーションのアニメーションを適用して背景を変更しました。それと&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-animatable/&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt;のfadein/fadeoutでイメージの登場効果を入れました。&lt;/p&gt; &lt;div class=&quot;half_image_container&quot;&gt; &lt;img class=&quot;half_image&quot; src=&quot;/assets/images/category/kumoncho/development-journal/kumoncho_swipe.gif&quot; alt=&quot;子供向け絵本くもんちょスワイプ&quot; /&gt; &lt;/div&gt; &lt;p&gt;ページの転換にはユーザのスワイプのイベントを検知するようにしました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)でスワイプ検知: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-swipe-gestures/&quot; target=&quot;_blank&quot;&gt;react-native-swipe-gestures&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;最後にはアプリの広告と分析のためグーグルのファイアベース(Google Firevase)とグーグルアドモブ(Google Admob)を使ってます。これを実装するため&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-firebase admobの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-admob&lt;/a&gt;&lt;/li&gt; &lt;li&gt;react-native-firebase analyticsの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-analytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-analytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;react-native-firebase Crashlyticsの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/firebase-crashlytics/&quot; target=&quot;_blank&quot;&gt;firebase-crashlytics&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記のリストは付加的な機能を実装するため使ったライブラリです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)でメール発信: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-mail/&quot; target=&quot;_blank&quot;&gt;react-native-mail&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)でレビュー案内: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-rate/&quot; target=&quot;_blank&quot;&gt;react-native-rate&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)でsplashイメージコントロール: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-splash-screen/&quot; target=&quot;_blank&quot;&gt;react-native-splash-screen&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)でTTS(Text To Speech)を使う方法: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-tts/&quot; target=&quot;_blank&quot;&gt;react-native-tts&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;アプリ登録&quot;&gt;アプリ登録&lt;/h2&gt; &lt;p&gt;以前のプロジェクトではアプリ登録する時結構大変でした。(&lt;a href=&quot;https://dev-yakuza.github.io/blaboo/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBooアプリ開発日誌(RN, React Native)&lt;/a&gt;) その時の経験のお陰で、今回のプロジェクトのアプリ登録は問題なく進めることができました。&lt;/p&gt; &lt;p&gt;iOSは子供のカテゴリーを選べて登録を試しましたが、アプリ中に外部リンクがあって審査はリジェクト(Reject)されました。子供のカテゴリーの場合、Parental Gateの機能で外部リンクを保護する義務がありますが、私のアプリはこれを無視して問題になりました。Parental Gateに関していいライブラリを見つけれなかったので、子供のカテゴリーを放棄して登録申請をして登録しました。&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/kumoncho/id1450902241&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょiOSダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.kumoncho&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょアンドロイドダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;h2 id=&quot;最後に&quot;&gt;最後に&lt;/h2&gt; &lt;p&gt;今回の子供向け絵本アプリプロジェクトは企画段階でもっとベンチマーキングと競争社(絵本)を分析するべきでした。私たちはページ数が決定された瞬間ストーリーとイラストに集中したので1ページへ入る内容、つまり文字数を決定しなかったミスをしました。&lt;code class=&quot;highlighter-rouge&quot;&gt;ストーリーとイラスト&lt;/code&gt;セクションでイラストを見たと思いますが、最初のイラストには絵しかありませんでした。アプリを開発する段階でイラストに関する内容を伝えるため、あとで内容を入れました。そのせいで、イラストの求道とストーリーの伝達力が落ちる問題が発生しました。&lt;/p&gt; &lt;p&gt;また、絵本を基準にして作業したので、アプリで絵本を読む部分、つまりUXを深く考えなかったです。今も途中でアプリを終了してアプリを再起動した場合、いつも最初から全て見ないとダメです。中間ページに飛べる機能もないです。UXに関しては完全に失敗したプロジェクトと思います。&lt;/p&gt; &lt;p&gt;開発にも問題はありました。アプリをリリースした後、作者の友達からタブレットも対応して欲しい話がありました。RN(React Native)はそもそもクロスプラットフォームなので簡単に転換できると思いました。実際以前のプロジェクト(&lt;a href=&quot;https://dev-yakuza.github.io/blaboo/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBooアプリ開発日誌(RN, React Native)&lt;/a&gt;)は簡単なアプリなので簡単に転換できました。しかし、今回のプロジェクトはイメージが多いし、そのイメージを設定する部分でタブレットを考慮しなくて設計したのでタブレットの転換に失敗しました。時間があったら設計を直してタブレットも対応する予定ですが最初からうまく作るべきでした。&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/kumoncho/id1450902241&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょiOSダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.kumoncho&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;子供向け絵本アプリくもんちょアンドロイドダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;p&gt;最後の最後ですが、出版業界いらっしゃる方中で私たちのアプリを絵本に出版したい方がいたら連絡してください！！&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;mailto:dev.yakuza@gmail.com&quot;&gt;dev.yakuza@gmail.com&lt;/a&gt;&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 以前のプロジェクトでは一人でRN(React Native)を使ってアプリを最初から最後まで作ってみました。今回は別の人と協業してプロジェクトを進めてたいので、以前のプロジェクトで一番時間が掛かったデザインを担当してくれる友達と一緒にプロジェクトを進めてみました。以前のプロジェクトが気になる方は下記のリンクを押して以前のプロジェクトを開発した時のエピソードをみてください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/kumoncho/background.png"/></entry><entry xml:lang="ja"><title type="html">アプリストアレビュー</title><link href="https://dev-yakuza.github.io/react-native/react-native-rate/" rel="alternate" type="text/html" title="アプリストアレビュー"/><published>2019-02-09T00:00:00+09:00</published><updated>2019-02-09T23:00:20+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-rate-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-rate/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)でアプリを開発してリリースしたらアプリストアでレビューを作成してくれた方々が出ました。そのレビューをみたら開発したやりがいも感じるし、ユーザが必要な機能についても理解することができました。しかし、今までは特にアプリ中でアプリレビューを作成するように誘導してないのでアプリレビュー作成を誘導したらもっとたくさんのユーザのご意見を貰うことが出来ると思いました。&lt;/p&gt; &lt;p&gt;このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;ライブラリを使ってRN(React Native)で開発したアプリからアプリストアレビュー作成を誘導する方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-rate公式サイト: &lt;a href=&quot;https://github.com/KjellConnelly/react-native-rate&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/KjellConnelly/react-native-rate&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;ライブラリを使うため、下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install react-native-rate &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ライブラリ連結&quot;&gt;ライブラリ連結&lt;/h2&gt; &lt;p&gt;ライブラリインストールが終わったら、下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;ライブラリをRN(React Native)プロジェクトと連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-rate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;下記のソースコードは&lt;a href=&quot;https://github.com/KjellConnelly/react-native-rate&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-rate公式サイト&lt;/a&gt;の一部をコピーした内容です。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AndroidMarket&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-rate'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Rate App&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;AppleAppID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2193813192&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GooglePackageName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;com.mywebsite.myapp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;AmazonPackageName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;com.mywebsite.myapp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;OtherAndroidURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.randomappstore.com/app/47172391&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preferredAndroidMarket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AndroidMarket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preferInApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;openAppStoreIfInAppFails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fallbackPlatformURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.mywebsite.com/myapp.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this technically only tells us if the user successfully went to the Review Page. Whether they actually did anything, we do not know.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このソースを見たらわかると思いますが、アプリレビュー作成を誘導したい時色んなオプションと一緒に&lt;code class=&quot;highlighter-rouge&quot;&gt;Rate.rate()&lt;/code&gt;を実行すればいいです。下のソースコードは実際私たちが使ってるソースコードの一部です。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncStorage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AndroidMarket&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-rate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isAlreadyRate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'isAlreadyRate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countStartApp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'countStartApp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countStartApp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;countStartApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isAlreadyRate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'App Rating'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Please give us your opinion!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Later'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Cancel Pressed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cancel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'OK'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;AppleAppID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'***************'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GooglePackageName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'******************'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preferredAndroidMarket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AndroidMarket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preferInApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;openAppStoreIfInAppFails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'isAlreadyRate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'true'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'countStartApp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;私たちは&lt;code class=&quot;highlighter-rouge&quot;&gt;AsyncStorage&lt;/code&gt;にアプリレビューをしたかどうかを保存してアプリレビューをしたユーザはアプリレビューの誘導をしないように処理しています。また、アプリの実行回数が3の倍数の場合アプリレビューの誘導ダイアログを表示して既存のUXを邪魔しないようにしています。&lt;/p&gt; &lt;p&gt;上記で見た&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;公式サイトソースには色んな設定がありますが、私たちはiOSのアプリストアとアンドロイドのGoogle Playストアだけ使ってるので、&lt;code class=&quot;highlighter-rouge&quot;&gt;AppleAppID&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;GooglePackageName&lt;/code&gt;オプションだけ使います。AppleAppIDはアプリストアダウンロードリンクのURL後ろの部分を見るか、Appstore Connectにある&lt;code class=&quot;highlighter-rouge&quot;&gt;アプリ情報&lt;/code&gt;から確認することができます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;アプリのロードマップも重要ですが、やはり一番重要なことはユーザのご意見じゃないかなと思います。ユーザがもっと簡単にご意見を伝えることが出来るように案内することもアプリ開発中で重要に考慮する項目じゃないかなと思います。&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-rate&lt;/code&gt;を使って皆さんもユーザがもっと簡単に意見を出せるように誘導してみてください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-rate公式サイト: &lt;a href=&quot;https://github.com/KjellConnelly/react-native-rate&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/KjellConnelly/react-native-rate&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)でアプリを開発してリリースしたらアプリストアでレビューを作成してくれた方々が出ました。そのレビューをみたら開発したやりがいも感じるし、ユーザが必要な機能についても理解することができました。しかし、今までは特にアプリ中でアプリレビューを作成するように誘導してないのでアプリレビュー作成を誘導したらもっとたくさんのユーザのご意見を貰うことが出来ると思いました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-rate.jpg"/></entry><entry xml:lang="ja"><title type="html">BlaBooアップデート後期</title><link href="https://dev-yakuza.github.io/blaboo/update-review/" rel="alternate" type="text/html" title="BlaBooアップデート後期"/><published>2019-02-08T00:00:00+09:00</published><updated>2019-02-28T16:38:37+09:00</updated><id>https://dev-yakuza.github.io/blaboo/update-review-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/blaboo/update-review/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)を使ってBlaBooと言うアプリを作成してリリースしました。このブログではアプリをリリースした後BlaBooをどんな感じで管理やアップデートしてるかについて話してみようかともいます。BlaBooをもう一度紹介して本格的な話をしてみます。&lt;/p&gt; &lt;h2 id=&quot;blabooとは&quot;&gt;BlaBooとは?&lt;/h2&gt; &lt;p&gt;BlaBoo(ブラブー)は英語の&lt;code class=&quot;highlighter-rouge&quot;&gt;blah blah(ブラブラ)&lt;/code&gt;の単語と赤ちゃんが良く出す&lt;code class=&quot;highlighter-rouge&quot;&gt;boo(ブー)&lt;/code&gt;の単語を合わせた意味で、赤ちゃん/子供向けの単語アプリです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;BlaBoo紹介ページ: &lt;a href=&quot;https://dev-yakuza.github.io/app/blaboo/&quot; target=&quot;_blank&quot;&gt;BlaBoo&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記はBlaBooアプリのダウンロードリンクです。&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/blaboo/id1441741187&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;子供向け単語勉強アプリblaboo iOSダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;子供向け単語勉強アプリblabooアンドロイドダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;p&gt;赤ちゃん/子供がイラストを見てそのイラストをタッチしたら音声でその単語を読んでくれるとてもシンプルなアプリです。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/app_concept.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリ開発について詳しく内容は以前のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBooアプリ開発日誌(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;アプリ管理&quot;&gt;アプリ管理&lt;/h2&gt; &lt;p&gt;最初にBlaBooアプリを企画する時はアプリが本当に簡単なので管理しなくてもいいと思いました。一回作ってリリースしたら、必要な方々がダウンロードしたり、消したりすると思って開発しました。&lt;/p&gt; &lt;p&gt;しかし、アプリをリリースして人たちがダウンロードすることを見たら最初の考えとは違ってしきりに手が行くようになりました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/update-review/blaboo_analytics.png&quot; alt=&quot;子供向け単語勉強アプリBlaBoo開発日誌&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;アップデート&quot;&gt;アップデート&lt;/h2&gt; &lt;p&gt;BlaBooは最初は英語、日本語、韓国語だけ対応してリリースしましたが。一旦自分の目で確認できる言語だけ対象にしたのでコアー機能である単語の音声発音の機能には特に問題ないと思いました。&lt;/p&gt; &lt;p&gt;しかしアプリをリリースした後初ダウンロードは中国から発生して、急いでグーグル翻訳機を使って中国語に翻訳して初アップデートをしました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/app/blaboo/zh/&quot; target=&quot;_blank&quot;&gt;中国語広報サイト&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/update-review/blaboo_zh.png&quot; alt=&quot;BlaBooアップデート戦略 - 中国語&quot; /&gt;&lt;/p&gt; &lt;p&gt;グーグル翻訳なので単語を正しく翻訳したかサイトを正しく翻訳したか分からないです。幸いタイワンの友達がいてアプリを少しテストして貰いましたけど、単語は大体合ってるの話があってちょっと安心しましが、その友達も全ての単語を見たわけではないのでまだ心配は残ってます。&lt;/p&gt; &lt;p&gt;それでも少し間違った単語があっても自国語を対応してることがもっと魅力的であるじゃないかなと思ってそれからダウンロードした国家を確認してダウンロードが発生した国家の言語でアプリとサイトを翻訳してアップデートを進めました。&lt;/p&gt; &lt;p&gt;このようにアップデートを進めましたが、ベトナム語を追加する時問題が発生しました。グーグル翻訳機を使って単語を翻訳した後テストをする時ベトナム語を正しく発音しない問題が発生しました。問題の原因を把握した結果、使っているライブラリがベトナム語を対応してないことでした。&lt;/p&gt; &lt;p&gt;BlaBooはTTS(Text To Speech)機能で下記のライブラリを使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-tts紹介: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-tts/&quot; target=&quot;_blank&quot;&gt;react-native-tts&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;このライブラリは対応してる言語ー国家が決めております。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ar-SA&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Maged-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Maged&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cs-CZ&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Zuzana-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Zuzana&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;da-DK&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Sara-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Sara&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;de-DE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Anna-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Anna&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;el-GR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Melina-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Melina&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;en-AU&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Karen-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Karen&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;en-GB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Daniel-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Daniel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;en-IE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Moira-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Moira&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Samantha-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Samantha&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;en-ZA&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Tessa-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Tessa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;es-ES&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Monica-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Monica&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;es-MX&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Paulina-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Paulina&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;fi-FI&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Satu-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Satu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;fr-CA&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Amelie-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Amelie&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;fr-FR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Thomas-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Thomas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;he-IL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Carmit-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Carmit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hi-IN&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Lekha-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Lekha&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hu-HU&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Mariska-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Mariska&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;id-ID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Damayanti-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Damayanti&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;it-IT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Alice-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Alice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ja-JP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Kyoko-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Kyoko&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ko-KR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Yuna-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Yuna&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;nl-BE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Ellen-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Ellen&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;nl-NL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Xander-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Xander&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;no-NO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Nora-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Nora&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pl-PL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Zosia-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Zosia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pt-BR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Luciana-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Luciana&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pt-PT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Joana-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Joana&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ro-RO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Ioana-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Ioana&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ru-RU&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Milena-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Milena&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sk-SK&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Laura-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Laura&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sv-SE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Alva-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Alva&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;th-TH&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Kanya-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Kanya&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tr-TR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Yelda-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Yelda&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;zh-CN&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Ting-Ting-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Ting-Ting&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;zh-HK&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Sin-Ji-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Sin-Ji&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;zh-TW&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.ttsbundle.Mei-Jia-compact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Mei-Jia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;私は言語ー国家コードを下記のサイトで確認してます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;このサイトでベトナム語ーベトナムを探したら&lt;code class=&quot;highlighter-rouge&quot;&gt;vi-VN&lt;/code&gt;であることを確認できますし、この言語ー国家コードが上のリストにはないことが分かります。&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout .&lt;/code&gt;で1時間くらいの作業内容を戻した涙が出る経験をしました。&lt;/p&gt; &lt;p&gt;この後、ダウンロードした国家を確認してダウンロードした国家が今まで追加したことない国家かどうか確認して言語ー国家コードを確認して&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt;が対応してる言語か確認することになりました。&lt;/p&gt; &lt;h2 id=&quot;アンドロイドバグ&quot;&gt;アンドロイドバグ&lt;/h2&gt; &lt;p&gt;アプリをリリースした後、特に問題ありませんでした。私はアイホンユーザなのでアンドロイドについてあまり気にしませんでした。ところで、友達がアンドロイドでボタンが押せない問題があるとフィードバックをくれました。多分この友達がこのバグを見つけてくれなかったら永遠にクズなアプリでアンドロイドマーケットに残ってあったと思います。&lt;/p&gt; &lt;p&gt;BlaBooではイラストが登場する時、バウンスイン(bounceIn)アニメーションを &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;と言うライブラリを使って実装してます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-animatable使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-animatable/&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;BlaBooアプリで一つのビューでイメージリストを&lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;を使って表示してます。ページが変わったらこのイメージリストを更新して新イメージを表示しています。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;things&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IThing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lineIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lineData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IThing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bounceIn&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useNativeDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Thing&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_calculateWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;thingHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;marginRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;marginRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;marginColumn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;marginColumn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;locale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;locale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;locale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Animatable.View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ところで、アンドロイドでこのイメージを更新したら、以前の&lt;code class=&quot;highlighter-rouge&quot;&gt;Animatable.View&lt;/code&gt;がビューに残って、新イメージの上に表示していました。&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;はアニメーションのパフォーマンス(Performance)のためNative Driverを使えるように&lt;code class=&quot;highlighter-rouge&quot;&gt;useNativeDriver&lt;/code&gt;オプションを提供しています。上のソースを見たら分かりますが、もちろん、私もパフォーマンスのためこのオプションを使いました。&lt;/p&gt; &lt;p&gt;正確な原因は分かりませんが、このオプションを消したら正確に動作しました。しかし、正確な原因を知らない状態で、すでにリリースした状態でビッグイシューでしたので、&lt;code class=&quot;highlighter-rouge&quot;&gt;Animatable.View&lt;/code&gt;を削除してアップデートしました。登場アニメーションがなくなってちょっと残念でしたが、明確な原因を知らないでこの機能を使うことはリスクが高いので完全に削除することにしました。もし同じ問題を経験して原因を把握している方がいたら共有してくれたら嬉しいですね。&lt;/p&gt; &lt;h2 id=&quot;アップデート後期&quot;&gt;アップデート後期&lt;/h2&gt; &lt;p&gt;今のアップデートは下記のように単純なプロセスで進めています。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;ダウンロードが発生した国家を確認&lt;/li&gt; &lt;li&gt;すでに翻訳してある国家のか確認&lt;/li&gt; &lt;li&gt;翻訳してない国家の場合言語ー国家コードを確認&lt;/li&gt; &lt;li&gt;言語ー国家コードがライブラリ(&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt;)から対応してるかどうか確認&lt;/li&gt; &lt;li&gt;ライブラリ(&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt;)が言語ー国家コードを対応してる場合、アプリ、ウェブ、アプリストアーを翻訳&lt;/li&gt; &lt;li&gt;テスト&lt;/li&gt; &lt;li&gt;iOS、アンドロイドリリース&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;簡単に見えるかもしれないですが、色々失敗して作ったプロセスです。皆さんもし&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt;ライブラリを使って多言語を対応するアプリを企画・開発する予定であったらライブラリが対応してる言語を確認することをお勧めします。&lt;/p&gt; &lt;p&gt;今まで初リリース後、アップデートした内容は下記のようです。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Splashスクリーンを強制的に1秒間維持して後アプリを起動(使ったライブラリ: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-splash-screen/&quot; target=&quot;_blank&quot;&gt;react-native-splash-screen&lt;/a&gt;)&lt;/li&gt; &lt;li&gt;アプリのレビューに数字をもっと追加して欲しいのリクエストがあって数字のコンテンツをもっと追加&lt;/li&gt; &lt;li&gt;アプリの最初の画面で何を押せばいいか分からないテスターがいて、&lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt;ボタンにアニメーションを追加して動作を誘導&lt;/li&gt; &lt;li&gt;中国語、イタリア語、ヒンディー語、オランダ語、タイワン語、ドイツ語を追加&lt;/li&gt; &lt;li&gt;アプリのレビューを作成するように誘導(使ったライブラリ: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-rate/&quot; target=&quot;_blank&quot;&gt;react-native-rate&lt;/a&gt;)&lt;/li&gt; &lt;li&gt;タブレット対応&lt;/li&gt; &lt;li&gt;バグ修正&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;アプリダウンロードリンク&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://itunes.apple.com/app/blaboo/id1441741187&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;子供向け単語勉強アプリblaboo iOSダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;子供向け単語勉強アプリblabooアンドロイドダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt; &lt;p&gt;本当はこのブログを書いた一番大きな理由は皆さんの力を借りたいのであります。上でも話しましたが、英語、日本語、韓国語以外はグーグル翻訳を使って翻訳をしました。ウェブやアプリストアーの内容は少し違っても特に問題ないと思いますが、BlaBooアプリは子供や外国語を勉強したい人たちをターゲットにしてるのでアプリ中の単語は間違ったら不味いじゃないかなと思います。しかし、私が全世界の言語を知るわけないし、お金がいっぱいあるわけないので全ての言語を正しく翻訳する状況ではないのでこのように記事を書いています。&lt;/p&gt; &lt;p&gt;もし外国語が得意な方々がいらっしゃったら下記のリポジトリ(Repository)を見て修正してくれたらいいかなと思って、このようにお願いをしてます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;github: &lt;a href=&quot;https://github.com/dev-yakuza/blaboo-translate&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/blaboo-translate&lt;/a&gt;)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;皆さんの助けが一人の開発者に大きな希望であり、たくさんのユーザが正しい単語を勉強できるようにしてくれると思います。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)を使ってBlaBooと言うアプリを作成してリリースしました。このブログではアプリをリリースした後BlaBooをどんな感じで管理やアップデートしてるかについて話してみようかともいます。BlaBooをもう一度紹介して本格的な話をしてみます。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/blaboo/update-review/app_concept.png"/></entry><entry xml:lang="ja"><title type="html">プレビュー</title><link href="https://dev-yakuza.github.io/jekyll/preview-speed-up/" rel="alternate" type="text/html" title="プレビュー"/><published>2019-02-07T00:00:00+09:00</published><updated>2019-02-07T14:11:05+09:00</updated><id>https://dev-yakuza.github.io/jekyll/preview-speed-up-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/jekyll/preview-speed-up/">&lt;h2 id=&quot;問題点&quot;&gt;問題点&lt;/h2&gt; &lt;p&gt;今ジキル(jekyll)で管理してるブログが作成した記事が多くなって、ローカルで作成した記事を確認する時、時間が結構掛かります。私は下のジキル(jekyll)コマンドで記事を公開する前ローカルで作成した記事を確認しています。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;しかし、記事の量が多いし、使ってるプラグインが多いので記事を確認するため&lt;code class=&quot;highlighter-rouge&quot;&gt;209.498985 seconds&lt;/code&gt;を待たなければならない問題が発生しました。配布するためこのぐらい時間が掛かることはいいですが、新記事を確認するたびにこのぐらい時間が掛かることはちょっと勿体無いなと思いました。&lt;/p&gt; &lt;h2 id=&quot;解決策&quot;&gt;解決策&lt;/h2&gt; &lt;p&gt;たくさんの解決策があるみたいですが私は下記のジキル(jekyll)設定でビルド速度をあげました。&lt;/p&gt; &lt;p&gt;まず、 &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;をコピーして&lt;code class=&quot;highlighter-rouge&quot;&gt;_config-dev.yml&lt;/code&gt;を作りました。。そして、下のコードを追加しました。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 多言語を使ってるので3を設定。普通は１で設定&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;limit_posts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして、作成した記事を確認するため下のジキル(jekyll)コマンドを使ってます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt; _cong-dev.yml &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このコードは一つのブログ記事のみビルドするようにします。私はこのジキル(jekyll)設定を使って&lt;code class=&quot;highlighter-rouge&quot;&gt;74.639 seconds&lt;/code&gt;だけ待ってば記事を確認することが出来るようになりました。また、ジキル(jekyll)プラグイン中で時間が結構掛かる&lt;code class=&quot;highlighter-rouge&quot;&gt;minify&lt;/code&gt;プラグインを使えないように下記のように設定しました。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;jekyll-minifier&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;remove_spaces_inside_tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;remove_multi_spaces&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;remove_comments&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;compress_css&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;compress_javascript&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;compress_json&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;こんな設定をしたらビルド時間が&lt;code class=&quot;highlighter-rouge&quot;&gt;50.668 seconds&lt;/code&gt;、20秒くらい早くなりました。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;上記で説明した方法で200秒から50秒にビルド時間が1/4に減少しました。しかし、まだ50秒くらいかかりますね。これはジキル(jekyll)の大問題点と思います。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">問題点 今ジキル(jekyll)で管理してるブログが作成した記事が多くなって、ローカルで作成した記事を確認する時、時間が結構掛かります。私は下のジキル(jekyll)コマンドで記事を公開する前ローカルで作成した記事を確認しています。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/jekyll/preview-speed-up.jpg"/></entry><entry xml:lang="ja"><title type="html">App Splash スクリーン</title><link href="https://dev-yakuza.github.io/react-native/react-native-splash-screen/" rel="alternate" type="text/html" title="App Splash スクリーン"/><published>2019-02-06T00:00:00+09:00</published><updated>2019-02-07T10:36:45+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-splash-screen-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-splash-screen/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)は基本的にSplashスクリーンを提供しています。以前のブログでも紹介しましたが、&lt;code class=&quot;highlighter-rouge&quot;&gt;generator-rn-toolbox&lt;/code&gt;ツールを使ったら簡単に色んなサイズのSplashイメージを作れます。下のリンクは&lt;code class=&quot;highlighter-rouge&quot;&gt;generator-rn-toolbox&lt;/code&gt;ツールを使ってSplashイメージを作る方法に関するブログです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/splash-image/&quot; target=&quot;_blank&quot;&gt;Splashイメージ&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;しかし、実際アプリを起動したらSplashスクリーンが早く終了されます。普通のアプリではSplashスクリーンを表示して裏で必要な情報をapiで取ってきてSplashスクリーンを終了してその情報を表示する自然なUXを提供するが、RN(React Native)が基本的に提供してるSplashスクリーンでそうゆう感じのUXを提供することは難しです。&lt;/p&gt; &lt;p&gt;このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;ライブラリを使ってSplashスクリーンを終了する時点をコントロールして自然なUXを提供するように作ってみます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-splash-screen公式サイト: &lt;a href=&quot;https://github.com/crazycodeboy/react-native-splash-screen&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/crazycodeboy/react-native-splash-screen&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)でSplashスクリンーんを好きな時終了させるため&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;ライブラリを下記のコマンドでインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-splash-screen &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ライブラリ連結&quot;&gt;ライブラリ連結&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を使うため下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;ライブラリとRN(React Native)プロジェクトを連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-splash-screen &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ライブラリ連結失敗&quot;&gt;ライブラリ連結失敗&lt;/h3&gt; &lt;p&gt;下記のような場合RN(React Native)に&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を連結する時連結がうまくいかなくって失敗する場合があります。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;アンドロイドプロジェクトのパッケージ(Package)名を変更した場合。&lt;/li&gt; &lt;li&gt;iOSで&lt;code class=&quot;highlighter-rouge&quot;&gt;Pod&lt;/code&gt;を使ってる場合。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;私は両方使ってるので連結する時結構大変でした。上のような場合、連結が失敗する方は下記の方法を使ってみてください。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;アンドロイドプロジェクトのパッケージ(Package)名を変更した場合。 アンドロイドパッケージ(Package)名に合わせてフォルダーの構造を変更します。例えば、パッケージ名が&lt;code class=&quot;highlighter-rouge&quot;&gt;io.github.dev.yakuza.blaboo&lt;/code&gt;の場合、&lt;code class=&quot;highlighter-rouge&quot;&gt;com/blaboo&lt;/code&gt;であるフォルダーの構造を&lt;code class=&quot;highlighter-rouge&quot;&gt;io/github/dev/yakuza/blaboo&lt;/code&gt;で変更します。&lt;/li&gt; &lt;li&gt;iOSで&lt;code class=&quot;highlighter-rouge&quot;&gt;Pod&lt;/code&gt;を使う場合。 私はほとんどのプロジェクトギット(git)で管理したます。下記の方法は(git)を使った場合です。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;下のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;Pod&lt;/code&gt;を削除します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# cd ios&lt;/span&gt; pod deintegrate rm Podfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;ライブラリをインストールしてRN(React Native)プロジェクトへ連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# React Native root directory&lt;/span&gt; npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-splash-screen react-native link react-native-splash-screen &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;その後、下記のコマンドでギット(git)を使って削除した&lt;code class=&quot;highlighter-rouge&quot;&gt;Pod&lt;/code&gt;を戻して再インストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# cd ios&lt;/span&gt; git checkout &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; Podfile pod install &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を使うためには大きくネイティブ(Native)部分とJS部分へソースを追加する必要があります。ネイティブ(Native)部分はアンドロイド、iOSでSplashスクリーンを実行するためで、JS部分はネイティブ(Native)で実行したSplashスクリーンを終了するためです。&lt;/p&gt; &lt;h3 id=&quot;アンドロイド&quot;&gt;アンドロイド&lt;/h3&gt; &lt;p&gt;アンドロイドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を使うため&lt;code class=&quot;highlighter-rouge&quot;&gt;MainActivity.java&lt;/code&gt;ファイルを開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// here&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.facebook.react.ReactActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.devio.rn.splashscreen.SplashScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// here&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ReactActivity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SplashScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;また、アンドロイドで使うSplashスクリーンを生成する必要があります。&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/main/res/layout/launch_screen.xml&lt;/code&gt;ファイルを生成して下記のソースコードを追加します。&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vertical&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:background=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/launch_screen&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上部で紹介した&lt;code class=&quot;highlighter-rouge&quot;&gt;generator-rn-toolbox&lt;/code&gt;(&lt;a href=&quot;https://dev-yakuza.github.io/react-native/splash-image/&quot; target=&quot;_blank&quot;&gt;Splashイメージ&lt;/a&gt;)を使っでSplashイメージを生成した場合は&lt;code class=&quot;highlighter-rouge&quot;&gt;drawable-*&lt;/code&gt;フォルダーに&lt;code class=&quot;highlighter-rouge&quot;&gt;launch_screen.png&lt;/code&gt;ファイルが生成されます。&lt;/p&gt; &lt;p&gt;したがって上のソースコードをコピペして使っても構いませんが、Splashイメージファイル名が違う場合&lt;code class=&quot;highlighter-rouge&quot;&gt;android:background=&quot;@drawable/launch_screen&quot;&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;launch_screen&lt;/code&gt;部分を生成したイメージファイル名で変更して使ってください。&lt;/p&gt; &lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt; &lt;p&gt;iOSで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を使えため&lt;code class=&quot;highlighter-rouge&quot;&gt;AppDelegate.m&lt;/code&gt;ファイルを開いて下記のように修正してください。&lt;/p&gt; &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;#import &quot;RNSplashScreen.h&quot; // here&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AppDelegate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UIApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;NSDictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;launchOptions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;RNSplashScreen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// here&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;js&quot;&gt;JS&lt;/h3&gt; &lt;p&gt;上で設定したSplashスクリーンを終了させるため下記のようにソースを追加します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SplashScreen&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-splash-screen'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WelcomePage&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SplashScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上のソースを見たら分かりますが&lt;code class=&quot;highlighter-rouge&quot;&gt;SplashScreen.hide();&lt;/code&gt;を使って好きな時Splashスクリーンを終了させることができます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;RN(React Native)でプロジェクトを進める時Splashスクリーンがいつも早くなくなって困りました。&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;ライブラリを使った後、Splashスクリーンを自由にコントロールすることが出来てもっと良いUXを作ることができました。&lt;/p&gt; &lt;p&gt;私の場合、ネットワークを使ってないアプリは下記のように強制的に時間を入れてSplashスクリーンをもうちょっと維持しています。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SplashScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ネットワークを使う場合はネットワークから必要な情報を貰ってSplashスクリーンを終了させています。&lt;/p&gt; &lt;p&gt;皆さんも&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-splash-screen&lt;/code&gt;を使ってユーザにもっと良い経験を提供してみてください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-splash-screen 公式サイト: &lt;a href=&quot;https://github.com/crazycodeboy/react-native-splash-screen&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/crazycodeboy/react-native-splash-screen&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)は基本的にSplashスクリーンを提供しています。以前のブログでも紹介しましたが、generator-rn-toolboxツールを使ったら簡単に色んなサイズのSplashイメージを作れます。下のリンクはgenerator-rn-toolboxツールを使ってSplashイメージを作る方法に関するブログです。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-splash-screen.jpg"/></entry><entry xml:lang="ja"><title type="html">グラデーション(Gradient)</title><link href="https://dev-yakuza.github.io/react-native/react-native-linear-gradient/" rel="alternate" type="text/html" title="グラデーション(Gradient)"/><published>2019-02-02T00:00:00+09:00</published><updated>2019-02-03T12:20:22+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-linear-gradient-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-linear-gradient/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)にバックグラウンドでグラデーション(Gradient)を入れることは難しいです。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;を使ってRN(React Native)プロジェクトにグラデーション(Gradient)背景を入れる方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-linear-gradient公式サイト: &lt;a href=&quot;https://github.com/react-native-community/react-native-linear-gradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/react-native-community/react-native-linear-gradient&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)でグラデーション(Gradient)を使うため下記のコマンドを実行して&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-linear-gradient &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ライブラリ連結&quot;&gt;ライブラリ連結&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;を使うため下のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;ライブラリとRN(React Native)プロジェクトを連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link react-native-linear-gradient &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-linear-gradient&lt;/code&gt;を使ってグラデーション(Gradient)を実装する方法は下記のようです。 (ソースコードはreact-native-linear-gradient公式サイトからコピペ〜しました。)&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-linear-gradient'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Within your render function&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#4c669f'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#3b5998'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#192f6a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linearGradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buttonText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Sign&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Facebook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/LinearGradient&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Later on in your styles..&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyleSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;linearGradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;paddingLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;paddingRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;borderRadius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;buttonText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fontSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fontFamily&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Gill Sans'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;textAlign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'center'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#ffffff'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'transparent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;私たちは背景でグラデーション(Gradient)を使うため下のソースコードを使っています。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-linear-gradient'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'styled-components/native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Background&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LinearGradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` position: absolute; top: 0; left: 0; right: 0; bottom: 0; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Background&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;また、ページの切り替える時背景のグラデーション(Gradient)をスムーズ変えるためアニメーションを適用してます。アニメーションは下記のサイトを参考して作りました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;グラデーションアニメーション例題: &lt;a href=&quot;https://github.com/dslounge/rn-animated-gradient-example/tree/master/src/ColorExample/AnimatedGradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;AnimatedGradient&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発したアプリにグラデーション(Gradient)背景を入れってもっと美しいアプリを作ってみてください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-linear-gradient公式サイト: &lt;a href=&quot;https://github.com/react-native-community/react-native-linear-gradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/react-native-community/react-native-linear-gradient&lt;/a&gt;&lt;/li&gt; &lt;li&gt;グラデーションアニメーション例題: &lt;a href=&quot;https://github.com/dslounge/rn-animated-gradient-example/tree/master/src/ColorExample/AnimatedGradient&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;AnimatedGradient&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)にバックグラウンドでグラデーション(Gradient)を入れることは難しいです。このブログではreact-native-linear-gradientを使ってRN(React Native)プロジェクトにグラデーション(Gradient)背景を入れる方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-linear-gradient.png"/></entry><entry xml:lang="ja"><title type="html">スワイプ検知</title><link href="https://dev-yakuza.github.io/react-native/react-native-swipe-gestures/" rel="alternate" type="text/html" title="スワイプ検知"/><published>2019-02-01T00:00:00+09:00</published><updated>2019-02-01T12:20:52+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-swipe-gestures-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-swipe-gestures/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)プロジェクトを進めてる時ユーザのスワイプ(Swipe)の方向について別のアクションをする機能を追加することになりました。そして検索したら&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;と呼ばれるライブラリを発見して適用してみました。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;のインストールと使い方について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-swipe-gestures公式サイト: &lt;a href=&quot;https://github.com/glepur/react-native-swipe-gestures&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/glepur/react-native-swipe-gestures&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;下記のコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-swipe-gestures &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;RN(React Native)でユーザのスワイプ(Swipe)を検知するため下記のようにソースを修正します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GestureRecognizer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-swipe-gestures'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GestureRecognizer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onSwipeLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSwipeLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onSwipeRight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onSwipeRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;velocityThreshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;directionalOffsetThreshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/GestureRecognizer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSwipeLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gestureState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onSwipeRight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gestureState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでRN(React Native)でユーザのスワイプ(Swipe)を検知する方法についてみてみました。簡単な機能もどんどんコーディングをしなくてコピペーしてる自分をみつけました。。。&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-swipe-gestures&lt;/code&gt;ソースはそんな長くないのでソースを見って自ら作っても面白いと思います。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;react-native-swipe-gestures公式サイト: &lt;a href=&quot;https://github.com/glepur/react-native-swipe-gestures&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/glepur/react-native-swipe-gestures&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)プロジェクトを進めてる時ユーザのスワイプ(Swipe)の方向について別のアクションをする機能を追加することになりました。そして検索したらreact-native-swipe-gesturesと呼ばれるライブラリを発見して適用してみました。このブログではreact-native-swipe-gesturesのインストールと使い方について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-swipe-gestures.jpg"/></entry><entry xml:lang="ja"><title type="html">アフターエフェクト(AEF)</title><link href="https://dev-yakuza.github.io/react-native/react-native-lottie/" rel="alternate" type="text/html" title="アフターエフェクト(AEF)"/><published>2019-01-31T00:00:00+09:00</published><updated>2019-02-25T12:16:56+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-lottie-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-lottie/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;最近アプリに躍動感を入れるためマイクロインタラクション(Microinteractions)をたくさん使っています。このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;アドビのアフターエフェクト(Adobe After Effects)&lt;/code&gt;で作ったアニメーションをAirbnbが作った&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリを使ってRN(React Native)に適用する方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;lottie公式サイト: &lt;a href=&quot;https://airbnb.design/lottie/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://airbnb.design/lottie/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリを使うため下のコマンドを実行して&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;ライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; lottie-react-native &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ライブラリ連結&quot;&gt;ライブラリ連結&lt;/h2&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリを使うため&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;ライブラリをインストールを完了したら下記の方法でOSに合わせてライブラリを接続します。&lt;/p&gt; &lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt; &lt;p&gt;RN(React Native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリをiOSで使うため下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;ライブラリをRN(React Native)プロジェクトと連結します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link lottie-ios react-native link lottie-react-native &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project_name].xcodeproj&lt;/code&gt;か&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project_name].xcworkspace&lt;/code&gt;ファイルを開いてxcodeを実行します。その後、下のように追加設定をしてください。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/ios-settings.png&quot; alt=&quot;lottie ios追加設定&quot; /&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;下のメニューでプロジェクト名を選択&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TARGETS&lt;/code&gt;でプロジェクト名を選択&lt;/li&gt; &lt;li&gt;上部にあるメニューで&lt;code class=&quot;highlighter-rouge&quot;&gt;General&lt;/code&gt;を選択&lt;/li&gt; &lt;li&gt;スクロールして下に行くと&lt;code class=&quot;highlighter-rouge&quot;&gt;Embedded Binaries&lt;/code&gt;項目が見える。&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;ボタンを押して&lt;code class=&quot;highlighter-rouge&quot;&gt;Lottie.framework&lt;/code&gt;を検索、&lt;code class=&quot;highlighter-rouge&quot;&gt;ios&lt;/code&gt;用を選択して追加します。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/add-lottie-framework.png&quot; alt=&quot;lottie ios framework追加設定&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;アンドロイド&quot;&gt;アンドロイド&lt;/h3&gt; &lt;p&gt;上のように&lt;code class=&quot;highlighter-rouge&quot;&gt;iOS&lt;/code&gt;を連結したら&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie&lt;/code&gt;ライブラリをアンドロイドで使うため他にすることはありません。下記のコマンドが実行された時、アンドロイドは&lt;code class=&quot;highlighter-rouge&quot;&gt;lottie-react-native&lt;/code&gt;と連結されました。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native link lottie-react-native &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;p&gt;RN(React Native)でlottieを使うためにはアドビのアフターエフェクト(Adobe After Effects)で作ったアニメーションファイルが必要になりますアドビのアフターエフェクト(Adobe After Effects)でlottieに必要なアニメーションファイルを作る方法についてはこのブログでは説明しません。下記のリンクを参考してアドビのアフターエフェクト(Adobe After Effects)からlottieのアニメーションファイルを生成してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/lottie-web&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/airbnb/lottie-web&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;または下記のサイトで必要なマイクロインタラクション(Microinteractions)ファイルを検索してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://lottiefiles.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://lottiefiles.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;アドビのアフターエフェクト(Adobe After Effects)や上のサイトからダウンロードしたファイルは&lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt;形式になっております。&lt;/p&gt; &lt;p&gt;RN(React Native)でlottieを利用してマイクロインタラクション(Microinteractions)を適用するため下記のようにコードを作成します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LottieView&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lottie-react-native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BasicExample&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LottieView&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./animation.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;autoPlay&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;アニメーションファイルへイメージがある場合&quot;&gt;アニメーションファイルへイメージがある場合&lt;/h2&gt; &lt;p&gt;アドビのアフターエフェクト(AEF)を使ってアニメーションを作る際、アニメーションへイメージを含める場合が発生します。&lt;/p&gt; &lt;p&gt;イメージを含めたアニメーションをlottie用でエクスポートしたら、下記のようにイメージが含めてある&lt;code class=&quot;highlighter-rouge&quot;&gt;data.json&lt;/code&gt;を確認することができます。&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;data.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assets&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;image_0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;w&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;588&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;792&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;u&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;images/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;p&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;main_character.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;e&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;イメージを含めてるアニメーションファイルは普通のファイルと違ってイメージを追加する作業が必要になります。&lt;/p&gt; &lt;h3 id=&quot;ios-1&quot;&gt;iOS&lt;/h3&gt; &lt;p&gt;RN(React Native)プロジェクトフォルダで&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project name].xcworkspace&lt;/code&gt;(または&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/xcodeproj&lt;/code&gt;)を選択してxcodeを実行します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/lottie_ios_image_add.png&quot; alt=&quot;lottie ios イメージ追加&quot; /&gt;&lt;/p&gt; &lt;p&gt;上のように左でプロジェクトを選択して&lt;code class=&quot;highlighter-rouge&quot;&gt;Resources&lt;/code&gt;フォルダを右クリくして&lt;code class=&quot;highlighter-rouge&quot;&gt;Add Files to [project name]&lt;/code&gt;を選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/lottie_ios_image_add_select_file.png&quot; alt=&quot;lottie ios イメージ追加 - ファイル選択&quot; /&gt;&lt;/p&gt; &lt;p&gt;追加したいファイルを選択して、下にある&lt;code class=&quot;highlighter-rouge&quot;&gt;Copy items if needed&lt;/code&gt;オプションを選択して追加します。&lt;/p&gt; &lt;p&gt;上記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;Resources&lt;/code&gt;フォルダが見えない場合、左メニューでプロジェクト名を右クリくして&lt;code class=&quot;highlighter-rouge&quot;&gt;New Group without Folder&lt;/code&gt;を洗濯した後、追加されたグループ名を&lt;code class=&quot;highlighter-rouge&quot;&gt;Resources&lt;/code&gt;で修正します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/lottie_ios_image_add_resources_group.png&quot; alt=&quot;lottie ios イメージ追加 - resources グループ追加&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;アンドロイド-1&quot;&gt;アンドロイド&lt;/h3&gt; &lt;p&gt;アンドロイドはiOSより簡単です。RN(React Native)プロジェクトの&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/main/assets&lt;/code&gt;へアニメーションに含めてるイメージを入れるフォルダを生成します。ここでは&lt;code class=&quot;highlighter-rouge&quot;&gt;images&lt;/code&gt;フォルダを生成しました。そしてそのフォルダにイメージをコピーします。(&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/main/assets/images&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;コピーが完了したら、下のようにソースコードへ&lt;code class=&quot;highlighter-rouge&quot;&gt;imageAssetsFolder={'images'}&lt;/code&gt;を追加します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LottieView&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./animation.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;autoPlay&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imageAssetsFolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'images'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;git-リポジトリ&quot;&gt;Git リポジトリ&lt;/h3&gt; &lt;p&gt;アニメーションへイメージが含まれてある場合、&lt;code class=&quot;highlighter-rouge&quot;&gt;Lottie&lt;/code&gt;を使う方法についてgitリポジトリ(Repository)を作りました。下記のリンクで例題を確認することができます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;git リポジトリ: &lt;a href=&quot;https://github.com/dev-yakuza/react_native_lottie_exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react_native_lottie_exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;エラー対応&quot;&gt;エラー対応&lt;/h2&gt; &lt;p&gt;RN(React Native)プロジェクトで&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-lottie&lt;/code&gt;を実装してよく使いましたが、別のライブラリを入れった後ビルドする時、下記のようなエラーが発生しました。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Build system information error: Cycle &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;dependencies between targets &lt;span class=&quot;s1&quot;&gt;'LottieLibraryIOS'&lt;/span&gt; and &lt;span class=&quot;s1&quot;&gt;'LottieReactNative'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; building could produce unreliable results. Cycle path: LottieLibraryIOS → LottieReactNative → LottieLibraryIOS Cycle details: ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;RN(React Native)プロジェクトの&lt;code class=&quot;highlighter-rouge&quot;&gt;Pods&lt;/code&gt;フォルダや&lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;を削除してまたインストールしても問題が続けて発生しました。&lt;/p&gt; &lt;p&gt;下にある説明で私のRN(React Native)のプロジェクトは問題なくビルドされました。他の方も私と同じ問題が発生したら下記の方法を試してみてください。&lt;/p&gt; &lt;p&gt;RN(React Native)プロジェクトの&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[project_name].xcworkspace&lt;/code&gt;ファイルを実行してxcodeを実行します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/lottie_fix_error.png&quot; alt=&quot;lottie ビルドエラー対応&quot; /&gt;&lt;/p&gt; &lt;p&gt;xcodeが実行されたら上のように&lt;code class=&quot;highlighter-rouge&quot;&gt;File &amp;gt; Workspace Settings...&lt;/code&gt;を選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/react-native-lottie/change_build_system.png&quot; alt=&quot;lottie ビルドエラー対応: ビルドシステム変更&quot; /&gt;&lt;/p&gt; &lt;p&gt;上のようにビルドシステム(Build System)を&lt;code class=&quot;highlighter-rouge&quot;&gt;New Build System (Default)&lt;/code&gt;から &lt;code class=&quot;highlighter-rouge&quot;&gt;Legacy Build System&lt;/code&gt;に変更します。&lt;/p&gt; &lt;p&gt;私の場合はこのようにビルドシステム(Build System)を変更した後、RN(React Native)をビルドしたら無事にビルドされることを確認しました。他の方もこの方法で解決されたらいいと思います。&lt;/p&gt; &lt;h3 id=&quot;アンドロイドビルドエラー&quot;&gt;アンドロイドビルドエラー&lt;/h3&gt; &lt;p&gt;アンドロイドでビルドしたら下記のようにエラーが発生する場合があります。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Execution failed &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;task &lt;span class=&quot;s1&quot;&gt;':app:transformClassesWithDexBuilderForDevDebug'&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この場合、RN(React Native)プロジェクトフォルダの&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt;を開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;android{ ... configurations.all { resolutionStrategy { force 'com.airbnb.android:lottie:2.5.5' } } } &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;参考: &lt;a href=&quot;https://github.com/airbnb/lottie-android/issues/822#issuecomment-401812260&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Java 8 compilation error version 2.5.6 &lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでRN(React Native)でlottieを使ってマイクロインタラクション(Microinteractions)を実装しました。簡単ですね？lottieでアニメーションを適用するよりアニメーションを作ることがもっと大変と思います。私はアフターエフェクト(After Effects)ができないので&lt;a href=&quot;https://lottiefiles.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://lottiefiles.com/&lt;/a&gt;サイトを使ってます。lottieを使って皆さんも皆さんのアプリに面白いマイクロインタラクション(Microinteractions)を入れってみてください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;lottie公式サイト: &lt;a href=&quot;https://airbnb.design/lottie/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://airbnb.design/lottie/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 最近アプリに躍動感を入れるためマイクロインタラクション(Microinteractions)をたくさん使っています。このブログではアドビのアフターエフェクト(Adobe After Effects)で作ったアニメーションをAirbnbが作ったlottieライブラリを使ってRN(React Native)に適用する方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-lottie.jpg"/></entry></feed>