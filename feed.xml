<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dev-yakuza.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/" rel="alternate" type="text/html"/><updated>2019-01-20T15:17:57+09:00</updated><id>https://dev-yakuza.github.io/</id><title type="html">Dreams the art through programming</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ja"><title type="html">BlaBooアプリ開発日誌(RN, React Native)</title><link href="https://dev-yakuza.github.io/blaboo/development-journal/" rel="alternate" type="text/html" title="BlaBooアプリ開発日誌(RN, React Native)"/><published>2019-01-15T00:00:00+09:00</published><updated>2019-01-20T15:09:57+09:00</updated><id>https://dev-yakuza.github.io/blaboo/development-journal-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/blaboo/development-journal/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;今までRN(React Native)を勉強しましたが、アプリを最初から最後まで開発した経験がありませんでした。それでRN(React Native)を使って可能な限り早くアプリを最初から最後まで開発してみようかと思ってこのプロジェクトを実行しました。&lt;/p&gt; &lt;h2 id=&quot;blabooとは&quot;&gt;BlaBooとは?&lt;/h2&gt; &lt;p&gt;BlaBoo(ブラブー)は英語の&lt;code class=&quot;highlighter-rouge&quot;&gt;blah blah(ブラブラ)&lt;/code&gt;の単語と赤ちゃんが良く出す&lt;code class=&quot;highlighter-rouge&quot;&gt;boo(ブー)&lt;/code&gt;の単語を合わせた意味で、赤ちゃん/子供向けの単語アプリです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://itunes.apple.com/jp/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;アップルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;グーグルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;赤ちゃん/子供がイラストを見てそのイラストをタッチしたら音声でその単語を読んでくれるとてもシンプルなアプリです。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/app_concept.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;なぜ作るようになったか&quot;&gt;なぜ作るようになったか？&lt;/h2&gt; &lt;p&gt;実際赤ちゃん/子供向けの単語アプリは既にいっぱいあります。このアプリを作った主な目的は下記のようです。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;赤ちゃん/子供向けで多言語を勉強できる単語アプリを作る。&lt;/li&gt; &lt;li&gt;今まで勉強したRN(React Naitve)でアプリを開発して正式リリースする。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;外国に住んでいるので子供に外国語と母国語を教えたくて色々アプリを探したが、一つのアプリで多言語を勉強できる機能があるアプリがあまりありませんでした。問題も発見したしそれを解決する技術もあるから作ってみようと思って開発することにしました。&lt;/p&gt; &lt;h2 id=&quot;アプリ企画&quot;&gt;アプリ企画&lt;/h2&gt; &lt;p&gt;しかしアプリを自ら全て作ることは時間が十分ありませんでした。それでいった一旦赤ちゃん/子供向けのアプリをベンチマーキングして、MVP(Minimum Vaiable Product: 最小機能製品)を決めました。BlaBooのMVP(Minimum Vaiable Product: 最小機能製品)は下記のようです。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;単語のカテゴリー：カテゴリーを定義してその中に該当する単語を表示する。(ex&amp;gt; 車、果物、野菜)&lt;/li&gt; &lt;li&gt;単語をイラストで表示する：単語をイラストで表示して赤ちゃん/子供に興味を誘発させる&lt;/li&gt; &lt;li&gt;イラスト選択すると単語の音声を提供：イラストをタッチしたら単語を音声で読んで赤ちゃん/子供が自然にイラストと単語を勉強できるようにする。&lt;/li&gt; &lt;li&gt;多言語対応：多言語を対応して一つの単語を色んな国の言語で勉強できるようにする。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;これでMVP(Minimum Vaiable Production: 最小機能製品)を定義して簡単なスケッチでアプリの動線を企画しました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/hand_sketch.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - スケッチ&quot; /&gt;&lt;/p&gt; &lt;p&gt;スケッチテンプレートは下記のサイトでダウンロードしました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://sneakpeekit.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;http://sneakpeekit.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;一人でアプリを趣味で作るので企画がそんなすごくしょぼいですね。目標、ターゲット、ビジネスモデル。。。このようなものはいったん折っといておおよその機能とおおよそのスケッチをする程度だけしました。だけど、それなり仮説も立てて、することも一覧で出したり頑張りましたが、これを企画と呼べるかはちょっと恥ずかしですね。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/plan_trello.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - 企画&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;アプリデザイン&quot;&gt;アプリデザイン&lt;/h2&gt; &lt;p&gt;上で企画した内容をベースで基本的なデザインをしました。やはりデザイン専門家ではないのでデザインがそんなにきれいではないです。それでもデザインを通じてアプリの基本的な色やコンセプトなどを具体化ができました。&lt;/p&gt; &lt;p&gt;基本デザインは&lt;a href=&quot;https://www.sketchapp.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;sketchapp&lt;/a&gt;を使って簡単なデザインをしてイラストは&lt;a href=&quot;https://www.freepik.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;freepik&lt;/a&gt;と言うサイトでダウンロードしました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/sketch_design.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - デザイン&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;アプリ開発&quot;&gt;アプリ開発&lt;/h2&gt; &lt;p&gt;開発はRN(React Native)を使いました。開発者一人でiOS/Androidを同時に開発ができるしjavascriptなので参入障壁もswiftやkotlinより高くありませんでした。BlaBooは基本的RN(&lt;code class=&quot;highlighter-rouge&quot;&gt;React Native&lt;/code&gt;)とタイプスクリプト(&lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;)を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)のインストール方法：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/installation/&quot; target=&quot;_blank&quot;&gt;RNインストール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Native)にtypescriptを適用する: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;また、RN(React Native)の基本UIは&lt;code class=&quot;highlighter-rouge&quot;&gt;NativeBase&lt;/code&gt;をスタイルは&lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;を使ってました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Native)にNativeBaseを適用する：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/nativebase/&quot; target=&quot;_blank&quot;&gt;nativebase&lt;/a&gt;&lt;/li&gt; &lt;li&gt;RN(React Navtive)でstyled-componentsを使う：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;RN(React Native)は基本的ナビゲーションシステムがありません。BlaBooは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-navigation&lt;/code&gt;を使ってナビゲーションシステムを実装しました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-navigationの使い方：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-navigation/&quot; target=&quot;_blank&quot;&gt;react-navigation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;MVP(Minimum Vaiable Product：最小機能製品)の機能中一つである音声機能は&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt;を使って&lt;code class=&quot;highlighter-rouge&quot;&gt;tts(Text To Speech)&lt;/code&gt;の機能を実行しました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-ttsの使い方：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-tts/&quot; target=&quot;_blank&quot;&gt;react-native-tts&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;また、ユーザーの端末の地域情報を使ってアプリと&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-tts&lt;/code&gt;の基本言語を設定しています。ユーザーの端末情報を取得するため&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-device-info&lt;/code&gt;を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-device-infoの使い方：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-device-info/&quot; target=&quot;_blank&quot;&gt;react-native-device-info&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;そしてイラストをタッチするとイラストが動くアニメーションがありますが、&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;を使って実装しました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-animatableの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-animatable/&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;最後にアプリの広告や分析のためあグーグルのファイアベース(Google Firebase)とグーグルのアドモブ(Google Admob)を使ってます。このアプリの実装のため&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-firebase admobの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-admob&lt;/a&gt;&lt;/li&gt; &lt;li&gt;react-native-firebase analyticsの使い方: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-analytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase-analytics&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;こうやってまとめたらほとんどオープンソースを持って来て実装しただけであまりやったものがないに見えますね。素敵なオープンソースを作ってくれてありがとうございます。素敵なオープンソースでメインの機能を開発してRN(React Native)を使って再利用可能なコンポーネント(Component)を使って開発は容易に進めました。ただ、画面へ表示するイラストや音声のための単語をまとめる作業がもっと時間がかかりました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/resource.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - リソースコード&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;アプリ登録&quot;&gt;アプリ登録&lt;/h2&gt; &lt;p&gt;これでBlabooのMVP(Minimun Vaiable Product：最小機能製品)が完成させました。開発が終わったらすぐアプリを登録してダウンロードできると思いましたが、アプリの登録手続きにも結構時間がかかりました。&lt;/p&gt; &lt;p&gt;アップルのアプリ審査(App Review)が結構時間がかかることは事前に知っていましたのでまずiOSアプリを登録してiOSのアプリ登録が完了した時点でアンドロイドの登録手続きを進めました。アップルのアプリ登録は2ヶ月以上かかてアンドロイドは2日かかりました。&lt;/p&gt; &lt;p&gt;アップルはやはり色んな理由でアプリ審査がリジェクト(App Review reject)が多くて時間がかかりました。アンドロイドは赤ちゃん/子供向けのアプリだけど&lt;code class=&quot;highlighter-rouge&quot;&gt;Designed for Families program&lt;/code&gt;を選択しなかったので一回リジェクト(Reject)されました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/google_reject.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - グーグルのアプリ審査リジェクト&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリを登録するためにはアップル開発者プログラム(Apple Developer Program)登録とアンドロイド開発者登録(Google Play Developer)が必要です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;アップル開発者プログラム登録方法：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-enroll-developer-program/&quot; target=&quot;_blank&quot;&gt;iOS開発者登録&lt;/a&gt;&lt;/li&gt; &lt;li&gt;アンドロイド開発者(Google Play Developer)登録：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/&quot; target=&quot;_blank&quot;&gt;アンドロイド開発者登録&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;また、アプリを登録する時色んな情報が必要でした。その情報を作成する時も考えたより時間がかかりました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;iOSアプリ登録方法：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-app-store/&quot; target=&quot;_blank&quot;&gt;iOS App store登録&lt;/a&gt;&lt;/li&gt; &lt;li&gt;アンドロイドアプリ登録方法：&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-google-play/&quot; target=&quot;_blank&quot;&gt;アンドロイドアプリストア登録&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;そしてやはり厳しなアップルのアプリ審査(App Review)。5回くらいアプリ審査(App Review)がリジェクト(Reject)されました。本当に登録をやめったくなりましたね。結局最後のリジェクト(Reject)の理由はアプリがユーザーと適切な相互作用がないからアップルのアプリストアにはいらないアプリですと言いました。&lt;/p&gt; &lt;p&gt;最初は腹立って企画する時ベンチマーキングしたアプリと比較してここよりカテゴリが多いです、ここより単語量が多いです、ここにはない多言語機能がありますとアピールしましたが、簡単に承認してくれませんでした。逆に私が考えて他のアプリがアプリストアの違反されると思ったら申告してくださいと言われました。。。他の開発者が頑張って作ったものをどうやって申告しますかね。。。それで結局最初企画したものとは全然別の機能を追加しました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/blaboo/development-journal/add_card_mode.png&quot; alt=&quot;赤ちゃん/子供用単語勉強アプリBlaBoo開発日誌 - 復習機能&quot; /&gt;&lt;/p&gt; &lt;p&gt;カードタイプでカテゴリで勉強した単語を復習する機能を追加しました。20枚のカードがランダムで表示されてそのカードを左や右に渡し復習する機能です。&lt;/p&gt; &lt;p&gt;最初企画にはなかったもので緊急にアプリ審査(App Review)の承認のため一日でデザインして1日で機能を作ってので前のアプリ機能と合わんない気持ちがあります。今までも一つのアプリに二つのアプリが入ってる気持ちです。だけど、この機能を追加して無事にアプリ審査(App Review)を通過することができました。&lt;/p&gt; &lt;p&gt;最初はアップルのアプリ審査(App Review)が厳しすぎるじゃないと思いましたが、この審査があるおかげでiOSのアプリのUI/UXが用意かなと思いました。また、アップルのアプリ審査(App Reivew)の経験で次のアプリはもっとユーザを考えて作ると思いました。アプルのアプリ審査者(Apple App Reviewer)様だちに本当にありがとございます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://itunes.apple.com/jp/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;アップルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;グーグルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;アプリの開発の振り返え&quot;&gt;アプリの開発の振り返え&lt;/h2&gt; &lt;p&gt;色んなことがありましたが、無地に最初のアプリをリリースしました。しょぼいアプリかもしれないですが、このアプリはユーザーをたくさん増えさせて広告の収入を狙えうより自分自身が使うため、それと今まで勉強したRN(React Native)を活用してアプリの登録手続きを確認するため開発しました。&lt;/p&gt; &lt;p&gt;振り返えてみたら、開発よりデザイン、特にイラストをまとめった時間が結構かかりました。開発は一週間ぐらいかな。。。やはりRN(React Native)の開発パフォーマンスを確認しました。(オープンソース開発者たちに心から感謝します。)&lt;/p&gt; &lt;p&gt;アップルの厳しアプリ審査(App Review).そのせいで急なアプリコンセプトの変更、しかしそれのおかげでもっとユーザを考えて開発すると思う心構えを持ってるようになりました。もう一度アップルの審査者(App Review)様に感謝します。&lt;/p&gt; &lt;p&gt;BlaBooで検証したかった無料リソスでアプリの開発が出来る仮説は検証できました。皆さんも無料リソスを活用してアプリを開発してみてください。&lt;/p&gt; &lt;h2 id=&quot;最後に&quot;&gt;最後に&lt;/h2&gt; &lt;p&gt;やはり&lt;code class=&quot;highlighter-rouge&quot;&gt;TTS(Text To Speech)&lt;/code&gt;の音声は抵抗感がありました。そして読み間違い時もありました。韓国語で&lt;code class=&quot;highlighter-rouge&quot;&gt;スパゲティ&lt;/code&gt;は発音できなかったので&lt;code class=&quot;highlighter-rouge&quot;&gt;パスタ&lt;/code&gt;で変更しました。もし声を寄付してくれう方がいったら大歓迎です。(&lt;a href=&quot;https://dev-yakuza.github.io/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;イラストも無料イラストを使ったので一つのスタイルになってないです。やはり、これも寄付してくれる方がいったら大歓迎です。(&lt;a href=&quot;https://dev-yakuza.github.io/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;多言語は日本語、英語、韓国語を基本提供しましたが、中国とイタリアでアプリダウンロードがあって中国ごとイタリア語を追加しました。しかし中国語、イタリア語はできないので翻訳機を使いました。間違ってる中国、イタリア語があったら、フィドバックお願いします。また、他の言語を寄付してくれる方がいったら大歓迎です。(&lt;a href=&quot;https://dev-yakuza.github.io/contact/&quot; target=&quot;_blank&quot;&gt;Contact Us&lt;/a&gt;)&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://itunes.apple.com/jp/app/blaboo/id1441741187&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;アップルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;li&gt;ダウンロード: &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.blaboo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;グーグルアプリストア&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 今までRN(React Native)を勉強しましたが、アプリを最初から最後まで開発した経験がありませんでした。それでRN(React Native)を使って可能な限り早くアプリを最初から最後まで開発してみようかと思ってこのプロジェクトを実行しました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/blaboo/development-journal.png"/></entry><entry xml:lang="ja"><title type="html">アンドロイドアプリストア登録</title><link href="https://dev-yakuza.github.io/react-native/android-google-play/" rel="alternate" type="text/html" title="アンドロイドアプリストア登録"/><published>2019-01-12T00:00:00+09:00</published><updated>2019-01-15T09:49:44+09:00</updated><id>https://dev-yakuza.github.io/react-native/android-google-play-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/android-google-play/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発したアンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)に登録してみようかと思います。アンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)に登録するためにはアンドロイド開発者登録(グーグルプレイ開発者登録)が必要です。アンドロイド開発者登録(グーグルプレイ開発者登録)をしてない方は以前のブログを参考して登録してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/&quot; target=&quot;_blank&quot;&gt;アンドロイド開発者登録&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;準備&quot;&gt;準備&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発したアンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)に灯篭するためRN(React Native)をアンドロイド用にビルドする必要があります。RN(React Native)にアンドロイド署名キー(Android Signing Key)を登録してアンドロイド用にビルドする方法については以前のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;アンドロイドビルドやテスト&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;ビルドファイルサイズ最適化&quot;&gt;ビルドファイルサイズ最適化&lt;/h2&gt; &lt;p&gt;以前のブログである&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;アンドロイドビルドやテスト&lt;/a&gt;でアンドロイド用にビルドされたファイルはファイルサイズの最適化がされてないです。RN(React Native)で開発したアンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)にアップロードするためにはビルドファイルサイズを最適化する必要があります。&lt;/p&gt; &lt;p&gt;RN(React Native)プロジェクトフォルダで&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt;を開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... defaultConfig { ... // ndk { // abiFilters &quot;armeabi-v7a&quot;, &quot;x86&quot; // } } ... def enableSeparateBuildPerCPUArchitecture = true &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして下記のコマンドを使ってRN(React Native)をアンドロイド用にビルドします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# cd android&lt;/span&gt; ./gradlew assembleRelease &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ビルドされたファイルは下記の位置で確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;android/app/build/outputs/apk/release/app-armeabi-v7a-release.apk android/app/build/outputs/apk/release/app-x86-release.apk &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;アプリ登録&quot;&gt;アプリ登録&lt;/h2&gt; &lt;p&gt;下記のリンクを押してグーグルプレイコンソル(Google Play Console)に移動します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;グーグルプレイコンソル(Google Play Console): &lt;a href=&quot;https://play.google.com/apps/publish/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://play.google.com/apps/publish/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;グーグルプレイコンソル(Google Play Console)に移動したら下記の画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/google-play-console-home.png&quot; alt=&quot;グーグルプレイコンソルホーム&quot; /&gt;&lt;/p&gt; &lt;p&gt;画面の上にある&lt;code class=&quot;highlighter-rouge&quot;&gt;PUBLISH AN ANDROID APP ON GOOGLE PLAY&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-title.png&quot; alt=&quot;グーグルプレイコンソルアプリタイトル&quot; /&gt;&lt;/p&gt; &lt;p&gt;アンドロイドアプリストア(Google Play)に表示される名前と基本言語を選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-info.png&quot; alt=&quot;グーグルプレイコンソルアプリ情報&quot; /&gt;&lt;/p&gt; &lt;p&gt;アンドロイドアプリストア(Google Play)に表示される情報を入力します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;タイトル(title): 50文字&lt;/li&gt; &lt;li&gt;要約説明(short description): 80文字&lt;/li&gt; &lt;li&gt;全体説明(full description): 4000文字&lt;/li&gt; &lt;li&gt;アプリイメージ(Screenshots)&lt;/li&gt; &lt;li&gt;アプリアイコン(App icon): 512x512(32-bit PNG, alpha), 1024x500(JPG or 24-bit PNG), 180x120(JPG or 24-bit PNG), 1280x720(JPG or 24-bit PNG), 4096x4096(JPG or 24-bit PNG)&lt;/li&gt; &lt;li&gt;プロモーションビデオ(Promo Video)&lt;/li&gt; &lt;li&gt;アプリカテゴリ(Category)&lt;/li&gt; &lt;li&gt;開発者連絡先(Contact details)&lt;/li&gt; &lt;li&gt;個人情報ポリシー(Privacy Policy)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;全ての情報を入力したらapkファイルを登録する方法について説明します。&lt;/p&gt; &lt;p&gt;左上にある&lt;code class=&quot;highlighter-rouge&quot;&gt;App release&lt;/code&gt;メニューを押したら下記の画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-register.png&quot; alt=&quot;グーグルプレイアプリ登録&quot; /&gt;&lt;/p&gt; &lt;p&gt;画面に見える&lt;code class=&quot;highlighter-rouge&quot;&gt;Production track&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;Production&lt;/code&gt;項目の&lt;code class=&quot;highlighter-rouge&quot;&gt;MANAGE&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app-production.png&quot; alt=&quot;グーグルプレイアプリproduction生成&quot; /&gt;&lt;/p&gt; &lt;p&gt;上のような画面が見えたら下の&lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE RELEASE&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/register-signing-key.png&quot; alt=&quot;グーグルプレイアプリ署名キー登録&quot; /&gt;&lt;/p&gt; &lt;p&gt;グーグルプレイ(Google Play)を使ってアプリ署名(App Signing)をするため&lt;code class=&quot;highlighter-rouge&quot;&gt;FINISH&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/accept-agreement.png&quot; alt=&quot;グーグルプレイ利用規約同意&quot; /&gt;&lt;/p&gt; &lt;p&gt;上のような利用規約が表示されたら下にある&lt;code class=&quot;highlighter-rouge&quot;&gt;ACCEPT&lt;/code&gt;ボタンを押して同意します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_apk.png&quot; alt=&quot;グーグルプレイapkアップロード&quot; /&gt;&lt;/p&gt; &lt;p&gt;上でビルド下RN(React Native)の&lt;code class=&quot;highlighter-rouge&quot;&gt;apk&lt;/code&gt;ファイルをアップロードします。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_release_note.png&quot; alt=&quot;グーグルプレイapkリリースノート&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリの配布名前(Release Name)と配布ノート(Release Note)を作成して右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE&lt;/code&gt;ボタンを押します。そしたら右の&lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt;ボタンがアクティブになります。アクティブになった&lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/not_yet.png&quot; alt=&quot;グーグルプレイ登録不可&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリの登録手続きが終わってないので右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;START ROLLOUT TO PRODUCTION&lt;/code&gt;ボタンがアクティブになりません。左メニューの&lt;code class=&quot;highlighter-rouge&quot;&gt;Content rating&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating.png&quot; alt=&quot;グーグルプレイコンテンツ評価&quot; /&gt;&lt;/p&gt; &lt;p&gt;コンテンツ評価(Content Rating)を設定する画面です。&lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_insert_info.png&quot; alt=&quot;グーグルプレイコンテンツ評価情報入力&quot; /&gt;&lt;/p&gt; &lt;p&gt;メール情報やアプリのカテゴリを選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_agreement.png&quot; alt=&quot;グーグルプレイコンテンツ評価情報同意&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリのコンテンツ評価を決めるための情報を選択します。全て選択したら下の&lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE QUESTIONNAIRE&lt;/code&gt;ボタンを押してアクティブされた&lt;code class=&quot;highlighter-rouge&quot;&gt;CALCULATE RATING&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_content_rating_completed.png&quot; alt=&quot;グーグルプレイコンテンツ評価情報選択完了&quot; /&gt;&lt;/p&gt; &lt;p&gt;入力した情報をベースでコンテンツ評価が計算されて出ます。内容を確認して下の&lt;code class=&quot;highlighter-rouge&quot;&gt;APPLYING RATING&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/calculated_content_rating.png&quot; alt=&quot;グーグルプレイコンテンツ評価完了&quot; /&gt;&lt;/p&gt; &lt;p&gt;コンテンツ評価の入力を完了しました。コンテンツ評価に影響があるアップデートがあったら、コンテンツ評価を再計算する必要がありますので、上の手続きをまたしてください。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/content_rating.png&quot; alt=&quot;グーグルプレイコンテンツ評価&quot; /&gt;&lt;/p&gt; &lt;p&gt;最後の手続きである料金の設定をするため左メニューの&lt;code class=&quot;highlighter-rouge&quot;&gt;Pricing &amp;amp; distribution&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_price_info.png&quot; alt=&quot;グーグルプレイアプリ料金情報&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリの料金を設定する画面です。私たちは無料でアプリを提供する予定なので、&lt;code class=&quot;highlighter-rouge&quot;&gt;FREE&lt;/code&gt;を設定して進めます。また、子供向け、アプリに広告が含まれてあるかなど情報を入力します。必須項目を全て入力したら下の&lt;code class=&quot;highlighter-rouge&quot;&gt;SAVE DRAFT&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;h2 id=&quot;アプリ審査申請&quot;&gt;アプリ審査申請&lt;/h2&gt; &lt;p&gt;アプリ審査(App Review)のための準備が終わりました。メニューの&lt;code class=&quot;highlighter-rouge&quot;&gt;App release&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_review.png&quot; alt=&quot;グーグルプレイアプリ審査&quot; /&gt;&lt;/p&gt; &lt;p&gt;上で作成した&lt;code class=&quot;highlighter-rouge&quot;&gt;Production&lt;/code&gt;項目の横にある&lt;code class=&quot;highlighter-rouge&quot;&gt;EDIT RELEASE&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/app_review_info.png&quot; alt=&quot;グーグルプレイアプリ審査情報&quot; /&gt;&lt;/p&gt; &lt;p&gt;上で作成した情報が見えます。スクロールして下に移動して、&lt;code class=&quot;highlighter-rouge&quot;&gt;REVIEW&lt;/code&gt;ボタンを選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/apply_app_review_info.png&quot; alt=&quot;グーグルプレイアプリ審査申請&quot; /&gt;&lt;/p&gt; &lt;p&gt;上のような画面が見えたらスクロールして下に移動して&lt;code class=&quot;highlighter-rouge&quot;&gt;START ROLLOUT TO PRODUCTION&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-google-play/register_app.png&quot; alt=&quot;グーグルプレイアプリ登録&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリ審査の準備が終わったら&lt;code class=&quot;highlighter-rouge&quot;&gt;CONFIRM&lt;/code&gt;ボタンを押してアプリ審査を申請します。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;アンドロイドアプリストア(Google Play)にアプリを登録するための手続きが終わりました。アプリ審査は2~3時間くらいかかります。アプリの審査が終わったら登録申請したアプリをアンドロイドアプリストア(Google Play)で検索やダウンロードができます。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)で開発したアンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)に登録してみようかと思います。アンドロイドアプリ(Android App)をアンドロイドアプリストア(Google Play)に登録するためにはアンドロイド開発者登録(グーグルプレイ開発者登録)が必要です。アンドロイド開発者登録(グーグルプレイ開発者登録)をしてない方は以前のブログを参考して登録してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/android-google-play.jpg"/></entry><entry xml:lang="ja"><title type="html">アンドロイド開発者登録</title><link href="https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/" rel="alternate" type="text/html" title="アンドロイド開発者登録"/><published>2019-01-11T00:00:00+09:00</published><updated>2019-01-11T17:13:53+09:00</updated><id>https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/android-enroll-google-play-developer/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発したアンドロイドアプリ(Android App)をグーグルプレイストア(Google Playstore)に登録するためアンドロイド開発者登録(グーグルプレイ開発者登録)をして見ようと思います。&lt;/p&gt; &lt;p&gt;アップル開発者登録(Apple Developer Program)に関しては以前のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-enroll-developer-program/&quot; target=&quot;_blank&quot;&gt;iOS開発者登録&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;準備&quot;&gt;準備&lt;/h2&gt; &lt;p&gt;アンドロイドアプリ(Android App)をグーグルプレイストア(Google Playstore)に登録するためには当然だがグーグルのアカウント(Google Account)が必要です。もしグーグルのアカウント(Google Account)が無い方はグーグルのアカウント(Google Account)を生成してください。また、アンドロイド開発者(グーグルプレイ開発者)は18歳以上でなければなら登録が可能です。この点は参考してください。&lt;/p&gt; &lt;p&gt;アンドロイド開発者登録(グーグルプレイ開発者登録)もiOS開発者登録みたいに登録手数料が発生します。登録手数料は25ドルで、毎年更新するiOS開発者とは違って一回のみで発生します。手数料は下のカードで決済が出来ます&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Mastercard&lt;/li&gt; &lt;li&gt;Visa&lt;/li&gt; &lt;li&gt;American Express&lt;/li&gt; &lt;li&gt;Discover(アメリカのみ)&lt;/li&gt; &lt;li&gt;Visa Electron(アメリカ以外)&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;アンドロイド開発者登録&quot;&gt;アンドロイド開発者登録&lt;/h2&gt; &lt;p&gt;アンドロイド開発者登録(グーグルプレイ開発者登録)をする準備が出来ました。アンドロイド開発者登録(グーグル開発者登録)のため下記のリンクを押して登録ページに移動します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;アンドロイド開発者登録(グーグルプレイ開発者登録): &lt;a href=&quot;https://play.google.com/apps/publish/signup/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://play.google.com/apps/publish/signup/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;グーグルのアカウント(Google Account)でログインした状態で上のリンクを押したら下のような画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/enroll-goole-play-developer.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者登録サイト&quot; /&gt;&lt;/p&gt; &lt;p&gt;スクロールして下に移動して左へ&lt;code class=&quot;highlighter-rouge&quot;&gt;開発者契約に同意(Accept developer agreement)&lt;/code&gt;して右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE TO PAYMENT&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/accept-developer-agreement.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者登録同意&quot; /&gt;&lt;/p&gt; &lt;p&gt;そしたら下記のような決済画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/purchase.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者手数料決済&quot; /&gt;&lt;/p&gt; &lt;p&gt;決済情報を入力して右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;BUY&lt;/code&gt;ボタンを押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/purchase-completed.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者決済成功&quot; /&gt;&lt;/p&gt; &lt;p&gt;決済に成功したら上のような画面が見えます。&lt;code class=&quot;highlighter-rouge&quot;&gt;CONTINUE REGISTRATION&lt;/code&gt;ボタンを押してアンドロイド開発者(グーグルプレイ開発者)登録を進めます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/developer-info.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者情報入力&quot; /&gt;&lt;/p&gt; &lt;p&gt;上のようなアンドロイド開発者(グーグルプレイ開発者)の情報を入力する画面が出たら、必須項目を全て入力して右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;COMPLETE REGISTRAION&lt;/code&gt;を押します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/android-enroll-google-play/completed-enroll.png&quot; alt=&quot;アンドロイド開発者、グーグルプレイ開発者登録成功&quot; /&gt;&lt;/p&gt; &lt;p&gt;アンドロイド開発者(グーグルプレイ開発者)登録に成功したら上のような画面が見えます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;RN(React Native)で開発したアンドロイドアプリ(Android App)をグーグルプレイストア(Google Playstore)に登録するためアンドロイド開発者登録(グーグルプレイ開発者登録)をして見ました。次のブログではRN(React Native)で開発したアンドロイドアプリ(Android App)を実際登録して見ます。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://support.google.com/googleplay/android-developer/answer/6112435&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://support.google.com/googleplay/android-developer/answer/6112435&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 RN(React Native)で開発したアンドロイドアプリ(Android App)をグーグルプレイストア(Google Playstore)に登録するためアンドロイド開発者登録(グーグルプレイ開発者登録)をして見ようと思います。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/android-enroll-google-play-developer.jpg"/></entry><entry xml:lang="ja"><title type="html">jwt:ログワウと</title><link href="https://dev-yakuza.github.io/laravel/jwt-logout/" rel="alternate" type="text/html" title="jwt:ログワウと"/><published>2019-01-05T00:00:00+09:00</published><updated>2019-01-06T16:27:20+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-logout-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-logout/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;jwt認証システムへログアウト機能を追加する方法について説明します。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)のインストールや会員登録、ログイン、ユーザ情報取得、jwtトークン更新機能については以前のブログを確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwtインストールや設定&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:会員登録&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:ログイン&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-user-info&quot; target=&quot;_blank&quot;&gt;jwt:ユーザ情報&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-refresh-token&quot; target=&quot;_blank&quot;&gt;jwt:トークン更新&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;リポジトリrepository&quot;&gt;リポジトリ(Repository)&lt;/h2&gt; &lt;p&gt;私たちはjwt認証システムを実装したリポジトリ(Repository)を作りました。下記のリンクを押してリポジトリ(Repository)を確認してみてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;開発環境構成&quot;&gt;開発環境構成&lt;/h2&gt; &lt;p&gt;ここで説明する内容はLaradockとアンシブル(Ansible)を使って作ったララベル(Laravel)開発環境上で開発やテストします。Laradockとアンシブル(Ansible)を使ってララベル(Laravel)開発環境については下のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;コントローラー修正&quot;&gt;コントローラー修正&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)プロジェクトフォルダの&lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt;コントローラー(Controller)ファイルを開いて下記の内容を追加します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'message'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'logout'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ルート修正&quot;&gt;ルート修正&lt;/h2&gt; &lt;p&gt;ログアウトのためのURLを追加するため&lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt;ファイルを開いて下記の内容を追加します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;テスト&quot;&gt;テスト&lt;/h2&gt; &lt;p&gt;今まで開発したログアウト機能を&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;を使って確認します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/logout &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;jwtトークンが有効だったら下記のように成功的ログアウトが出来ます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-logout/logout.png&quot; alt=&quot;logout&quot; /&gt;&lt;/p&gt; &lt;p&gt;jwtトークの有効期限が終ったり、以前のjwtトークンを使ったら下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt;エラーの応答(Response)を確認することが出来ます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-logout/fail_to_logout.png&quot; alt=&quot;fail to logout&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでララベル(Laravel)にjwt認証システムを追加してトークンベース認証システムを実装しました。私たちはこのjwt認証システムを使ってRN(React native)アプリを開発する予定です。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 jwt認証システムへログアウト機能を追加する方法について説明します。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)のインストールや会員登録、ログイン、ユーザ情報取得、jwtトークン更新機能については以前のブログを確認してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-logout.jpg"/></entry><entry xml:lang="ja"><title type="html">jwt:トークン更新</title><link href="https://dev-yakuza.github.io/laravel/jwt-refresh-token/" rel="alternate" type="text/html" title="jwt:トークン更新"/><published>2019-01-04T00:00:00+09:00</published><updated>2019-01-06T15:44:04+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-refresh-token-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-refresh-token/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;jwt認証システムを使ってログインした後取得したjwtトークンを更新(Refresh)する方法について説明します。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)のインストールや会員登録、ログイン、ユーザ情報取得機能については以前のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwtインストールや設定&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:会員登録&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:ログイン&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-user-info&quot; target=&quot;_blank&quot;&gt;jwt:ユーザ情報&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;リポジトリrepository&quot;&gt;リポジトリ(Repository)&lt;/h2&gt; &lt;p&gt;私たちはjwt認証システムを実装したリポジトリ(Repository)を作りました。下記のリンクを押してリポジトリ(Repository)を確認してみてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;開発環境構成&quot;&gt;開発環境構成&lt;/h2&gt; &lt;p&gt;ここで説明する内容はLaradockとアンシブル(Ansible)を使って作ったララベル(Laravel)開発環境上で開発やテストします。Laradockとアンシブル(Ansible)を使ってララベル(Laravel)開発環境については下のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;コントローラー修正&quot;&gt;コントローラー修正&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)プロジェクトフォルダの&lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt;コントローラー(Controller)ファイルを開いて下記の内容を追加します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ルート修正&quot;&gt;ルート修正&lt;/h2&gt; &lt;p&gt;jwtトークンを更新(Refresh)するためのURLを追加するため&lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt;ファイルを開いて下の内容を追加します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;テスト&quot;&gt;テスト&lt;/h2&gt; &lt;p&gt;今まで開発したjwtトークン更新(Refresh)機能を&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;を使って確認します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/refresh &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;jwtトークンが有効だったら、下記のようにjwtトークンを更新(Refresh)して新しトークンを発行してもらいます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-refresh-token/refresh_token.png&quot; alt=&quot;refresh token&quot; /&gt;&lt;/p&gt; &lt;p&gt;jwtトークンの有効期限が終ったり、以前のjwtトークンを使ったら下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt;エラーの応答(Response)を確認することができます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-refresh-token/fail_to_refresh_token.png&quot; alt=&quot;fail to refresh token&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでjwt認証システムを使ってログイン後取得したjwtトークンを更新(Refresh)する方法について見て見ました。次のブログではjwt認証システムの最後機能であるログアウト機能を追加する方法に関して見て見ます。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 jwt認証システムを使ってログインした後取得したjwtトークンを更新(Refresh)する方法について説明します。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)のインストールや会員登録、ログイン、ユーザ情報取得機能については以前のブログを参考してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-refresh-token.jpg"/></entry><entry xml:lang="ja"><title type="html">jwt:ユーザ情報</title><link href="https://dev-yakuza.github.io/laravel/jwt-user-info/" rel="alternate" type="text/html" title="jwt:ユーザ情報"/><published>2018-12-28T00:00:00+09:00</published><updated>2019-01-06T15:44:04+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-user-info-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-user-info/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;jwt認証システムを使ってログインしたユーザの情報を取得する方法についてみてみようかと思います。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)インストールや会員登録、ログインの実装については以前のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwtインストールや設定&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:会員登録&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:ログイン&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;リポジトリrepository&quot;&gt;リポジトリ(Repository)&lt;/h2&gt; &lt;p&gt;私たちはjwt認証システムを実装したリポジトリ(Repository)を作りました。下記のリンクを押してリポジトリ(Repository)を確認してみてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;開発環境構成&quot;&gt;開発環境構成&lt;/h2&gt; &lt;p&gt;ここで説明する内容はLaradockとアンシブル(Ansible)を使って作ったララベル(Laravel)開発環境上で開発やテストします。Laradockとアンシブル(Ansible)を使ってララベル(Laravel)開発環境については下のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;コントローラー修正&quot;&gt;コントローラー修正　&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)プロジェクトフォルダの&lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt;ファイルを開いて下記の内容を追加します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;クライアント(Client, ブラウザ)のリクエスト(Request)でログインしたユーザの情報と取得して応答(Response)する関数です。 의 요청(Request)으로 로그인한 유저의 정보를 얻어 응답(Response)하는 함수입니다.&lt;/p&gt; &lt;h2 id=&quot;ルート修正&quot;&gt;ルート修正&lt;/h2&gt; &lt;p&gt;コントローラー(Controller)に追加した関数をURLと連携するためルート(Route)を修正します。&lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt;ファイルを開いて下の内容を追加します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'message'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ユーザ情報を取得するため&lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;ルート(Route)はミドルウェア(Middleware)で&lt;code class=&quot;highlighter-rouge&quot;&gt;auth:api&lt;/code&gt;を使います。このミドルウェア(Middleware)によってログインしたユーザとログインしてないユーザを判断してログインしたユーザだけユーザ情報を取得することが出来ます。ログインしてないユーザは&lt;code class=&quot;highlighter-rouge&quot;&gt;unauthorized&lt;/code&gt;ルート(Route)にリダイレクト(Redirect)をさせて&lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt;を応答(Response)する予定です。&lt;/p&gt; &lt;h2 id=&quot;リダイレクト&quot;&gt;リダイレクト&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)の&lt;code class=&quot;highlighter-rouge&quot;&gt;Auth&lt;/code&gt;ミドルウェア(Middleware)は基本的にリダイレクト(Redirect)機能を持ってます。私たちはここに&lt;code class=&quot;highlighter-rouge&quot;&gt;api&lt;/code&gt;用リダイレクト(Redirect)を設定して&lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt;エラーを応答(Response)するように設定します。&lt;code class=&quot;highlighter-rouge&quot;&gt;app/Http/Middleware/Authenticate.php&lt;/code&gt;ファイルを開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;redirectTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expectsJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api/*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;テスト&quot;&gt;テスト&lt;/h2&gt; &lt;p&gt;今まで開発したユーザ情報取得機能を&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;を使って確認します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/user &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;jwtトークンが有効だったら、下記のようにユーザの情報を取得します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-user-info/get_user_info.png&quot; alt=&quot;get user info&quot; /&gt;&lt;/p&gt; &lt;p&gt;jwtトークンの有効期限が終わったり、ログインしてないユーザが情報をリクエスト(Request)すると下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt;エラーの応答(Response)を確認することが出来ます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-user-info/fail_to_get_user_info.png&quot; alt=&quot;fail to get user info&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでjwt認証システムを使ってログインしたユーザの情報を取得するapiを開発しました。次のブログではログインした後、apiを使って取得したjwtトークンを更新(Refresh)する機能を追加してみます。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 jwt認証システムを使ってログインしたユーザの情報を取得する方法についてみてみようかと思います。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)インストールや会員登録、ログインの実装については以前のブログを参考してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-user-info.jpg"/></entry><entry xml:lang="ja"><title type="html">jwt:ログイン</title><link href="https://dev-yakuza.github.io/laravel/jwt-signin/" rel="alternate" type="text/html" title="jwt:ログイン"/><published>2018-12-25T00:00:00+09:00</published><updated>2019-01-06T15:44:04+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-signin-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-signin/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;jwt認証システムを使ってログイン機能を実装してみようかと思います。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)インストールや会員登録機能の実装に関しては以前のブログを確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwtインストールや設定&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:会員登録&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;リポジトリrepository&quot;&gt;リポジトリ(Repository)&lt;/h2&gt; &lt;p&gt;私たちはjwt認証システムを実装したリポジトリ(Repository)を作りました。下記のリンクを押してリポジトリ(Repository)を確認してみてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;開発環境構成&quot;&gt;開発環境構成&lt;/h2&gt; &lt;p&gt;ここで説明する内容はLaradockとアンシブル(Ansible)を使って作ったララベル(Laravel)開発環境上で開発やテストします。Laradockとアンシブル(Ansible)を使ってララベル(Laravel)開発環境については下のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;モデル修正&quot;&gt;モデル修正&lt;/h2&gt; &lt;p&gt;jwt認証システムの認証に使わられるモデル(Model)を下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Foundation\Auth\User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Authenticatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tymon\JWTAuth\Contracts\JWTSubject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Authenticatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JWTSubject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ララベル(Laravel)の認証機能を使うためにモデル(Model)を&lt;code class=&quot;highlighter-rouge&quot;&gt;Authenticatable&lt;/code&gt;から継承しました。 また、jwtミドルウェア(Middleware)のインタフェースを&lt;code class=&quot;highlighter-rouge&quot;&gt;JWTSubject&lt;/code&gt;を通じて実装します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上の関数はjwtミドルウェア(Middleware)のインタフェースを実装した部分です。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この部分はjwtのトークンを取得するための関数です。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この関数を説明するためjwtトークンを少し説明します。jwtは大きく&lt;code class=&quot;highlighter-rouge&quot;&gt;ヘッダー(header).内容(payload).署名(signature)&lt;/code&gt;で構成されています。その中&lt;code class=&quot;highlighter-rouge&quot;&gt;内容(Payload)&lt;/code&gt;に使われる情報の一部を&lt;code class=&quot;highlighter-rouge&quot;&gt;Claim&lt;/code&gt;と呼ばれ、&lt;code class=&quot;highlighter-rouge&quot;&gt;key-value&lt;/code&gt;形式で構成されています。jwtは基本的に&lt;code class=&quot;highlighter-rouge&quot;&gt;内容(Payload)&lt;/code&gt;に下記のような情報(&lt;code class=&quot;highlighter-rouge&quot;&gt;Claim&lt;/code&gt;)を持ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;iss(Issuer): トークン発行者&lt;/li&gt; &lt;li&gt;sub(Subject): トークンのタイトル(デフォルトはuser id)&lt;/li&gt; &lt;li&gt;iat(Issued At): トークン発行日(unix timestamp)&lt;/li&gt; &lt;li&gt;exp(Expiry): トークンの有効期限&lt;/li&gt; &lt;li&gt;nbf(Not Before): トークンを使えるスタート時間&lt;/li&gt; &lt;li&gt;jti(JWT Id): JWTのユニーク識別子。 主に重複的な処理を防止するために使う。&lt;/li&gt; &lt;li&gt;prv: ユーザープロバイダクラス(User Provider class)のハッシュ。複数のguardを使うために&lt;code class=&quot;highlighter-rouge&quot;&gt;tymondesigns/jwt-auth&lt;/code&gt;に追加された特別なコード。(&lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/pull/1167&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;詳しく説明はこちらへ&lt;/a&gt;)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;この情報以外、追加的にjwtトークンに情報を追加したい時、&lt;code class=&quot;highlighter-rouge&quot;&gt;getJWTCustomClaims()&lt;/code&gt;関数に戻り値(Return value)を修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'firstname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lastname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lastname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;guard修正&quot;&gt;guard修正&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)の認証を担当してる&lt;code class=&quot;highlighter-rouge&quot;&gt;config/auth.php&lt;/code&gt;ファイルの&lt;code class=&quot;highlighter-rouge&quot;&gt;guard&lt;/code&gt;を下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;'guards'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'web'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'session'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'provider'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'jwt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'provider'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;コントローラー修正&quot;&gt;コントローラー修正&lt;/h2&gt; &lt;p&gt;以前のブログで生成した&lt;code class=&quot;highlighter-rouge&quot;&gt;app/Http/Controllers/JWTAuthController.php&lt;/code&gt;コントローラーにログイン関数を追加します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'token_type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bearer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expires_in'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;まず、リクエスト(Request)の入力データを確認します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そしてユーザの&lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;でログインさせます。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ログインに成功したらリクエスト(Request)に関してjwtトークンをリターン(Response)します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'token_type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bearer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expires_in'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ルート連結&quot;&gt;ルート連結&lt;/h2&gt; &lt;p&gt;コントローラー(Controller)に生成したログイン関数を&lt;code class=&quot;highlighter-rouge&quot;&gt;routes/api.php&lt;/code&gt;でURLと連携する必要があります。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;テスト&quot;&gt;テスト&lt;/h2&gt; &lt;p&gt;今まで開発したjwt認証システムのログイン機能を&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;を使って確認します。&lt;code class=&quot;highlighter-rouge&quot;&gt;localhost/api/login&lt;/code&gt;のURLに&lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;を入力して&lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt;でリクエスト(Request)を送ったら下記のような結果を確認することができます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signin/login.png&quot; alt=&quot;postman login api test&quot; /&gt;&lt;/p&gt; &lt;p&gt;応答(Response)で貰った&lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt;キーを&lt;a href=&quot;https://jwt.io/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://jwt.io/&lt;/a&gt;で確認すると下記のような結果を見ることができます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signin/check_access_key.png&quot; alt=&quot;check access_key&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでjwt認証システムを利用してログイン機能を実装して見ました。次のブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;access token&lt;/code&gt;を使ってユーザの情報を取得する方法に関して見てみます。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;JSON Web Token (JWT): &lt;a href=&quot;https://tools.ietf.org/html/rfc7519#section-4.1&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://tools.ietf.org/html/rfc7519#section-4.1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;jwt-auth prv: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/issues/1344&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth/issues/1344&lt;/a&gt;&lt;/li&gt; &lt;li&gt;jwt-auth Creating Tokens: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/wiki/Creating-Tokens&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth/wiki/Creating-Tokens&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 jwt認証システムを使ってログイン機能を実装してみようかと思います。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)インストールや会員登録機能の実装に関しては以前のブログを確認してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-signin.png"/></entry><entry xml:lang="ja"><title type="html">jwt:会員登録</title><link href="https://dev-yakuza.github.io/laravel/jwt-signup/" rel="alternate" type="text/html" title="jwt:会員登録"/><published>2018-12-22T00:00:00+09:00</published><updated>2019-01-05T15:22:47+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-siginup-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-signup/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;トークンベース認証システムであるjwt(Json Web Token)を使って会員登録機能を実装してみようかと思います。このブログではjwtトークンシステムを&lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;tymon/jwt-auth&lt;/a&gt;ミドルウェア(Middleware)を使ってララベル(Laravel)に適用しました。ララベル(Laravel)プロジェクトにjwtミドルウェア(Middleware)である&lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;をインストールや設定については以前のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwtインストールや設定&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;リポジトリrepository&quot;&gt;リポジトリ(Repository)&lt;/h2&gt; &lt;p&gt;私たちはjwt認証システムを実装したリポジトリ(Repository)を作りました。下記のリンクを押してリポジトリ(Repository)を確認してみてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;開発環境構成&quot;&gt;開発環境構成&lt;/h2&gt; &lt;p&gt;ここで説明する内容はLaradockとアンシブル(Ansible)を使って作ったララベル(Laravel)開発環境上で開発やテストします。Laradockとアンシブル(Ansible)を使ってララベル(Laravel)開発環境については下のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;データベース連結&quot;&gt;データベース連結&lt;/h2&gt; &lt;p&gt;今から実装する会員登録機能は会員の情報を記録するテータベース(Database)が必要になります。ララベル(Laravel)とデータベースを連携する方法に関しては下記のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;テーブル生成&quot;&gt;テーブル生成&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)は基本的にユーザーに関してマイグレーション(Migration - DBテーブルを生成するためのファイル)とモデル(Model)を提供してます。したがって、下記のコマンドを使ってララベル(Laravel)が提供してる基本ユーザーテーブルを使えます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan migrate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;コントローラー生成&quot;&gt;コントローラー生成&lt;/h2&gt; &lt;p&gt;jwt認証システムを実装するコントローラー(Controller)を下記のようにartisanコマンドで生成します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan make:controller JWTAuthController &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;生成された&lt;code class=&quot;highlighter-rouge&quot;&gt;app/http/Controllers/JWTAuthController.php&lt;/code&gt;を下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Support\Facades\Validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JWTAuthController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|max:100'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255|unique:users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255|confirmed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password_confirmation'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bcrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;修正したコントローラー(Controller)を詳しく見てみます。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|max:100'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255|unique:users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255|confirmed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password_confirmation'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;クライアント(Client, ブラウザ)から来たリクエスト(&lt;code class=&quot;highlighter-rouge&quot;&gt;$request&lt;/code&gt;)を&lt;code class=&quot;highlighter-rouge&quot;&gt;Validator&lt;/code&gt;を使って値を検証します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上でリクエスト(Request)を検証して失敗した場合、失敗メッセージと一緒にリクエスト(Request)に関して応答(Response)をクライアント(Client, ブラウザ)に送ります。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bcrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;クライアント(Client, ブラウザ)から来たリクエスト(Request)の検証に成功した場合、新しユーザーを生成してデータベースに保存します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この時、モデル(Model)に設定した&lt;code class=&quot;highlighter-rouge&quot;&gt;fillable&lt;/code&gt;機能を使ってクライアント(Client, ブラウザ)が送ったリクエスト(Request)中で必要な内容でデーターを入力します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;データを成功的に生成した場合、そのデータと一緒にクライアント(Client, ブラウザ)のリクエスト(Request)に関して応答(Response)を送ります。&lt;/p&gt; &lt;h2 id=&quot;ルーティング連結&quot;&gt;ルーティング連結&lt;/h2&gt; &lt;p&gt;今まで生成したコントローラー(Controller)をルーティング設定をしてURLと連結します。&lt;code class=&quot;highlighter-rouge&quot;&gt;routes/api.php&lt;/code&gt;ファイルを開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ララベル(Laravel)に&lt;code class=&quot;highlighter-rouge&quot;&gt;register&lt;/code&gt;のURLで&lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt;でリクエスト(Request)が来たら&lt;code class=&quot;highlighter-rouge&quot;&gt;JWTAuthController&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;register&lt;/code&gt;である関数をコールするように連携します。&lt;/p&gt; &lt;h2 id=&quot;テスト&quot;&gt;テスト&lt;/h2&gt; &lt;p&gt;私たちはAPIテストをするため&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;を使います。&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;が無い方は下記のリンクを押してインストールしてください。テストする時、Postmanではなく&lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt;を使っても構いません。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Postman: &lt;a href=&quot;https://www.getpostman.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;インストールした&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;を開いて下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;localhost/api/register&lt;/code&gt;のURLに&lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt;リクエスト(Request)を送ります。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signup/register_api_test.png&quot; alt=&quot;postman register api test&quot; /&gt;&lt;/p&gt; &lt;p&gt;データが成功的に登録されたら私たちが設定した形式で応答(Response)が来ることを確認出来ます。失敗したら下記のような画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signup/register_api_test_fail.png&quot; alt=&quot;postman register api test fail&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;今までトークンベース認証システムであるjwt認証システムを使って会員登録部分を開発しました。次のブログではjwt認証システムを使ってログイン手続きを処理する部分について見てみます。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;tymon/jwt-auth: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Postman: &lt;a href=&quot;https://www.getpostman.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 トークンベース認証システムであるjwt(Json Web Token)を使って会員登録機能を実装してみようかと思います。このブログではjwtトークンシステムをtymon/jwt-authミドルウェア(Middleware)を使ってララベル(Laravel)に適用しました。ララベル(Laravel)プロジェクトにjwtミドルウェア(Middleware)であるtymon/jwt-authをインストールや設定については以前のブログを参考してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-signup.jpg"/></entry><entry xml:lang="ja"><title type="html">react-native-animatable</title><link href="https://dev-yakuza.github.io/react-native/react-native-animatable/" rel="alternate" type="text/html" title="react-native-animatable"/><published>2018-12-19T00:00:00+09:00</published><updated>2018-12-19T14:36:13+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-animatable-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-animatable/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;基本的に結構使ってるアニメーションを纏めた&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt;ライブラリを使ってアニメーションを利用する方法について説明します。&lt;/p&gt; &lt;p&gt;このブログではRN(react native)に&lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;が適用されたプロジェクトで説明します。RN(react native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;を適用する方法については以前のブログを確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;ライブラリインストール&quot;&gt;ライブラリインストール&lt;/h2&gt; &lt;p&gt;react-native-animatableライブラリを使うため、下記のコマンドでライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install react-native-animatable &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;基本的な使い方&quot;&gt;基本的な使い方&lt;/h2&gt; &lt;p&gt;下記のようにアニメーションを追加した部分にソースを追加します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;zoomInUp&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Zoom&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Scotty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Animatable.Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;イベントを通じて使い方&quot;&gt;イベントを通じて使い方&lt;/h2&gt; &lt;p&gt;RN(react native)の&lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt;を使ってユーザーイベントが発生した時、アニメーションが実行されるように作れます。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TouchableWithoutFeedback&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bounce&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Animatable.View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/TouchableWithoutFeedback&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onPress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bounce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;styled-components&quot;&gt;styled-components&lt;/h2&gt; &lt;p&gt;styled-componentsで作ったコンポーネント(component)にアニメーションを適用する方法です。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'styled-components/native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyledImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createAnimatableComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StyledImage&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bounceIn&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useNativeDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使えるアニメーション&quot;&gt;使えるアニメーション&lt;/h2&gt; &lt;p&gt;使えるアニメーションは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;の公式レポジトリ(Repository)で例と一緒に確認できます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/oblador/react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記は使えるアニメーションのリストです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;bounce&lt;/li&gt; &lt;li&gt;flash&lt;/li&gt; &lt;li&gt;jello&lt;/li&gt; &lt;li&gt;pulse&lt;/li&gt; &lt;li&gt;rotate&lt;/li&gt; &lt;li&gt;rubberBand&lt;/li&gt; &lt;li&gt;shake&lt;/li&gt; &lt;li&gt;swing&lt;/li&gt; &lt;li&gt;tada&lt;/li&gt; &lt;li&gt;wobble&lt;/li&gt; &lt;li&gt;bounceIn&lt;/li&gt; &lt;li&gt;bounceInDown&lt;/li&gt; &lt;li&gt;bounceInUp&lt;/li&gt; &lt;li&gt;bounceInLeft&lt;/li&gt; &lt;li&gt;bounceInRight&lt;/li&gt; &lt;li&gt;bounceOut&lt;/li&gt; &lt;li&gt;bounceOutDown&lt;/li&gt; &lt;li&gt;bounceOutUp&lt;/li&gt; &lt;li&gt;bounceOutLeft&lt;/li&gt; &lt;li&gt;bounceOutRight&lt;/li&gt; &lt;li&gt;fadeIn&lt;/li&gt; &lt;li&gt;fadeInDown&lt;/li&gt; &lt;li&gt;fadeInDownBig&lt;/li&gt; &lt;li&gt;fadeInUp&lt;/li&gt; &lt;li&gt;fadeInUpBig&lt;/li&gt; &lt;li&gt;fadeInLeft&lt;/li&gt; &lt;li&gt;fadeInLeftBig&lt;/li&gt; &lt;li&gt;fadeInRight&lt;/li&gt; &lt;li&gt;fadeInRightBig&lt;/li&gt; &lt;li&gt;fadeOut&lt;/li&gt; &lt;li&gt;fadeOutDown&lt;/li&gt; &lt;li&gt;fadeOutDownBig&lt;/li&gt; &lt;li&gt;fadeOutUp&lt;/li&gt; &lt;li&gt;fadeOutUpBig&lt;/li&gt; &lt;li&gt;fadeOutLeft&lt;/li&gt; &lt;li&gt;fadeOutLeftBig&lt;/li&gt; &lt;li&gt;fadeOutRight&lt;/li&gt; &lt;li&gt;fadeOutRightBig&lt;/li&gt; &lt;li&gt;flipInX&lt;/li&gt; &lt;li&gt;flipInY&lt;/li&gt; &lt;li&gt;flipOutX&lt;/li&gt; &lt;li&gt;flipOutY&lt;/li&gt; &lt;li&gt;lightSpeedIn&lt;/li&gt; &lt;li&gt;lightSpeedOut&lt;/li&gt; &lt;li&gt;slideInDown&lt;/li&gt; &lt;li&gt;slideInUp&lt;/li&gt; &lt;li&gt;slideInLeft&lt;/li&gt; &lt;li&gt;slideInRight&lt;/li&gt; &lt;li&gt;slideOutDown&lt;/li&gt; &lt;li&gt;slideOutUp&lt;/li&gt; &lt;li&gt;slideOutLeft&lt;/li&gt; &lt;li&gt;slideOutRight&lt;/li&gt; &lt;li&gt;zoomIn&lt;/li&gt; &lt;li&gt;zoomInDown&lt;/li&gt; &lt;li&gt;zoomInUp&lt;/li&gt; &lt;li&gt;zoomInLeft&lt;/li&gt; &lt;li&gt;zoomInRight&lt;/li&gt; &lt;li&gt;zoomOut&lt;/li&gt; &lt;li&gt;zoomOutDown&lt;/li&gt; &lt;li&gt;zoomOutUp&lt;/li&gt; &lt;li&gt;zoomOutLeft&lt;/li&gt; &lt;li&gt;zoomOutRight&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;簡単なアニメーションを早く導入したい時、&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;ライブラリを使うことをおすすめします。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/oblador/react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 基本的に結構使ってるアニメーションを纏めたreact-native-animatableライブラリを使ってアニメーションを利用する方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-animatable.jpg"/></entry><entry xml:lang="ja"><title type="html">Firebase Crashlytics</title><link href="https://dev-yakuza.github.io/react-native/firebase-crashlytics/" rel="alternate" type="text/html" title="Firebase Crashlytics"/><published>2018-12-12T00:00:00+09:00</published><updated>2018-12-14T13:19:15+09:00</updated><id>https://dev-yakuza.github.io/react-native/firebase-crashlytics-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/firebase-crashlytics/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;以前のブログ(&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-app-crash-debugging/&quot; target=&quot;_blank&quot;&gt;iOS App crash 分析&lt;/a&gt;)でアプリ審査の拒絶(reject)にあるApp crash logを分析してみました。しかし、審査中ではなくユーザーが使ってる環境でCrashが発生したら私たちは分からないです。それでファイアベース(Firebase)のCrashlyticsを使ってアプリのCrashを収集して分析してみます。このブログではreact-native-firebaseライブラリを使う予定です。react-native-firebaseライブラリのインストールや設定は以前のブログを確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;Firebase Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;ios設定&quot;&gt;iOS設定&lt;/h2&gt; &lt;p&gt;ファイアベース(Firebase)のCrashlyticsを使うためreact-native-firebaseを設定します。&lt;/p&gt; &lt;h3 id=&quot;必要なライブラリ設定やインストール&quot;&gt;必要なライブラリ設定やインストール&lt;/h3&gt; &lt;p&gt;iOSへ必要なライブラリを下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;Podfile&lt;/code&gt;に追加します。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Firebase/Core'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Firebase/AdMob'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Fabric'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Crashlytics'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;追加したライブラリを下の&lt;code class=&quot;highlighter-rouge&quot;&gt;pod&lt;/code&gt;コマンドでインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# cd ios&lt;/span&gt; pod update &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;crashlytics実行スクリプト追加&quot;&gt;Crashlytics実行スクリプト追加&lt;/h3&gt; &lt;p&gt;ファイアベース(Firebase)のCrashlyticsを使うためCrashlytics実効スクリプトを追加する必要があります。&lt;/p&gt; &lt;p&gt;RN(react native)プロジェクトフォルダにある&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[AppName].xcworkspace&lt;/code&gt;を選択してXcodeを実効します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/execute_xcode.png&quot; alt=&quot;xcode 実効&quot; /&gt;&lt;/p&gt; &lt;p&gt;左にあるファイルエクスプローラと&lt;code class=&quot;highlighter-rouge&quot;&gt;TARGETS&lt;/code&gt;で自分のプロジェクトを選択します。そして上のメニューで&lt;code class=&quot;highlighter-rouge&quot;&gt;Build Phases&lt;/code&gt;を選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/build_phases.png&quot; alt=&quot;xcode build phases&quot; /&gt;&lt;/p&gt; &lt;p&gt;Build Phasesタブで左上の&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;ボタンを押して&lt;code class=&quot;highlighter-rouge&quot;&gt;New Run Script Phase&lt;/code&gt;を選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/new_run_script.png&quot; alt=&quot;new run script menu on build phases&quot; /&gt;&lt;/p&gt; &lt;p&gt;下記のコマンドを&lt;code class=&quot;highlighter-rouge&quot;&gt;Run Scrit&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;Shelll&lt;/code&gt;下にある&lt;code class=&quot;highlighter-rouge&quot;&gt;# Type a script..&lt;/code&gt;に入力します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PODS_ROOT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/Fabric/run&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/add_run_script.png&quot; alt=&quot;add Run Script&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;テスト&quot;&gt;テスト&lt;/h3&gt; &lt;p&gt;今まで設定したファイアベース(Firebase)のCrashlyticsをテストするため下記のコードをテストしたい位置に入れます。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crashlytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この部分は強制的にアプリをCrashさせるコードです。アプリのCrashが発生して終了されたら、ファイアベース(Firebase)のCrashlyticsに報告できるようにアプリをもう一度起動します。&lt;/p&gt; &lt;p&gt;下記のコマンドまたはxcodeを使ってシミュレータを起動します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native run-ios &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;xcodeを使ってシミュレータを起動した方はxcodeを終了してシミュレータでアプリを選択して再起動してください。xcodeが起動中にCrashが発生したらCrashlyticsまで報告が行かなく、xcodeがCrashを処理します。&lt;/p&gt; &lt;p&gt;Crashが発生してアプリをまた起動します。少し時間がたったらファイアベースコンソル(Firebase Console)のCrashlyticsに下のような内容が確認できます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/firebase_crashlytics.png&quot; alt=&quot;Firebase Console Crashlytics&quot; /&gt;&lt;/p&gt; &lt;p&gt;注意：テストコード(&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.crashlytics().crash();&lt;/code&gt;)は確認が終わったら必ず削除してください。&lt;/p&gt; &lt;h2 id=&quot;アンドロイド設定&quot;&gt;アンドロイド設定&lt;/h2&gt; &lt;p&gt;アンドロイド(Android)でファイアベース(Firebase)のCrashlyticsを使うためreact-native-firebaseを設定します。&lt;/p&gt; &lt;h3 id=&quot;必要なライブラリ設定やインストール-1&quot;&gt;必要なライブラリ設定やインストール&lt;/h3&gt; &lt;p&gt;下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt;ファイルを修正します。&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apply plugin: &quot;com.android.application&quot; apply plugin: 'io.fabric' ... dependencies { ... implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') { transitive = true } } ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;android/build.gradle&lt;/code&gt;ファイルを修正します。&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... buildscript { ... dependencies { ... classpath 'com.google.gms:google-services:4.0.1' classpath 'io.fabric.tools:gradle:1.25.4' } ... repositories { ... jcenter() maven { url 'https://maven.fabric.io/public' } } ... } ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/main/java/com/[app name]/MainApplication.java&lt;/code&gt;ファイルを修正します。&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.invertase.firebase.RNFirebasePackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.invertase.firebase.fabric.crashlytics.RNFirebaseCrashlyticsPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReactPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPackages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReactPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RNFirebasePackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RNFirebaseCrashlyticsPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;テスト-1&quot;&gt;テスト&lt;/h3&gt; &lt;p&gt;今まで設定したファイアベース(Firebase)のCrashlyticsをテストするため下記のコードをテストしたい位置へ追加します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crashlytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;アンドロイド(Android)ではエミュレータを起動して&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native run-android&lt;/code&gt;を実効してCrashを 発生させたら赤いエラー画面がでって実際Crashが報告されませんでした。それで私たちはエミュレータへビルドしたファイルをインストールしてテストしました。アンドロイド(Android)ビルドやテストに関しては&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;アンドロイドビルドやテスト&lt;/a&gt;を参考してください。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native bundle &lt;span class=&quot;nt&quot;&gt;--platform&lt;/span&gt; android &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--entry-file&lt;/span&gt; index.js &lt;span class=&quot;nt&quot;&gt;--bundle-output&lt;/span&gt; android/app/src/main/assets/index.android.bundle &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上のコマンドを使ってjavascriptをビルドした後、下記のコマンドでエミュレータにビルドされたファイルをインストールしました。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native run-android &lt;span class=&quot;nt&quot;&gt;--variant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;release &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;それでテストしたら下記のようにアンドロイド(Android)でもCrash報告を見ることができました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/firebase_crashlytics_android.png&quot; alt=&quot;Firebase Console Crashlytics android&quot; /&gt;&lt;/p&gt; &lt;p&gt;注意: テストコード(&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.crashlytics().crash();&lt;/code&gt;)は確認が完了したら必ず削除してください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/docs/crashlytics/get-started&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://firebase.google.com/docs/crashlytics/get-started&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://rnfirebase.io/docs/v5.x.x/crashlytics/ios&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://rnfirebase.io/docs/v5.x.x/crashlytics/ios&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 以前のブログ(iOS App crash 分析)でアプリ審査の拒絶(reject)にあるApp crash logを分析してみました。しかし、審査中ではなくユーザーが使ってる環境でCrashが発生したら私たちは分からないです。それでファイアベース(Firebase)のCrashlyticsを使ってアプリのCrashを収集して分析してみます。このブログではreact-native-firebaseライブラリを使う予定です。react-native-firebaseライブラリのインストールや設定は以前のブログを確認してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/firebase-crashlytics.jpg"/></entry></feed>