<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dev-yakuza.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/" rel="alternate" type="text/html"/><updated>2019-01-06T14:48:40+09:00</updated><id>https://dev-yakuza.github.io/</id><title type="html">Dreams the art through programming</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ja"><title type="html">jwt:ユーザ情報</title><link href="https://dev-yakuza.github.io/laravel/jwt-user-info/" rel="alternate" type="text/html" title="jwt:ユーザ情報"/><published>2018-12-28T00:00:00+09:00</published><updated>2019-01-06T14:44:00+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-user-info-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-user-info/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;jwt認証システムを使ってログインしたユーザの情報を取得する方法についてみてみようかと思います。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)インストールや会員登録、ログインの実装については以前のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwtインストールや設定&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/jwt-siginup&quot; target=&quot;_blank&quot;&gt;jwt:会員登録&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:ログイン&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;リポジトリrepository&quot;&gt;リポジトリ(Repository)&lt;/h2&gt; &lt;p&gt;私たちはjwt認証システムを実装したリポジトリ(Repository)を作りました。下記のリンクを押してリポジトリ(Repository)を確認してみてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;開発環境構成&quot;&gt;開発環境構成&lt;/h2&gt; &lt;p&gt;ここで説明する内容はLaradockとアンシブル(Ansible)を使って作ったララベル(Laravel)開発環境上で開発やテストします。Laradockとアンシブル(Ansible)を使ってララベル(Laravel)開発環境については下のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;コントローラー修正&quot;&gt;コントローラー修正　&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)プロジェクトフォルダの&lt;code class=&quot;highlighter-rouge&quot;&gt;/app/Http/Controllers/JWTAuthController.php&lt;/code&gt;ファイルを開いて下記の内容を追加します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;クライアント(Client, ブラウザ)のリクエスト(Request)でログインしたユーザの情報と取得して応答(Response)する関数です。 의 요청(Request)으로 로그인한 유저의 정보를 얻어 응답(Response)하는 함수입니다.&lt;/p&gt; &lt;h2 id=&quot;ルート修正&quot;&gt;ルート修正&lt;/h2&gt; &lt;p&gt;コントローラー(Controller)に追加した関数をURLと連携するためルート(Route)を修正します。&lt;code class=&quot;highlighter-rouge&quot;&gt;/routes/api.php&lt;/code&gt;ファイルを開いて下の内容を追加します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'message'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auth:api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ユーザ情報を取得するため&lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;ルート(Route)はミドルウェア(Middleware)で&lt;code class=&quot;highlighter-rouge&quot;&gt;auth:api&lt;/code&gt;を使います。このミドルウェア(Middleware)によってログインしたユーザとログインしてないユーザを判断してログインしたユーザだけユーザ情報を取得することが出来ます。ログインしてないユーザは&lt;code class=&quot;highlighter-rouge&quot;&gt;unauthorized&lt;/code&gt;ルート(Route)にリダイレクト(Redirect)をさせて&lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt;を応答(Response)する予定です。&lt;/p&gt; &lt;h2 id=&quot;リダイレクト&quot;&gt;リダイレクト&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)の&lt;code class=&quot;highlighter-rouge&quot;&gt;Auth&lt;/code&gt;ミドルウェア(Middleware)は基本的にリダイレクト(Redirect)機能を持ってます。私たちはここに&lt;code class=&quot;highlighter-rouge&quot;&gt;api&lt;/code&gt;用リダイレクト(Redirect)を設定して&lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt;エラーを応答(Response)するように設定します。&lt;code class=&quot;highlighter-rouge&quot;&gt;app/Http/Middleware/Authenticate.php&lt;/code&gt;ファイルを開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;redirectTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expectsJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api/*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;テスト&quot;&gt;テスト&lt;/h2&gt; &lt;p&gt;今まで開発したユーザ情報取得機能を&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;を使って確認します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# URL&lt;/span&gt; localhost/api/user &lt;span class=&quot;c&quot;&gt;# header&lt;/span&gt; Authorization Bearer jwt_token &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;jwtトークンが有効だったら、下記のようにユーザの情報を取得します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-user-info/get_user_info.png&quot; alt=&quot;get user info&quot; /&gt;&lt;/p&gt; &lt;p&gt;jwtトークンの有効期限が終わったり、ログインしてないユーザが情報をリクエスト(Request)すると下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;401&lt;/code&gt;エラーの応答(Response)を確認することが出来ます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-user-info/fail_to_get_user_info.png&quot; alt=&quot;fail to get user info&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでjwt認証システムを使ってログインしたユーザの情報を取得するapiを開発しました。次のブログではログインした後、apiを使って取得したjwtトークンを更新(Refresh)する機能を追加してみます。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 jwt認証システムを使ってログインしたユーザの情報を取得する方法についてみてみようかと思います。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)インストールや会員登録、ログインの実装については以前のブログを参考してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-user-info.jpg"/></entry><entry xml:lang="ja"><title type="html">jwt:ログイン</title><link href="https://dev-yakuza.github.io/laravel/jwt-signin/" rel="alternate" type="text/html" title="jwt:ログイン"/><published>2018-12-25T00:00:00+09:00</published><updated>2019-01-05T17:30:18+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-signin-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-signin/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;jwt認証システムを使ってログイン機能を実装してみようかと思います。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)インストールや会員登録機能の実装に関しては以前のブログを確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwtインストールや設定&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/jwt-siginup&quot; target=&quot;_blank&quot;&gt;jwt:会員登録&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;リポジトリrepository&quot;&gt;リポジトリ(Repository)&lt;/h2&gt; &lt;p&gt;私たちはjwt認証システムを実装したリポジトリ(Repository)を作りました。下記のリンクを押してリポジトリ(Repository)を確認してみてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;開発環境構成&quot;&gt;開発環境構成&lt;/h2&gt; &lt;p&gt;ここで説明する内容はLaradockとアンシブル(Ansible)を使って作ったララベル(Laravel)開発環境上で開発やテストします。Laradockとアンシブル(Ansible)を使ってララベル(Laravel)開発環境については下のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;モデル修正&quot;&gt;モデル修正&lt;/h2&gt; &lt;p&gt;jwt認証システムの認証に使わられるモデル(Model)を下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Foundation\Auth\User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Authenticatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tymon\JWTAuth\Contracts\JWTSubject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Authenticatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JWTSubject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ララベル(Laravel)の認証機能を使うためにモデル(Model)を&lt;code class=&quot;highlighter-rouge&quot;&gt;Authenticatable&lt;/code&gt;から継承しました。 また、jwtミドルウェア(Middleware)のインタフェースを&lt;code class=&quot;highlighter-rouge&quot;&gt;JWTSubject&lt;/code&gt;を通じて実装します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上の関数はjwtミドルウェア(Middleware)のインタフェースを実装した部分です。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この部分はjwtのトークンを取得するための関数です。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この関数を説明するためjwtトークンを少し説明します。jwtは大きく&lt;code class=&quot;highlighter-rouge&quot;&gt;ヘッダー(header).内容(payload).署名(signature)&lt;/code&gt;で構成されています。その中&lt;code class=&quot;highlighter-rouge&quot;&gt;内容(Payload)&lt;/code&gt;に使われる情報の一部を&lt;code class=&quot;highlighter-rouge&quot;&gt;Claim&lt;/code&gt;と呼ばれ、&lt;code class=&quot;highlighter-rouge&quot;&gt;key-value&lt;/code&gt;形式で構成されています。jwtは基本的に&lt;code class=&quot;highlighter-rouge&quot;&gt;内容(Payload)&lt;/code&gt;に下記のような情報(&lt;code class=&quot;highlighter-rouge&quot;&gt;Claim&lt;/code&gt;)を持ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;iss(Issuer): トークン発行者&lt;/li&gt; &lt;li&gt;sub(Subject): トークンのタイトル(デフォルトはuser id)&lt;/li&gt; &lt;li&gt;iat(Issued At): トークン発行日(unix timestamp)&lt;/li&gt; &lt;li&gt;exp(Expiry): トークンの有効期限&lt;/li&gt; &lt;li&gt;nbf(Not Before): トークンを使えるスタート時間&lt;/li&gt; &lt;li&gt;jti(JWT Id): JWTのユニーク識別子。 主に重複的な処理を防止するために使う。&lt;/li&gt; &lt;li&gt;prv: ユーザープロバイダクラス(User Provider class)のハッシュ。複数のguardを使うために&lt;code class=&quot;highlighter-rouge&quot;&gt;tymondesigns/jwt-auth&lt;/code&gt;に追加された特別なコード。(&lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/pull/1167&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;詳しく説明はこちらへ&lt;/a&gt;)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;この情報以外、追加的にjwtトークンに情報を追加したい時、&lt;code class=&quot;highlighter-rouge&quot;&gt;getJWTCustomClaims()&lt;/code&gt;関数に戻り値(Return value)を修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getJWTCustomClaims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'firstname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lastname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lastname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;guard修正&quot;&gt;guard修正&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)の認証を担当してる&lt;code class=&quot;highlighter-rouge&quot;&gt;config/auth.php&lt;/code&gt;ファイルの&lt;code class=&quot;highlighter-rouge&quot;&gt;guard&lt;/code&gt;を下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;'guards'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'web'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'session'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'provider'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'jwt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'provider'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;コントローラー修正&quot;&gt;コントローラー修正&lt;/h2&gt; &lt;p&gt;以前のブログで生成した&lt;code class=&quot;highlighter-rouge&quot;&gt;app/Http/Controllers/JWTAuthController.php&lt;/code&gt;コントローラーにログイン関数を追加します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;respondWithToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'token_type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bearer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expires_in'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;まず、リクエスト(Request)の入力データを確認します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そしてユーザの&lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;でログインさせます。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Unauthorized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ログインに成功したらリクエスト(Request)に関してjwtトークンをリターン(Response)します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'token_type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bearer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expires_in'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;guard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ルート連結&quot;&gt;ルート連結&lt;/h2&gt; &lt;p&gt;コントローラー(Controller)に生成したログイン関数を&lt;code class=&quot;highlighter-rouge&quot;&gt;routes/api.php&lt;/code&gt;でURLと連携する必要があります。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;テスト&quot;&gt;テスト&lt;/h2&gt; &lt;p&gt;今まで開発したjwt認証システムのログイン機能を&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;を使って確認します。&lt;code class=&quot;highlighter-rouge&quot;&gt;localhost/api/login&lt;/code&gt;のURLに&lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;を入力して&lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt;でリクエスト(Request)を送ったら下記のような結果を確認することができます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signin/login.png&quot; alt=&quot;postman login api test&quot; /&gt;&lt;/p&gt; &lt;p&gt;応答(Response)で貰った&lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt;キーを&lt;a href=&quot;https://jwt.io/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://jwt.io/&lt;/a&gt;で確認すると下記のような結果を見ることができます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signin/check_access_key.png&quot; alt=&quot;check access_key&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでjwt認証システムを利用してログイン機能を実装して見ました。次のブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;access token&lt;/code&gt;を使ってユーザの情報を取得する方法に関して見てみます。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;JSON Web Token (JWT): &lt;a href=&quot;https://tools.ietf.org/html/rfc7519#section-4.1&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://tools.ietf.org/html/rfc7519#section-4.1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;jwt-auth prv: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/issues/1344&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth/issues/1344&lt;/a&gt;&lt;/li&gt; &lt;li&gt;jwt-auth Creating Tokens: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth/wiki/Creating-Tokens&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth/wiki/Creating-Tokens&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 jwt認証システムを使ってログイン機能を実装してみようかと思います。このブログはシリーズで構成されています。jwt実装のためミドルウェア(Middleware)インストールや会員登録機能の実装に関しては以前のブログを確認してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-signin.png"/></entry><entry xml:lang="ja"><title type="html">jwt:会員登録</title><link href="https://dev-yakuza.github.io/laravel/jwt-signup/" rel="alternate" type="text/html" title="jwt:会員登録"/><published>2018-12-22T00:00:00+09:00</published><updated>2019-01-05T15:22:47+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-siginup-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt-signup/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;トークンベース認証システムであるjwt(Json Web Token)を使って会員登録機能を実装してみようかと思います。このブログではjwtトークンシステムを&lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;tymon/jwt-auth&lt;/a&gt;ミドルウェア(Middleware)を使ってララベル(Laravel)に適用しました。ララベル(Laravel)プロジェクトにjwtミドルウェア(Middleware)である&lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;をインストールや設定については以前のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwtインストールや設定&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;リポジトリrepository&quot;&gt;リポジトリ(Repository)&lt;/h2&gt; &lt;p&gt;私たちはjwt認証システムを実装したリポジトリ(Repository)を作りました。下記のリンクを押してリポジトリ(Repository)を確認してみてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;開発環境構成&quot;&gt;開発環境構成&lt;/h2&gt; &lt;p&gt;ここで説明する内容はLaradockとアンシブル(Ansible)を使って作ったララベル(Laravel)開発環境上で開発やテストします。Laradockとアンシブル(Ansible)を使ってララベル(Laravel)開発環境については下のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;データベース連結&quot;&gt;データベース連結&lt;/h2&gt; &lt;p&gt;今から実装する会員登録機能は会員の情報を記録するテータベース(Database)が必要になります。ララベル(Laravel)とデータベースを連携する方法に関しては下記のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;テーブル生成&quot;&gt;テーブル生成&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)は基本的にユーザーに関してマイグレーション(Migration - DBテーブルを生成するためのファイル)とモデル(Model)を提供してます。したがって、下記のコマンドを使ってララベル(Laravel)が提供してる基本ユーザーテーブルを使えます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan migrate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;コントローラー生成&quot;&gt;コントローラー生成&lt;/h2&gt; &lt;p&gt;jwt認証システムを実装するコントローラー(Controller)を下記のようにartisanコマンドで生成します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant up&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan make:controller JWTAuthController &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;生成された&lt;code class=&quot;highlighter-rouge&quot;&gt;app/http/Controllers/JWTAuthController.php&lt;/code&gt;を下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Support\Facades\Validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JWTAuthController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|max:100'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255|unique:users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255|confirmed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password_confirmation'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bcrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;修正したコントローラー(Controller)を詳しく見てみます。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|max:100'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|email|max:255|unique:users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255|confirmed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password_confirmation'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|string|min:8|max:255'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;クライアント(Client, ブラウザ)から来たリクエスト(&lt;code class=&quot;highlighter-rouge&quot;&gt;$request&lt;/code&gt;)を&lt;code class=&quot;highlighter-rouge&quot;&gt;Validator&lt;/code&gt;を使って値を検証します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上でリクエスト(Request)を検証して失敗した場合、失敗メッセージと一緒にリクエスト(Request)に関して応答(Response)をクライアント(Client, ブラウザ)に送ります。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bcrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;クライアント(Client, ブラウザ)から来たリクエスト(Request)の検証に成功した場合、新しユーザーを生成してデータベースに保存します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この時、モデル(Model)に設定した&lt;code class=&quot;highlighter-rouge&quot;&gt;fillable&lt;/code&gt;機能を使ってクライアント(Client, ブラウザ)が送ったリクエスト(Request)中で必要な内容でデーターを入力します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;データを成功的に生成した場合、そのデータと一緒にクライアント(Client, ブラウザ)のリクエスト(Request)に関して応答(Response)を送ります。&lt;/p&gt; &lt;h2 id=&quot;ルーティング連結&quot;&gt;ルーティング連結&lt;/h2&gt; &lt;p&gt;今まで生成したコントローラー(Controller)をルーティング設定をしてURLと連結します。&lt;code class=&quot;highlighter-rouge&quot;&gt;routes/api.php&lt;/code&gt;ファイルを開いて下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JWTAuthController@register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'api.jwt.register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ララベル(Laravel)に&lt;code class=&quot;highlighter-rouge&quot;&gt;register&lt;/code&gt;のURLで&lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt;でリクエスト(Request)が来たら&lt;code class=&quot;highlighter-rouge&quot;&gt;JWTAuthController&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;register&lt;/code&gt;である関数をコールするように連携します。&lt;/p&gt; &lt;h2 id=&quot;テスト&quot;&gt;テスト&lt;/h2&gt; &lt;p&gt;私たちはAPIテストをするため&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;を使います。&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;が無い方は下記のリンクを押してインストールしてください。テストする時、Postmanではなく&lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt;を使っても構いません。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Postman: &lt;a href=&quot;https://www.getpostman.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;インストールした&lt;code class=&quot;highlighter-rouge&quot;&gt;Postman&lt;/code&gt;を開いて下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;localhost/api/register&lt;/code&gt;のURLに&lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt;リクエスト(Request)を送ります。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signup/register_api_test.png&quot; alt=&quot;postman register api test&quot; /&gt;&lt;/p&gt; &lt;p&gt;データが成功的に登録されたら私たちが設定した形式で応答(Response)が来ることを確認出来ます。失敗したら下記のような画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/laravel/jwt-signup/register_api_test_fail.png&quot; alt=&quot;postman register api test fail&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;今までトークンベース認証システムであるjwt認証システムを使って会員登録部分を開発しました。次のブログではjwt認証システムを使ってログイン手続きを処理する部分について見てみます。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;tymon/jwt-auth: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Postman: &lt;a href=&quot;https://www.getpostman.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 トークンベース認証システムであるjwt(Json Web Token)を使って会員登録機能を実装してみようかと思います。このブログではjwtトークンシステムをtymon/jwt-authミドルウェア(Middleware)を使ってララベル(Laravel)に適用しました。ララベル(Laravel)プロジェクトにjwtミドルウェア(Middleware)であるtymon/jwt-authをインストールや設定については以前のブログを参考してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt-signup.jpg"/></entry><entry xml:lang="ja"><title type="html">react-native-animatable</title><link href="https://dev-yakuza.github.io/react-native/react-native-animatable/" rel="alternate" type="text/html" title="react-native-animatable"/><published>2018-12-19T00:00:00+09:00</published><updated>2018-12-19T14:36:13+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-animatable-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-animatable/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;基本的に結構使ってるアニメーションを纏めた&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-animatable&lt;/a&gt;ライブラリを使ってアニメーションを利用する方法について説明します。&lt;/p&gt; &lt;p&gt;このブログではRN(react native)に&lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;が適用されたプロジェクトで説明します。RN(react native)で&lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;を適用する方法については以前のブログを確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;ライブラリインストール&quot;&gt;ライブラリインストール&lt;/h2&gt; &lt;p&gt;react-native-animatableライブラリを使うため、下記のコマンドでライブラリをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install react-native-animatable &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;基本的な使い方&quot;&gt;基本的な使い方&lt;/h2&gt; &lt;p&gt;下記のようにアニメーションを追加した部分にソースを追加します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;zoomInUp&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Zoom&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Scotty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Animatable.Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;イベントを通じて使い方&quot;&gt;イベントを通じて使い方&lt;/h2&gt; &lt;p&gt;RN(react native)の&lt;code class=&quot;highlighter-rouge&quot;&gt;ref&lt;/code&gt;を使ってユーザーイベントが発生した時、アニメーションが実行されるように作れます。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TouchableWithoutFeedback&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onPress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onPress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bounce&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Animatable.View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/TouchableWithoutFeedback&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_onPress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AnimationRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bounce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;styled-components&quot;&gt;styled-components&lt;/h2&gt; &lt;p&gt;styled-componentsで作ったコンポーネント(component)にアニメーションを適用する方法です。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'styled-components/native'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-native-animatable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyledImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createAnimatableComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StyledImage&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bounceIn&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useNativeDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;使えるアニメーション&quot;&gt;使えるアニメーション&lt;/h2&gt; &lt;p&gt;使えるアニメーションは&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;の公式レポジトリ(Repository)で例と一緒に確認できます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/oblador/react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記は使えるアニメーションのリストです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;bounce&lt;/li&gt; &lt;li&gt;flash&lt;/li&gt; &lt;li&gt;jello&lt;/li&gt; &lt;li&gt;pulse&lt;/li&gt; &lt;li&gt;rotate&lt;/li&gt; &lt;li&gt;rubberBand&lt;/li&gt; &lt;li&gt;shake&lt;/li&gt; &lt;li&gt;swing&lt;/li&gt; &lt;li&gt;tada&lt;/li&gt; &lt;li&gt;wobble&lt;/li&gt; &lt;li&gt;bounceIn&lt;/li&gt; &lt;li&gt;bounceInDown&lt;/li&gt; &lt;li&gt;bounceInUp&lt;/li&gt; &lt;li&gt;bounceInLeft&lt;/li&gt; &lt;li&gt;bounceInRight&lt;/li&gt; &lt;li&gt;bounceOut&lt;/li&gt; &lt;li&gt;bounceOutDown&lt;/li&gt; &lt;li&gt;bounceOutUp&lt;/li&gt; &lt;li&gt;bounceOutLeft&lt;/li&gt; &lt;li&gt;bounceOutRight&lt;/li&gt; &lt;li&gt;fadeIn&lt;/li&gt; &lt;li&gt;fadeInDown&lt;/li&gt; &lt;li&gt;fadeInDownBig&lt;/li&gt; &lt;li&gt;fadeInUp&lt;/li&gt; &lt;li&gt;fadeInUpBig&lt;/li&gt; &lt;li&gt;fadeInLeft&lt;/li&gt; &lt;li&gt;fadeInLeftBig&lt;/li&gt; &lt;li&gt;fadeInRight&lt;/li&gt; &lt;li&gt;fadeInRightBig&lt;/li&gt; &lt;li&gt;fadeOut&lt;/li&gt; &lt;li&gt;fadeOutDown&lt;/li&gt; &lt;li&gt;fadeOutDownBig&lt;/li&gt; &lt;li&gt;fadeOutUp&lt;/li&gt; &lt;li&gt;fadeOutUpBig&lt;/li&gt; &lt;li&gt;fadeOutLeft&lt;/li&gt; &lt;li&gt;fadeOutLeftBig&lt;/li&gt; &lt;li&gt;fadeOutRight&lt;/li&gt; &lt;li&gt;fadeOutRightBig&lt;/li&gt; &lt;li&gt;flipInX&lt;/li&gt; &lt;li&gt;flipInY&lt;/li&gt; &lt;li&gt;flipOutX&lt;/li&gt; &lt;li&gt;flipOutY&lt;/li&gt; &lt;li&gt;lightSpeedIn&lt;/li&gt; &lt;li&gt;lightSpeedOut&lt;/li&gt; &lt;li&gt;slideInDown&lt;/li&gt; &lt;li&gt;slideInUp&lt;/li&gt; &lt;li&gt;slideInLeft&lt;/li&gt; &lt;li&gt;slideInRight&lt;/li&gt; &lt;li&gt;slideOutDown&lt;/li&gt; &lt;li&gt;slideOutUp&lt;/li&gt; &lt;li&gt;slideOutLeft&lt;/li&gt; &lt;li&gt;slideOutRight&lt;/li&gt; &lt;li&gt;zoomIn&lt;/li&gt; &lt;li&gt;zoomInDown&lt;/li&gt; &lt;li&gt;zoomInUp&lt;/li&gt; &lt;li&gt;zoomInLeft&lt;/li&gt; &lt;li&gt;zoomInRight&lt;/li&gt; &lt;li&gt;zoomOut&lt;/li&gt; &lt;li&gt;zoomOutDown&lt;/li&gt; &lt;li&gt;zoomOutUp&lt;/li&gt; &lt;li&gt;zoomOutLeft&lt;/li&gt; &lt;li&gt;zoomOutRight&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;簡単なアニメーションを早く導入したい時、&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native-animatable&lt;/code&gt;ライブラリを使うことをおすすめします。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/oblador/react-native-animatable&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/oblador/react-native-animatable&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 基本的に結構使ってるアニメーションを纏めたreact-native-animatableライブラリを使ってアニメーションを利用する方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/react-native-animatable.jpg"/></entry><entry xml:lang="ja"><title type="html">Firebase Crashlytics</title><link href="https://dev-yakuza.github.io/react-native/firebase-crashlytics/" rel="alternate" type="text/html" title="Firebase Crashlytics"/><published>2018-12-12T00:00:00+09:00</published><updated>2018-12-14T13:19:15+09:00</updated><id>https://dev-yakuza.github.io/react-native/firebase-crashlytics-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/firebase-crashlytics/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;以前のブログ(&lt;a href=&quot;https://dev-yakuza.github.io/react-native/ios-app-crash-debugging/&quot; target=&quot;_blank&quot;&gt;iOS App crash 分析&lt;/a&gt;)でアプリ審査の拒絶(reject)にあるApp crash logを分析してみました。しかし、審査中ではなくユーザーが使ってる環境でCrashが発生したら私たちは分からないです。それでファイアベース(Firebase)のCrashlyticsを使ってアプリのCrashを収集して分析してみます。このブログではreact-native-firebaseライブラリを使う予定です。react-native-firebaseライブラリのインストールや設定は以前のブログを確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;Firebase Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;ios設定&quot;&gt;iOS設定&lt;/h2&gt; &lt;p&gt;ファイアベース(Firebase)のCrashlyticsを使うためreact-native-firebaseを設定します。&lt;/p&gt; &lt;h3 id=&quot;必要なライブラリ設定やインストール&quot;&gt;必要なライブラリ設定やインストール&lt;/h3&gt; &lt;p&gt;iOSへ必要なライブラリを下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;Podfile&lt;/code&gt;に追加します。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Firebase/Core'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Firebase/AdMob'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Fabric'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Crashlytics'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;追加したライブラリを下の&lt;code class=&quot;highlighter-rouge&quot;&gt;pod&lt;/code&gt;コマンドでインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# cd ios&lt;/span&gt; pod update &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;crashlytics実行スクリプト追加&quot;&gt;Crashlytics実行スクリプト追加&lt;/h3&gt; &lt;p&gt;ファイアベース(Firebase)のCrashlyticsを使うためCrashlytics実効スクリプトを追加する必要があります。&lt;/p&gt; &lt;p&gt;RN(react native)プロジェクトフォルダにある&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/[AppName].xcworkspace&lt;/code&gt;を選択してXcodeを実効します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/execute_xcode.png&quot; alt=&quot;xcode 実効&quot; /&gt;&lt;/p&gt; &lt;p&gt;左にあるファイルエクスプローラと&lt;code class=&quot;highlighter-rouge&quot;&gt;TARGETS&lt;/code&gt;で自分のプロジェクトを選択します。そして上のメニューで&lt;code class=&quot;highlighter-rouge&quot;&gt;Build Phases&lt;/code&gt;を選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/build_phases.png&quot; alt=&quot;xcode build phases&quot; /&gt;&lt;/p&gt; &lt;p&gt;Build Phasesタブで左上の&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;ボタンを押して&lt;code class=&quot;highlighter-rouge&quot;&gt;New Run Script Phase&lt;/code&gt;を選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/new_run_script.png&quot; alt=&quot;new run script menu on build phases&quot; /&gt;&lt;/p&gt; &lt;p&gt;下記のコマンドを&lt;code class=&quot;highlighter-rouge&quot;&gt;Run Scrit&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;Shelll&lt;/code&gt;下にある&lt;code class=&quot;highlighter-rouge&quot;&gt;# Type a script..&lt;/code&gt;に入力します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PODS_ROOT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/Fabric/run&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/add_run_script.png&quot; alt=&quot;add Run Script&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;テスト&quot;&gt;テスト&lt;/h3&gt; &lt;p&gt;今まで設定したファイアベース(Firebase)のCrashlyticsをテストするため下記のコードをテストしたい位置に入れます。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crashlytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この部分は強制的にアプリをCrashさせるコードです。アプリのCrashが発生して終了されたら、ファイアベース(Firebase)のCrashlyticsに報告できるようにアプリをもう一度起動します。&lt;/p&gt; &lt;p&gt;下記のコマンドまたはxcodeを使ってシミュレータを起動します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native run-ios &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;xcodeを使ってシミュレータを起動した方はxcodeを終了してシミュレータでアプリを選択して再起動してください。xcodeが起動中にCrashが発生したらCrashlyticsまで報告が行かなく、xcodeがCrashを処理します。&lt;/p&gt; &lt;p&gt;Crashが発生してアプリをまた起動します。少し時間がたったらファイアベースコンソル(Firebase Console)のCrashlyticsに下のような内容が確認できます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/firebase_crashlytics.png&quot; alt=&quot;Firebase Console Crashlytics&quot; /&gt;&lt;/p&gt; &lt;p&gt;注意：テストコード(&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.crashlytics().crash();&lt;/code&gt;)は確認が終わったら必ず削除してください。&lt;/p&gt; &lt;h2 id=&quot;アンドロイド設定&quot;&gt;アンドロイド設定&lt;/h2&gt; &lt;p&gt;アンドロイド(Android)でファイアベース(Firebase)のCrashlyticsを使うためreact-native-firebaseを設定します。&lt;/p&gt; &lt;h3 id=&quot;必要なライブラリ設定やインストール-1&quot;&gt;必要なライブラリ設定やインストール&lt;/h3&gt; &lt;p&gt;下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt;ファイルを修正します。&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apply plugin: &quot;com.android.application&quot; apply plugin: 'io.fabric' ... dependencies { ... implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') { transitive = true } } ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;android/build.gradle&lt;/code&gt;ファイルを修正します。&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... buildscript { ... dependencies { ... classpath 'com.google.gms:google-services:4.0.1' classpath 'io.fabric.tools:gradle:1.25.4' } ... repositories { ... jcenter() maven { url 'https://maven.fabric.io/public' } } ... } ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/main/java/com/[app name]/MainApplication.java&lt;/code&gt;ファイルを修正します。&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.invertase.firebase.RNFirebasePackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.invertase.firebase.fabric.crashlytics.RNFirebaseCrashlyticsPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReactPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPackages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReactPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RNFirebasePackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RNFirebaseCrashlyticsPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;テスト-1&quot;&gt;テスト&lt;/h3&gt; &lt;p&gt;今まで設定したファイアベース(Firebase)のCrashlyticsをテストするため下記のコードをテストしたい位置へ追加します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crashlytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;アンドロイド(Android)ではエミュレータを起動して&lt;code class=&quot;highlighter-rouge&quot;&gt;react-native run-android&lt;/code&gt;を実効してCrashを 発生させたら赤いエラー画面がでって実際Crashが報告されませんでした。それで私たちはエミュレータへビルドしたファイルをインストールしてテストしました。アンドロイド(Android)ビルドやテストに関しては&lt;a href=&quot;https://dev-yakuza.github.io/react-native/android-running-on-device/&quot; target=&quot;_blank&quot;&gt;アンドロイドビルドやテスト&lt;/a&gt;を参考してください。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native bundle &lt;span class=&quot;nt&quot;&gt;--platform&lt;/span&gt; android &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--entry-file&lt;/span&gt; index.js &lt;span class=&quot;nt&quot;&gt;--bundle-output&lt;/span&gt; android/app/src/main/assets/index.android.bundle &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上のコマンドを使ってjavascriptをビルドした後、下記のコマンドでエミュレータにビルドされたファイルをインストールしました。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native run-android &lt;span class=&quot;nt&quot;&gt;--variant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;release &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;それでテストしたら下記のようにアンドロイド(Android)でもCrash報告を見ることができました。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/firebase-crashlytics/firebase_crashlytics_android.png&quot; alt=&quot;Firebase Console Crashlytics android&quot; /&gt;&lt;/p&gt; &lt;p&gt;注意: テストコード(&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.crashlytics().crash();&lt;/code&gt;)は確認が完了したら必ず削除してください。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/docs/crashlytics/get-started&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://firebase.google.com/docs/crashlytics/get-started&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://rnfirebase.io/docs/v5.x.x/crashlytics/ios&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://rnfirebase.io/docs/v5.x.x/crashlytics/ios&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 以前のブログ(iOS App crash 分析)でアプリ審査の拒絶(reject)にあるApp crash logを分析してみました。しかし、審査中ではなくユーザーが使ってる環境でCrashが発生したら私たちは分からないです。それでファイアベース(Firebase)のCrashlyticsを使ってアプリのCrashを収集して分析してみます。このブログではreact-native-firebaseライブラリを使う予定です。react-native-firebaseライブラリのインストールや設定は以前のブログを確認してください。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/firebase-crashlytics.jpg"/></entry><entry xml:lang="ja"><title type="html">iOS App crash分析</title><link href="https://dev-yakuza.github.io/react-native/ios-app-crash-debugging/" rel="alternate" type="text/html" title="iOS App crash分析"/><published>2018-12-11T00:00:00+09:00</published><updated>2018-12-13T17:51:02+09:00</updated><id>https://dev-yakuza.github.io/react-native/ios-app-crash-debugging-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/ios-app-crash-debugging/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;アプリ審査のためアプリを提出したがApp crash理由で拒絶(reject)されました。親切にも拒絶(reject)の理由とcrashログ(log)ファイルを一緒に送ってくらました。こんな感じで貰ったcrashログ(log)ファイルを分析してどこの部分でエラーが発生したかを探す方法に関して説明します。&lt;/p&gt; &lt;h2 id=&quot;アプリ審査拒絶&quot;&gt;アプリ審査拒絶&lt;/h2&gt; &lt;p&gt;アップルのアプリ審査が拒絶(reject)されたらメールを送ってくれます。メールを貰ったらアプリストアコネクト(Appstore connect)に移動してアプリ審査拒絶(reject)の理由を確認します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-app-crash-debugging/app_reject.png&quot; alt=&quot;アプリ審査拒絶&quot; /&gt;&lt;/p&gt; &lt;p&gt;特にアプリ審査拒絶(reject)理由がApp crashだったら下記のようにApp crash logも一緒に送ってくれます。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Guideline 2.1 - Performance - App Completeness We were unable to review your app as it crashed on launch. We have attached detailed crash logs to help troubleshoot this issue. Next Steps To resolve this issue, please revise your app and test it on a device to ensure it will launch without crashing. Resources For information on how to symbolicate and read a crash log, please review Tech Note TN2151 Understanding and Analyzing Application Crash Reports. crashlog-CDDAD5F8-F56A-470D-94BA-55149F76E390.txt crashlog-D75B7641-0AF7-4DF4-8702-2E6665172390.txt crashlog-3A0F07E3-874D-462F-9FFF-BCE88C98D224.txt &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;アプリ審査拒絶(reject)内容にある&lt;a href=&quot;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Tech Note TN2151 Understanding and Analyzing Application Crash Reports&lt;/a&gt;リンクを確認したら、App crash logを確認する方法について詳しく説明が出ております。&lt;/p&gt; &lt;p&gt;まず、送ってくれたログ(log)ファイルをダウンロードします。&lt;/p&gt; &lt;h2 id=&quot;シンボルファイルダウンロード&quot;&gt;シンボルファイルダウンロード&lt;/h2&gt; &lt;p&gt;App crash logを分析するためにはアプリのシンボルファイル(&lt;code class=&quot;highlighter-rouge&quot;&gt;dSYM&lt;/code&gt;)が必要です。アプリストアコネクト(Appstore connect)の&lt;code class=&quot;highlighter-rouge&quot;&gt;Activity&lt;/code&gt;タブに移動します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-app-crash-debugging/appstoreconnect_activity.png&quot; alt=&quot;アプリストアコネクトActivityタブ&quot; /&gt;&lt;/p&gt; &lt;p&gt;左にある &lt;code class=&quot;highlighter-rouge&quot;&gt;`All Builds&lt;/code&gt;`を選択してアプリ審査に提出したビルドのバージョンを選択します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/react-native/ios-app-crash-debugging/appstoreconnect_download_symbol.png&quot; alt=&quot;シンボルファイルダウンロード&quot; /&gt;&lt;/p&gt; &lt;p&gt;右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;Download dSYM&lt;/code&gt;リンクを押してシンボルファイルをダウンロードして圧縮を解除します。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;7ED9CAAD-F7F7-31E6-8480-2D358FBEF9C7.dSYM E3430BAD-2EB8-3B8D-8E04-4BB66E2A4E58.dSYM &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ログファイル分析&quot;&gt;ログファイル分析&lt;/h2&gt; &lt;p&gt;今からアップルが送ったApp crash logファイルを分析してみます。全てのログ(log)ファイルは下記のようなヘッダー(header)を持ってます。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Incident Identifier: 3A0F07E3-874D-462F-9FFF-BCE88C98D224 CrashReporter Key: 28b54437587b1ef1e81059e98250b166b0d343c8 Hardware Model: xxx Process: blaboo [2012] Path: /private/var/containers/Bundle/Application/488E158A-64B5-439E-82BC-F702CF26E5DA/blaboo.app/blaboo Identifier: io.github.dev-yakuza.blaboo Version: 1 (1.0.6) AppStoreTools: 10B63 Code Type: ARM-64 (Native) Role: Non UI Parent Process: launchd [1] Coalition: io.github.dev-yakuza.blaboo [661] Date/Time: 2018-12-10 17:20:22.0217 -0800 Launch Time: 2018-12-10 17:20:01.9857 -0800 OS Version: iPhone OS 12.1 (16B92) Baseband Version: 7.21.00 Report Version: 104 Exception Type: EXC_CRASH (SIGKILL) Exception Codes: 0x0000000000000000, 0x0000000000000000 Exception Note: EXC_CORPSE_NOTIFY Termination Reason: Namespace SPRINGBOARD, Code 0x8badf00d Termination Description: SPRINGBOARD, scene-create watchdog transgression: io.github.dev-yakuza.blaboo exhausted real (wall clock) time allowance of 19.94 seconds | ProcessVisibility: Foreground | ProcessState: Running | WatchdogEvent: scene-create | WatchdogVisibility: Foreground | WatchdogCPUStatistics: ( | &quot;Elapsed total CPU time (seconds): 24.600 (user 24.600, system 0.000), 41% CPU&quot;, | &quot;Elapsed application CPU time (seconds): 0.237, 0% CPU&quot; | ) Triggered by Thread: 0 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ヘッダー(header)にある&lt;code class=&quot;highlighter-rouge&quot;&gt;Exception Type&lt;/code&gt;を&lt;a href=&quot;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&lt;/a&gt;サイトで確認することで大まかな情報を取得できます。&lt;/p&gt; &lt;p&gt;例えば、&lt;code class=&quot;highlighter-rouge&quot;&gt;Bad Memory Access [EXC_BAD_ACCESS // SIGSEGV // SIGBUS]&lt;/code&gt;の場合プロセスが有効してないメモリへアクセスしたとかread-onlyメモリに書く動作をした時発生します。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Exception Type: EXC_CRASH (SIGKILL) Exception Codes: 0x0000000000000000, 0x0000000000000000 Exception Note: EXC_CORPSE_NOTIFY Termination Reason: Namespace SPRINGBOARD, Code 0x8badf00d Termination Description: SPRINGBOARD, scene-create watchdog transgression: io.github.dev-yakuza.blaboo exhausted real (wall clock) time allowance of 19.94 seconds | ProcessVisibility: Foreground | ProcessState: Running | WatchdogEvent: scene-create | WatchdogVisibility: Foreground | WatchdogCPUStatistics: ( | &quot;Elapsed total CPU time (seconds): 24.600 (user 24.600, system 0.000), 41% CPU&quot;, | &quot;Elapsed application CPU time (seconds): 0.237, 0% CPU&quot; | ) Triggered by Thread: 0 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;私たちのアプリは&lt;code class=&quot;highlighter-rouge&quot;&gt;EXC_CRASH (SIGKILL)&lt;/code&gt;でした。このタイプは&lt;code class=&quot;highlighter-rouge&quot;&gt;Termination Reason&lt;/code&gt;まで確認しないと分からないです。&lt;code class=&quot;highlighter-rouge&quot;&gt;Termination Reason&lt;/code&gt;コードが&lt;code class=&quot;highlighter-rouge&quot;&gt;0x8badf00d&lt;/code&gt;です。上にあるリンクで確認すると&lt;code class=&quot;highlighter-rouge&quot;&gt;The exception code 0x8badf00d indicates that an application has been terminated by iOS because a watchdog timeout occurred.&lt;/code&gt;でタイムアウトされてエラーが発生したと思うられます。&lt;/p&gt; &lt;p&gt;それじゃ、どこでCrashエラーが発生したか探すためターミナル(terminal)を使ってシンボルファイル(dSYM)が存在しているフォルダに移動します。 그럼 어디에서 crash가 발생했는지 찾아보기 위해 터미널(terminal)을 이용해서 심볼 파일(dSYM)이 존재하는 폴더로 이동합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# ダウンロードしたファイルファ存在するフォルダに移動します。&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Desktop/crash/ &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして、アップルが送ったApp crash logファイルを開いて一番上にある内容を確認します。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{ ... &quot;slice_uuid&quot;:&quot;7ed9caad-f7f7-31e6-8480-2d358fbef9c7&quot;, ... } ... Thread 0 name: Dispatch queue: com.apple.main-thread Thread 0 Crashed: ... 10 Security 0x00000001e938b6d8 0x1e9314000 + 489176 11 Security 0x00000001e938944c 0x1e9314000 + 480332 12 Security 0x00000001e938bcd0 0x1e9314000 + 490704 13 blaboo 0x0000000100969608 0x10093c000 + 185864 14 blaboo 0x000000010096ddf0 0x10093c000 + 204272 15 blaboo 0x000000010097190c 0x10093c000 + 219404 ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ここにある&lt;code class=&quot;highlighter-rouge&quot;&gt;slice_uuid&lt;/code&gt;とマッチングされるシンボルファイル(dSYM)を使ってApp crash logを分析します。あと、&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread 0 Crashed&lt;/code&gt;で自分のアプリ名前が見える部分を探します。&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Tech Note TN2151 Understanding and Analyzing Application Crash Reports&lt;/a&gt;のサイトに書いてるコマンドを使って分析する予定です。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;atos &lt;span class=&quot;nt&quot;&gt;-arch&lt;/span&gt; arm64 &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; TheElements.app.dSYM/Contents/Resources/DWARF/TheElements &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; 0x1000e4000 0x00000001000effdc &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このコマンドを上で調査した内容で変更したら下記のようです。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# &quot;slice_uuid&quot;:&quot;7ed9caad-f7f7-31e6-8480-2d358fbef9c7&quot;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 13 blaboo 0x0000000100969608 0x10093c000 + 185864&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# atos -arch arm64 -o [slice_uuid].dSYM/Contents/Resources/DWARF/[AppName] -l [4番目のテキスト: 0x10093c000] [3番目のテキスト: 0x0000000100969608]&lt;/span&gt; atos &lt;span class=&quot;nt&quot;&gt;-arch&lt;/span&gt; arm64 &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; 7ED9CAAD-F7F7-31E6-8480-2D358FBEF9C7.dSYM/Contents/Resources/DWARF/blaboo &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; 0x10093c000 0x0000000100969608 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上記のコマンドを実行したら下記のような結果が見れます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-[FIRInstanceIDAuthKeychain removeItemsMatchingService:account:error:] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;blaboo&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; + 136 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上のようにアプリのcrashが発生した部分を大まかに確認することができます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;アップルが送ったApp crash logを分析する方法に関して見てみました。私たちのアプリのApp crash logを分析した結果Admobに問題があるみたいで、確認したらファイアベース(Firebase)からダウンロードしたファイル(&lt;code class=&quot;highlighter-rouge&quot;&gt;GoogleService-Info.plist&lt;/code&gt;)に&lt;code class=&quot;highlighter-rouge&quot;&gt;ADMOB_APP_ID&lt;/code&gt;が含まれていなくて問題が発生しました。それでファイアベース(Firebase)から新し&lt;code class=&quot;highlighter-rouge&quot;&gt;GoogleService-Info.plist&lt;/code&gt;ファイルをダウンロードして提供して解決しました。&lt;/p&gt; &lt;h2 id=&quot;ご参考&quot;&gt;ご参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Tech Note TN2151 Understanding and Analyzing Application Crash Reports: &lt;a href=&quot;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://appstoreconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app/1441741187/platform/ios/resolutioncenter&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 アプリ審査のためアプリを提出したがApp crash理由で拒絶(reject)されました。親切にも拒絶(reject)の理由とcrashログ(log)ファイルを一緒に送ってくらました。こんな感じで貰ったcrashログ(log)ファイルを分析してどこの部分でエラーが発生したかを探す方法に関して説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/ios-app-crash-debugging.jpg"/></entry><entry xml:lang="ja"><title type="html">jwtインストールや設定</title><link href="https://dev-yakuza.github.io/laravel/jwt/" rel="alternate" type="text/html" title="jwtインストールや設定"/><published>2018-12-07T00:00:00+09:00</published><updated>2019-01-05T15:22:47+09:00</updated><id>https://dev-yakuza.github.io/laravel/jwt-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/laravel/jwt/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)でトークンベース認証システムを実装するためjwt(Json Web Token)を使ってみようかと思います。jwt認証システムを自ら全て実装するには難しいし時間も結構かかります。それで私たちは&lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;tymon/jwt-auth&lt;/a&gt;ミドルウェア(Middleware)を使ってjwt認証システムを開発してみようとします。&lt;/p&gt; &lt;p&gt;このブログでは&lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;をインストールして設定する方法について説明します。&lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;に関してもっと詳しくは下記のリンクを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;tymon/jwt-auth: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;tymon/jwt-auth document: &lt;a href=&quot;https://jwt-auth.readthedocs.io/en/develop/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://jwt-auth.readthedocs.io/en/develop/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;リポジトリrepository&quot;&gt;リポジトリ(Repository)&lt;/h2&gt; &lt;p&gt;私たちはjwt認証システムを実装したリポジトリ(Repository)を作りました。下記のリンクを押してリポジトリ(Repository)を確認してみてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;laravel-jwt-exercise: &lt;a href=&quot;https://github.com/dev-yakuza/laravel-jwt-exercise&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-jwt-exercise&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;開発環境構成&quot;&gt;開発環境構成&lt;/h2&gt; &lt;p&gt;ここで説明する内容はLaradockとアンシブル(Ansible)を使って作ったララベル(Laravel)開発環境上で開発やテストします。Laradockとアンシブル(Ansible)を使ってララベル(Laravel)開発環境については下のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laravel/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ララベル&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;ミドルウェアmiddlewareインストール&quot;&gt;ミドルウェア(Middleware)インストール&lt;/h2&gt; &lt;p&gt;jwt認証システムを開発するため下記のcomposerコマンドで&lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;ミドルウェア(Middleware)をインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; composer require tymon/jwt-auth &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;プロバイダー設定&quot;&gt;プロバイダー設定&lt;/h2&gt; &lt;p&gt;ララベル(Laravel)プロジェクトへ&lt;code class=&quot;highlighter-rouge&quot;&gt;config/app.php&lt;/code&gt;ファイルを開いて下記のようにプロバイダー(Provider)を設定します。&lt;/p&gt; &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'providers'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tymon\JWTAuth\Providers\LaravelServiceProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;設定が完了されたら下のartisanコマンドでミドルウェア(Middleware)を適用します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan vendor:publish &lt;span class=&quot;nt&quot;&gt;--provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tymon&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\J&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;WTAuth&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;roviders&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aravelServiceProvider&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のようにエラーが発生したら&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In ProviderRepository.php line 208: Class &lt;span class=&quot;s1&quot;&gt;'Tymon\JWTAuth\Providers\LaravelServiceProvider'&lt;/span&gt; not found &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;インストールした&lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;ミドルウェア(Middleware)のバージョンをアップデートをする必要があります。&lt;code class=&quot;highlighter-rouge&quot;&gt;composer.json&lt;/code&gt;ファイルを下のように修正します。&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;require&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tymon/jwt-auth&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^1.0.0-rc.3&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;バージョンを修正したら下記のようにcomposerコマンドでバージョンをアップデートします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer update &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そしてまたartisanコマンドでミドルウェア(Middleware)を適用します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan vendor:publish &lt;span class=&quot;nt&quot;&gt;--provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tymon&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\J&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;WTAuth&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;roviders&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aravelServiceProvider&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;シークレットキー生成&quot;&gt;シークレットキー生成&lt;/h2&gt; &lt;p&gt;インストールした&lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;ミドルウェア(Middleware)が使えるシークレットキー(secret key)を生成します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan jwt:secret &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;環境設定ファイルである&lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt;を開いて下の部分に下記のような内容が追加されたか確認します。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;JWT_SECRET=******* &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;jwt(Json Web Token)ベース認証システムを開発するため&lt;code class=&quot;highlighter-rouge&quot;&gt;tymon/jwt-auth&lt;/code&gt;ミドルウェア(Middleware)をインストールや設定する方法について見てみました。次のブログでは実際jwtを使って認証システムを開発する方法について紹介します。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;tymon/jwt-auth: &lt;a href=&quot;https://github.com/tymondesigns/jwt-auth&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/tymondesigns/jwt-auth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;tymon/jwt-auth document: &lt;a href=&quot;https://jwt-auth.readthedocs.io/en/develop/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://jwt-auth.readthedocs.io/en/develop/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 ララベル(Laravel)でトークンベース認証システムを実装するためjwt(Json Web Token)を使ってみようかと思います。jwt認証システムを自ら全て実装するには難しいし時間も結構かかります。それで私たちはtymon/jwt-authミドルウェア(Middleware)を使ってjwt認証システムを開発してみようとします。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/laravel/jwt.jpg"/></entry><entry xml:lang="ja"><title type="html">アンシブル&amp;amp;ララベル</title><link href="https://dev-yakuza.github.io/environment/ansible-laravel/" rel="alternate" type="text/html" title="アンシブル&amp;ララベル"/><published>2018-12-06T00:00:00+09:00</published><updated>2018-12-19T17:58:34+09:00</updated><id>https://dev-yakuza.github.io/environment/ansible-laravel-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/environment/ansible-laravel/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;以前のブログでアンシブル(Ansible)を使ってLaradockをインストールしました。今回はララベル(Laravel)を開発するためララベル(Laravel)をインストールしてララベル(Laravel)プロジェクトを生成してみます。&lt;/p&gt; &lt;p&gt;このブログは下記のブログのシリーズです。理解のため下記のブログを先見ることをお勧めします。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/vagrant-install-and-usage/&quot; target=&quot;_blank&quot;&gt;vagrantインストールや使い方&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/install-ansible/&quot; target=&quot;_blank&quot;&gt;アンシブルインストール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-playbook/&quot; target=&quot;_blank&quot;&gt;アンシブルプレイブック&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-docker/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ドッカー&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laradock/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;Laradock&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;phpとcomposer設定&quot;&gt;phpとcomposer設定&lt;/h2&gt; &lt;p&gt;自分のローカルマシン(host system)にphpとcomposerがインストールされたらこの段階はスキップしてもいいです。ララベル(Laravel)プロジェクトを生成するためphpとcomposerを仮想マシン(guest system)にインストールする予定です。&lt;/p&gt; &lt;p&gt;今まで作ったフォルダにphpとcomposerをインストールするアンシブルプレイブック(Ansible Playbook)の&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;を追加します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- docker | | |-- tasks | | | |-- main.yml | |-- laradock | | |-- tasks | | | |-- main.yml | |-- php | | |-- tasks | | | |-- main.yml | |-- playbook.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;アンシブルプレイブック(Ansible Playbook)ファイルにも新しく追加したphpの&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;を追加します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;laradock&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;追加したアンシブルプレイブック(Ansible Playbook)の&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;ファイルである&lt;code class=&quot;highlighter-rouge&quot;&gt;php/tasks/main.yml&lt;/code&gt;ファイルを下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Add php7.2 repo&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apt_repository&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ppa:ondrej/php'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install php&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2-mbstring&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2-xml&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;present&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update_cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;yes&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;check composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stat&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;path=/usr/local/bin/composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;composer_bin&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;download composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;get_url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://getcomposer.org/installer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tmp/installer&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cat /tmp/installer | php -- --install-dir=/usr/local/bin&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rename composer.phar to composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mv /usr/local/bin/composer.phar /usr/local/bin/composer&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;make composer executable&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/local/bin/composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;a+x&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;not composer_bin.stat.exists&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stop apache2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;update-rc.d apache2 disable&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;追加した&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;task&lt;/code&gt;を一つずつみてみます。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Add php7.2 repo&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apt_repository&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ppa:ondrej/php'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;php 7.2をインストールするため&lt;code class=&quot;highlighter-rouge&quot;&gt;apt&lt;/code&gt;へphp7.2のリポジトリ(repository)を追加します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install php&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pkg&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2-mbstring&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php7.2-xml&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;present&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update_cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;yes&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;php7.2とララベル(Laravel)インストールや実行に必要なphpモジュールをインストールします。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;check composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stat&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;path=/usr/local/bin/composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;composer_bin&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;composerのインストールする前composerの実行ファイルが存在するかチェックしてその結果を&lt;code class=&quot;highlighter-rouge&quot;&gt;composer_bin&lt;/code&gt;に保存します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;not composer_bin.stat.exists&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;色んな&lt;code class=&quot;highlighter-rouge&quot;&gt;task&lt;/code&gt;をブロック(block)で囲みます。また、このブロックは私たちが上記で保存した&lt;code class=&quot;highlighter-rouge&quot;&gt;composer_bin&lt;/code&gt;が存在しない場合のみで実行します。&lt;/p&gt; &lt;p&gt;ブロック(block)中を一つずつみてみます。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;download composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;get_url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://getcomposer.org/installer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tmp/installer&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;composerインストールスクリプトを&lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/instller&lt;/code&gt;ファイルにダウンロードします。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install composer&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cat /tmp/installer | php -- --install-dir=/usr/local/bin&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;composerインストールスクリプトを使って&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin&lt;/code&gt;にcomposerをインストールします。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rename composer.phar to composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mv /usr/local/bin/composer.phar /usr/local/bin/composer&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;インストールされたcomposerファイルを(&lt;code class=&quot;highlighter-rouge&quot;&gt;composer.phar&lt;/code&gt;)の名前を&lt;code class=&quot;highlighter-rouge&quot;&gt;composer&lt;/code&gt;に変更します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;make composer executable&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/local/bin/composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;a+x&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;composerが実行ができるように権限を変更します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stop apache2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;update-rc.d apache2 disable&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;phpをインストールした後、仮想マシン(guest system)を再起動すると&lt;code class=&quot;highlighter-rouge&quot;&gt;apache2&lt;/code&gt;サーバが起動されて同じポート(port)を使ってるドッカー(Docker)が起動されない問題があります。&lt;code class=&quot;highlighter-rouge&quot;&gt;apache2&lt;/code&gt;サーバが仮想マシン(guest syste)が再起動する時再起動されないように設定します。&lt;/p&gt; &lt;h2 id=&quot;phpとcomposerインストール&quot;&gt;phpとcomposerインストール&lt;/h2&gt; &lt;p&gt;上記で作ったアンシブルプレイブック(Ansible Playbook)の&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;を実行してphpとcomposerをインストールします。私たちはこの&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;だけ実行できるようにタグ(tag)を指定したのでタグ(tag)オプションを追加したアンシブルプレイブック(Ansible Playbook)コマンドを下記のように実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#vagrant ssh&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ansible-playbook /vagrant/ansible/playbook.yml &lt;span class=&quot;nt&quot;&gt;--tags&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'php'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下にあるコマンドでインストールがうまくできたか確認します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#vagrant ssh&lt;/span&gt; php &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; composer &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ララベルプロジェクト生成&quot;&gt;ララベルプロジェクト生成&lt;/h2&gt; &lt;p&gt;下記のコマンドでララベル(Laravel)プロジェクトを生成します。既存のララベル(Laravel)プロジェクトを持ってる方はこの部分はスキップしてもいいです。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#vagrant ssh&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /vagrant composer create-project laravel/laravel app &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ララベルプロジェクト設定&quot;&gt;ララベルプロジェクト設定&lt;/h2&gt; &lt;p&gt;私たちは以前のブログ(&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-laradock/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;Laradock&lt;/a&gt;)でLaradockのインストール&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;を下記のように作成しました。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;change project folder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/lib/laradock/.env&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=*.*'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=/vagrant/app'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;replace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この部分でLaradockのworkspaceドッカー(Docker)が実行される時&lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant/appp&lt;/code&gt;フォルダと同期化するように設定しました。したがって、私たちは新しプロジェクトを&lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant&lt;/code&gt;フォルダに&lt;code class=&quot;highlighter-rouge&quot;&gt;/app&lt;/code&gt;のフォルダ名で生成しました。皆さんが既存のララベル(Laravel)プロジェクトを持ってるだったら&lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant/appp&lt;/code&gt;フォルダにコピーするか以前のブログで作ったLaradockの&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;中で上記の部分を皆さんのララベル(Laravel)プロジェクトフォルダで指定して使ってください。&lt;/p&gt; &lt;h2 id=&quot;ララベルプロジェクト確認&quot;&gt;ララベルプロジェクト確認&lt;/h2&gt; &lt;p&gt;また、localhostに接続したら下記のようにララベル(Laravel)の基本画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/laravel.png&quot; alt=&quot;laravel first page&quot; /&gt;&lt;/p&gt; &lt;p&gt;ララベル(Laravel)設定がよく出来てない時は下記のように500エラー画面が出ます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/laravel_error.png&quot; alt=&quot;laravel 500 error page&quot; /&gt;&lt;/p&gt; &lt;p&gt;ララベル(Laravel)設定中で下記の部分を全て実行したか確認します。&lt;code class=&quot;highlighter-rouge&quot;&gt;composer create-project laravel/laravel app&lt;/code&gt;コマンドでララベル(Laravel)プロジェクトを新しく生成し場合、下記の設定は自動で実行されます。&lt;/p&gt; &lt;p&gt;ララベル(Laravel)プロジェクトに必要なライブラリはインストルしたか？&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer install &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ララベル(Laravel)の環境ファイルは生成したか？&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp .env.example .env &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ララベル(Laravel)のキーは生成したか？&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan key:generate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;phpmyadmin&quot;&gt;phpmyadmin&lt;/h2&gt; &lt;p&gt;データベースを触るためインストールした&lt;code class=&quot;highlighter-rouge&quot;&gt;phpmyadmin&lt;/code&gt;に接続してみます。&lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:8080&lt;/code&gt;で接続したら&lt;code class=&quot;highlighter-rouge&quot;&gt;phpmyadmin&lt;/code&gt;の画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/phpmyadmin_login.png&quot; alt=&quot;phpmyadmin login&quot; /&gt;&lt;/p&gt; &lt;p&gt;何も設定してなかったら下の情報を入力して接続します。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server: mysql username: root password: root &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このように接続した後下記のような画面が見えます。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/phpmyadmin_change_password.png&quot; alt=&quot;phpmyadmin change password&quot; /&gt;&lt;/p&gt; &lt;p&gt;画面の真ん中にある&lt;code class=&quot;highlighter-rouge&quot;&gt;Change password&lt;/code&gt;を押してパスワードを変更します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/phpmyadmin_new_password.png&quot; alt=&quot;phpmyadmin new password&quot; /&gt;&lt;/p&gt; &lt;p&gt;上部にあるメニュー中で&lt;code class=&quot;highlighter-rouge&quot;&gt;Database&lt;/code&gt;を押してララベル(Laravel)と連結するデータベースを生成します。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/category/environment/ansible-laravel/phpmyadmin_new_database.png&quot; alt=&quot;phpmyadmin new database&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;ララベルdb設定&quot;&gt;ララベルDB設定&lt;/h2&gt; &lt;p&gt;上記で&lt;code class=&quot;highlighter-rouge&quot;&gt;phpmyadmin&lt;/code&gt;を使って作ったデータベース(Database)をララベル(Laravel)プロジェクトに連結する必要があります。ララベル(Laravel)プロジェクトの環境ファイルである&lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt;を開いたら下のように内容を確認することができます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... &lt;span class=&quot;nv&quot;&gt;DB_CONNECTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mysql &lt;span class=&quot;nv&quot;&gt;DB_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;127.0.0.1 &lt;span class=&quot;nv&quot;&gt;DB_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3306 &lt;span class=&quot;nv&quot;&gt;DB_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;homestead &lt;span class=&quot;nv&quot;&gt;DB_USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;homestead &lt;span class=&quot;nv&quot;&gt;DB_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;secret ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この部分を下記のように修正します。&lt;code class=&quot;highlighter-rouge&quot;&gt;DB_DATABASE&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;DB_PASSWORD&lt;/code&gt;の部分は皆さんが設定した内容を入力します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... &lt;span class=&quot;nv&quot;&gt;DB_CONNECTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mysql &lt;span class=&quot;nv&quot;&gt;DB_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mysql &lt;span class=&quot;nv&quot;&gt;DB_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3306 &lt;span class=&quot;nv&quot;&gt;DB_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;app &lt;span class=&quot;nv&quot;&gt;DB_USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root &lt;span class=&quot;nv&quot;&gt;DB_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*******&lt;/span&gt; ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このように修正したら下記のララベル(Laravel)コマンドでララベル(Laravel)が基本的提供してるユーザーテーブル(User Table)を生成してみます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo docker exec -it laradock_workspace_1 bash&lt;/span&gt; php artisan migrate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ララベル(Laravel)が基本的提供してるユーザーテーブル(User Table)を使わない予定ならララベル(Laravel)コマンドを使って生成したテーブルを削除します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan migrate:rollback &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;vagrant、アンシブル(Ansible)、Laradockを使ってララベル(Laravel)開発環境を構築してみました。また、この開発環境構築を通じてアンシブル(Ansible)とドッカー(Docker)を少しみてみました。アンシブル(Ansible)とドッカー(Docker)を上手く使えばよく聞こえる&lt;code class=&quot;highlighter-rouge&quot;&gt;Devops&lt;/code&gt;ができる開発者になれるんじゃないかなと思います。&lt;/p&gt; &lt;p&gt;今後はこの&lt;a href=&quot;https://dev-yakuza.github.io/environment/&quot; target=&quot;_blank&quot;&gt;開発環境&lt;/a&gt;カテゴリには開発構築、ドッカー(Docker)、アンシブル(Ansible)と関係ある内容を追加する予定です。また、ララベル(Laravel)開発と関係あるブログは&lt;a href=&quot;https://dev-yakuza.github.io/laravel/&quot; target=&quot;_blank&quot;&gt;ララベル&lt;/a&gt;カテゴリに作成する予定なのでご参考してください。&lt;/p&gt; &lt;p&gt;今まで作ったララベル(Laravel)開発環境を下記のレポジトリ(Repository)で確認できます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dev-yakuza/laravel-devtool&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/laravel-devtool&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://laradock.io/documentation/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://laradock.io/documentation/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 以前のブログでアンシブル(Ansible)を使ってLaradockをインストールしました。今回はララベル(Laravel)を開発するためララベル(Laravel)をインストールしてララベル(Laravel)プロジェクトを生成してみます。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/environment/ansible-laravel.jpg"/></entry><entry xml:lang="ja"><title type="html">アンシブル&amp;amp;Laradock</title><link href="https://dev-yakuza.github.io/environment/ansible-laradock/" rel="alternate" type="text/html" title="アンシブル&amp;Laradock"/><published>2018-12-05T00:00:00+09:00</published><updated>2018-12-10T17:38:20+09:00</updated><id>https://dev-yakuza.github.io/environment/ansible-laradock-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/environment/ansible-laradock/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;最近世の中は本当にないものがないです。私たちが考えてることはすでに世の中どこか存在して共有されています。Laradockはララベル(Laravel)の開発環境へ必要な物をドッカー(Docker)で作って管理するプロジェクトです。もっと詳しく内容は公式サイトを参考してください。(&lt;a href=&quot;https://github.com/laradock/laradock/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/laradock/laradock/&lt;/a&gt;). このブログではLaradockを使ってララベル(Laravel)開発環境を作る方法について説明します。&lt;/p&gt; &lt;p&gt;このブログは下記のブログのシリーズです。理解のため下記のブログを先見ることをお勧めします。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/vagrant-install-and-usage/&quot; target=&quot;_blank&quot;&gt;vagrantインストールや使い方&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/install-ansible/&quot; target=&quot;_blank&quot;&gt;アンシブルインストール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-playbook/&quot; target=&quot;_blank&quot;&gt;アンシブルプレイブック&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-docker/&quot; target=&quot;_blank&quot;&gt;アンシブル&amp;amp;ドッカー&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;開発環境構成&quot;&gt;開発環境構成&lt;/h2&gt; &lt;p&gt;Laradockは開発環境を構成のため色んなドッカー(Docker)を提供してます。したがって、自分が開発したい環境に合わせてドッカー(Docker)を選択してインストールする必要があります。私たちは下記の項目で開発環境を構成する要諦です。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;nginx&lt;/li&gt; &lt;li&gt;mysql&lt;/li&gt; &lt;li&gt;phpmyadmin&lt;/li&gt; &lt;li&gt;workspace&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;仮想マシン設定修正&quot;&gt;仮想マシン設定修正&lt;/h2&gt; &lt;p&gt;仮想マシンの(guest system)の設定を修正するため下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;Vagrantfile&lt;/code&gt;を修正します。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# -*- mode: ruby -*-&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# vi: set ft=ruby :&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:virtualbox&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;laravel-dev&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;forwarded_port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;guest: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;host: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;forwarded_port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;guest: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;host: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;after&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:up&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;trigger Docker after Vagrant Up&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run_remote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;inline: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sudo ansible-playbook /vagrant/ansible/playbook.yml --tags 'docker'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;仮想マシン(guest system)がvirtualboxで表示される名前を&lt;code class=&quot;highlighter-rouge&quot;&gt;vb.name&lt;/code&gt;を使って特定な名前(&lt;code class=&quot;highlighter-rouge&quot;&gt;laravel-dev&lt;/code&gt;)を設定しました。この部分は実際開発環境構成とは関係ありません。ただ、virtualboxに表示される名前を分かりやすくするためです。&lt;/p&gt; &lt;p&gt;vagrantの&lt;code class=&quot;highlighter-rouge&quot;&gt;config.vm.network &quot;forwarded_port&quot;&lt;/code&gt;を使ってローカルマシン(host system)のポートを仮想マシン(guest system)のポートに連結(port-forward)させました。今からローカルマシン(host system)のポートを使って仮想マシン(guest system)のポートに接続ができます。80ポートはララベル(Laravel)プロジェクトのため、8080はphpmyadminへ接続するため連結しました。&lt;/p&gt; &lt;p&gt;仮想マシン(guest system)をvagrantコマンド(&lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant halt&lt;/code&gt;)で中止させてまたvagrantコマンド(&lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant up&lt;/code&gt;)で仮想マシン(guest system)を再起動したら、以前アンシブルプレイブック(Ansible Playbook)実行スクリプトはプロビジョンシェル(provision shell)中にあるので実行れないです。さらに、Laradockのドッカー(Docker)はいつも再起動(restart always)が設定されてないので仮想マシンが(guest system)が再起動する時ドッカー(Docker)が起動されないです。だから、私たちはVagrantfileに下のように追加しました。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;after&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:up&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;trigger Docker after Vagrant Up&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run_remote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;inline: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sudo ansible-playbook /vagrant/ansible/playbook.yml --tags 'docker'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この設定は私たちが&lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant up&lt;/code&gt;コマンドで仮想マシン(guest system)を実行した後、実行される内容を定義します。この仮想マシン(guest system)にアンシブルプレイブック(Ansible Playbook)を実行するように設定します。アンシブルプレイブック(Ansible Playbook)コマンドがプロビジョンシェル(provision shell)にあるコマンドと違って&lt;code class=&quot;highlighter-rouge&quot;&gt;--tags 'docker'&lt;/code&gt;が入っています。このオプションを使ったら&lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt;とタグ(tag)されたコマンドだけ実行することができます。もっと詳しく内容は下のアンシブルプレイブック(Ansible Playbook)設定でもう一度説明します。&lt;/p&gt; &lt;h2 id=&quot;アンシブルプレイブックへlaradock設定&quot;&gt;アンシブルプレイブックへLaradock設定&lt;/h2&gt; &lt;p&gt;以前のブログに続いてアンシブルプレイブック(Ansible Playbook)を使って開発環境構成を進めます。今まで構成したフォルダ構造は下記のようです。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- docker | | |-- tasks | | | |-- main.yml | |-- playbook.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ここにLaradockのための&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;を定義するため下のように&lt;code class=&quot;highlighter-rouge&quot;&gt;laradock/tasks/main.yml&lt;/code&gt;ファイルを追加します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- docker | | |-- tasks | | | |-- main.yml | |-- laradock | | |-- tasks | | | |-- main.yml | |-- playbook.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;アンシブルプレイブック(Ansible Playbook)のスタートポイントである&lt;code class=&quot;highlighter-rouge&quot;&gt;playbook.yml&lt;/code&gt;ファイルにLaradockの&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;を追加します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;laradock&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;追加した&lt;code class=&quot;highlighter-rouge&quot;&gt;laradock/tasks/main.yml&lt;/code&gt;ファイルを下記のように修正します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git clone Laradock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;repo=https://github.com/Laradock/laradock.git dest=/vagrant/app/laradock/ version=master&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;copy Laradock environment file&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;src=/vagrant/app/laradock/env-example dest=/vagrant/app/laradock/.env&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;change mysql version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/app/laradock/.env&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;MYSQL_VERSION=*.*'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;MYSQL_VERSION=5.7'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;replace&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;change project folder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/lib/laradock/.env&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=*.*'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=/vagrant/app'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;replace&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dokcer compose Laradock(nginx, mysql, phpmyadmin, workspace)&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;docker_service&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;present&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;project_src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/app/laradock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nginx&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mysql&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;phpmyadmin&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;workspace&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;追加したアンシブルプレイブック(Ansible Playook)の&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;をみてみましょう。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git clone Laradock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;repo=https://github.com/Laradock/laradock.git dest=/vagrant/app/laradock/ version=master&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;アンシブル(Ansible)のgitモジュールを使ってLaradockのリポジトリ(repository)をコピー(clone)します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;copy Laradock environment file&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;src=/vagrant/app/laradock/env-example dest=/vagrant/app/laradock/.env&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Laradockの設定ファイルの例(&lt;code class=&quot;highlighter-rouge&quot;&gt;env-example&lt;/code&gt;)を使える設定ファイル(&lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt;)にコピーします。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;change mysql version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/app/laradock/.env&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;MYSQL_VERSION=*.*'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;MYSQL_VERSION=5.7'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;replace&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Laradockの環境ファイルである&lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt;に&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt;バージョンを&lt;code class=&quot;highlighter-rouge&quot;&gt;5.7&lt;/code&gt;で変更します。最新のバージョン(&lt;code class=&quot;highlighter-rouge&quot;&gt;8.0&lt;/code&gt;)は使った場合ララベル(Laravel)からmysqlへ接続すると下記のようなエラーが発生します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;PDOException] SQLSTATE[HY000] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2054] The server requested authentication method unknown to the client &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;最新のmysqlの暗号認証方式がララベル(Laravel)から提供しなくて問題が発生してるみたいです。色んな解決方法がありますがmysql 8.0の機能をあまり使ってない場合、5.7でダウングレード(Downgrade)して使うことをお勧めします。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;change project folder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/lib/laradock/.env&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=*.*'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;APP_CODE_PATH_HOST=/vagrant/app'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;replace&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Laradockのworkspaceドッカー(Docker)は私たちが作るララベル(Laravel)プロジェクトが入る環境です。このドッカー(Docker)は&lt;code class=&quot;highlighter-rouge&quot;&gt;APP_CODE_PATH_HOST&lt;/code&gt;を参考してドッカー(Docker)をビルドや起動する時、ここに設定されたフォルダを同期化(synce)してララベル(Laravel)プロジェクトを起動します。基本設定は&lt;code class=&quot;highlighter-rouge&quot;&gt;APP_CODE_PATH_HOST=../&lt;/code&gt;なのでLaradockの上位フォルダを指定しています。この部分を私たちは&lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant/app&lt;/code&gt;で変更して使ってます。皆さんは皆さんのララベル(Laravel)プロジェクトのフォルダの位置で変更するか皆さんのララベル(Laravel)プロジェクトのフォルダ名をappで変更して使ったらいいと思います&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dokcer compose Laradock(nginx, mysql, phpmyadmin, workspace)&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;docker_service&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;present&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;restarted&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;project_src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/vagrant/app/laradock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nginx&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mysql&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;phpmyadmin&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;workspace&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;アンシブル(Ansible)のドッカーサービス(Docker Service)モジュールを使って私たちが必要なドッカー(Docker)をビルドして実行します。また、別のコマンドと違って&lt;code class=&quot;highlighter-rouge&quot;&gt;tag&lt;/code&gt;機能を使っています。アンシブルプレイブック(Ansible Playbook)を実行する時&lt;code class=&quot;highlighter-rouge&quot;&gt;--tags&lt;/code&gt;オプションを使ってタグ(tag)されたコマンド中で実行したいコマンドだけ実行することが可能です。&lt;code class=&quot;highlighter-rouge&quot;&gt;--tags&lt;/code&gt;オプションが設定されてないアンシブルプレイブック(Ansible Playboo)を実行すると全てのコマンドが実行されます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 全てのコマンド実行&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ansible-playbook /vagrant/ansible/playbook.yml &lt;span class=&quot;c&quot;&gt;# dockerでタグ(tag)されたコマンドだけ実行&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ansible-playbook /vagrant/ansible/playbook.yml &lt;span class=&quot;nt&quot;&gt;--tags&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'docker'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;アンシブルプレイブック実行&quot;&gt;アンシブルプレイブック実行&lt;/h2&gt; &lt;p&gt;アンシブルプレイブック(Ansible Playbook)でLaradockの&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;設定は終わりました。アンシブルプレイブック(Ansible Playbook)を実行してLaradockをインストールしてみましょう。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ansible-playbook /vagrant/ansible/playbook.yml &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;laradockインストール確認&quot;&gt;Laradockインストール確認&lt;/h2&gt; &lt;p&gt;アンシブルプレイブック(Ansible Playbook)でLaradockが上手くインストールされたか下記のドッカー(Docker)コマンドで確認します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vagrant ssh&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker ps &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;また、ローカルマシン(host system)で&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost&lt;/code&gt;を実行して&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;404 Not Foud&lt;/code&gt;エラー画面が表示されます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;アンシブル(Ansible)を使ってLaradockをインストールしてララベル(Laravel)開発環境を準備しました。今はララベル(Laravel)プロジェクトが設定されてないので&lt;code class=&quot;highlighter-rouge&quot;&gt;404 Not Found&lt;/code&gt;エラーが見えますが、開発環境は上手くインストールされました。次はLaradock開発環境にララベル(Laravel)プロジェクトを設定してみます。&lt;/p&gt; &lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://laradock.io/documentation/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://laradock.io/documentation/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 最近世の中は本当にないものがないです。私たちが考えてることはすでに世の中どこか存在して共有されています。Laradockはララベル(Laravel)の開発環境へ必要な物をドッカー(Docker)で作って管理するプロジェクトです。もっと詳しく内容は公式サイトを参考してください。(https://github.com/laradock/laradock/). このブログではLaradockを使ってララベル(Laravel)開発環境を作る方法について説明します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/environment/ansible-laradock.jpg"/></entry><entry xml:lang="ja"><title type="html">アンシブル&amp;amp;ドッカー</title><link href="https://dev-yakuza.github.io/environment/ansible-docker/" rel="alternate" type="text/html" title="アンシブル&amp;ドッカー"/><published>2018-12-04T00:00:00+09:00</published><updated>2018-12-05T16:39:12+09:00</updated><id>https://dev-yakuza.github.io/environment/ansible_docker-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/environment/ansible-docker/">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;サーバー開発にドッカー(Docker)は必須になりました。ここでドッカー(Docker)について全ての説明は難しいと思います。ブログを作成しながらちょっとちょっと説明することでドッカー(Docker)を説明します。このブログではアンシブルプレイブック(Ansible Playbook)を使ってvagrantにドッカー(Docker)とドッカーコンポーズ(Docker Compose)をインストールする方法を紹介します。&lt;/p&gt; &lt;p&gt;このブログは下の3つのブログを全て進めたと思って説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/vagrant-install-and-usage/&quot; target=&quot;_blank&quot;&gt;vagrantインストールや使い方&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/install-ansible/&quot; target=&quot;_blank&quot;&gt;アンシブルインストール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/environment/ansible-playbook/&quot; target=&quot;_blank&quot;&gt;アンシブルプレイブック&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;アンシブルプレイブックにドッカー設定&quot;&gt;アンシブルプレイブックにドッカー設定&lt;/h2&gt; &lt;p&gt;今まで作ったvagrant仮想マシン(guest system)のためのディレクトリ(directory)構造は下記の通りです。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- playbook.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ここに私たちはドッカー(Docker)インストールに関する&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;を定義してアンシブルプレイブック(Ansible Playbook)に追加する予定です。下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;ansible&lt;/code&gt;フォルダ下へ&lt;code class=&quot;highlighter-rouge&quot;&gt;docker/tasks/main.yml&lt;/code&gt;ファイルを追加します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- ansible | |-- init | | |-- tasks | | | |-- main.yml | |-- docker | | |-- tasks | | | |-- main.yml | |-- playbook.yml |-- Vagrantfile &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;アンシブルプレイブック(Ansible Playbook)のスタートポイントである&lt;code class=&quot;highlighter-rouge&quot;&gt;playbook.yml&lt;/code&gt;ファイルを下のように追加します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;追加した&lt;code class=&quot;highlighter-rouge&quot;&gt;docker/tasks/main.yml&lt;/code&gt;ファイルを下のように修正します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install docker&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;curl https://get.docker.com | sh&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Modify privilege&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;usermod -aG docker $USER&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Change privilege of docker&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dest=/usr/bin/docker mode=+x&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python docker / docker-compse module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pip&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker-compose&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;今からアンシブル(Ansible)コマンドを1つずつ見ます。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install docker&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;curl https://get.docker.com | sh&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ドッカー(Docker)インストールスクリプトを使ってドッカー(Docker)をインストールします。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Modify privilege&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;usermod -aG docker $USER&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Change privilege of docker&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;chmod +x /usr/bin/docker&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ドッカー(Docker)のユーザーや権限を変更します。&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python docker / docker-compse module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pip&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker-compose&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;パイソン(python)のpipを使ってパイソンドッカーモジュール(python docker module)とドッカーコンポーズ(Docker Compose)をインストールします。&lt;/p&gt; &lt;h2 id=&quot;アンシブル実行&quot;&gt;アンシブル実行&lt;/h2&gt; &lt;p&gt;上でアンシブルプレイブック(Ansible Playbook)へ追加したドッカー(Docker)インストール&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;を実行するため下のアンシブル(Ansible)コマンドを仮想マシン(guest system)で実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant ssh &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ansible-playbook /vagrant/ansible/playbook.yml &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;すでに環境がある状態で進めるのでアンシブルプレイブック(Ansible Playbook)を実行しました。新しく開発環境を作るときはvagrantのプロビジョンシェル(provision shell)へアンシブルプレイブック(Ansible Playbook)実行スクリプトを追加したので自動に実行されます。&lt;/p&gt; &lt;p&gt;確認するため下記のvagrantコマンドをローカルマシン(host system)で実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant destroy vagrant up &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ドッカーインストール確認&quot;&gt;ドッカーインストール確認&lt;/h2&gt; &lt;p&gt;ドッカー(Docker)がアンシブルプレイブック(Ansible Playbook)で仮想マシン(guest system)に上手くインストールされたかを確認するため下記のドッカー(Docker)コマンドで確認します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant ssh docker &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; docker-compose &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;アンシブルプレイブック(Ansible Playbook)でドッカー(Docker)とドッカーコンポーズ(Docker Compose)を追加して仮想マシン(guest system)へインストールする方法を見ました。今からはドッカー(Docker)を使って好きな開発環境を作ることができます。次のブログではドッカー(Docker)とドッカーコンポーズ(Docker Compose)を使ってララベル(Laravel)開発環境を作る方法について説明します。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html">概要 サーバー開発にドッカー(Docker)は必須になりました。ここでドッカー(Docker)について全ての説明は難しいと思います。ブログを作成しながらちょっとちょっと説明することでドッカー(Docker)を説明します。このブログではアンシブルプレイブック(Ansible Playbook)を使ってvagrantにドッカー(Docker)とドッカーコンポーズ(Docker Compose)をインストールする方法を紹介します。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/environment/ansible-docker.jpg"/></entry></feed>